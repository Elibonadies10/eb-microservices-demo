{"version":3,"file":"static/js/main.69c96693.js","mappings":"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","sources":["../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/hoist-non-react-statics/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/hoist-non-react-statics/node_modules/react-is/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/shimmer/index.js","../node_modules/ua-parser-js/src/ua-parser.js","../node_modules/zone.js/fesm2015/zone.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../webpack/bootstrap","../webpack/runtime/amd options","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/deprecations.ts","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/@grafana/faro-core/src/utils/is.ts","../node_modules/@grafana/faro-react/src/dependencies.ts","../node_modules/@grafana/faro-react/src/utils/reactVersion.ts","../node_modules/@grafana/faro-react/src/errorBoundary/FaroErrorBoundary.tsx","../node_modules/@grafana/faro-core/src/internalLogger/const.ts","../node_modules/@grafana/faro-core/src/utils/noop.ts","../node_modules/@grafana/faro-core/src/unpatchedConsole/const.ts","../node_modules/@grafana/faro-core/src/extensions/baseExtension.ts","../node_modules/@grafana/faro-core/src/instrumentations/base.ts","../node_modules/@grafana/faro-core/src/version.ts","../node_modules/@grafana/faro-react/src/router/types.ts","../node_modules/@grafana/faro-core/src/semantic.ts","../node_modules/@grafana/faro-react/src/router/v4v5/activeEvent.ts","../node_modules/@grafana/faro-react/src/router/v4v5/routerDependencies.ts","../node_modules/@grafana/faro-react/src/router/v4v5/FaroRoute.tsx","../node_modules/@grafana/faro-core/src/globalObject/globalObject.ts","../node_modules/@grafana/faro-react/src/router/v4v5/initialize.ts","../node_modules/@grafana/faro-react/src/router/v6/routerDependencies.ts","../node_modules/@grafana/faro-react/src/router/v6/utils.ts","../node_modules/@grafana/faro-react/src/router/v6/FaroRoutes.tsx","../node_modules/@grafana/faro-react/src/router/v6/initialize.ts","../node_modules/@grafana/faro-react/src/profiler/FaroProfiler.tsx","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/const.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/stackFrames/const.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/stackFrames/buildStackFrame.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/stackFrames/getDataFromSafariExtensions.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/stackFrames/getStackFramesFromError.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/getErrorDetails.ts","../node_modules/@grafana/faro-core/src/api/exceptions/const.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/registerOnerror.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/getValueAndTypeFromMessage.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/registerOnunhandledrejection.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/instrumentation.ts","../node_modules/web-vitals/dist/web-vitals.js","../node_modules/@grafana/faro-web-sdk/src/instrumentations/webVitals/webVitalsBasic.ts","../node_modules/web-vitals/dist/web-vitals.attribution.js","../node_modules/@grafana/faro-core/src/consts.ts","../node_modules/@grafana/faro-core/src/sdk/const.ts","../node_modules/@grafana/faro-core/src/sdk/registerFaro.ts","../node_modules/@grafana/faro-core/src/sdk/internalFaroGlobalObject.ts","../node_modules/@grafana/faro-core/src/sdk/faroGlobalObject.ts","../node_modules/@grafana/faro-web-sdk/src/utils/webStorage.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/instrumentationConstants.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/webVitals/webVitalsWithAttribution.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/webVitals/instrumentation.ts","../node_modules/@grafana/faro-core/src/utils/date.ts","../node_modules/@grafana/faro-core/src/utils/shortId.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/sampling.ts","../node_modules/@grafana/faro-web-sdk/src/utils/throttle.ts","../node_modules/@grafana/faro-web-sdk/src/utils/json.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/sessionConstants.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/sessionManagerUtils.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/PersistentSessionsManager.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/VolatileSessionManager.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/sessionManager/getSessionManagerByConfig.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/session/instrumentation.ts","../node_modules/@grafana/faro-web-sdk/src/metas/session/createSession.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/view/instrumentation.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/performanceConstants.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/performanceUtils.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/resource.ts","../node_modules/@grafana/faro-core/src/utils/logLevels.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/instrumentation.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/performance/navigation.ts","../node_modules/@grafana/faro-core/src/api/logs/const.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/console/instrumentation.ts","../node_modules/@grafana/faro-web-sdk/src/config/getWebInstrumentations.ts","../node_modules/@grafana/faro-core/src/transports/const.ts","../node_modules/@grafana/faro-core/src/utils/deepEqual.ts","../node_modules/@grafana/faro-core/src/api/exceptions/initialize.ts","../node_modules/@grafana/faro-core/src/api/initialize.ts","../node_modules/@grafana/faro-core/src/api/traces/initialize.ts","../node_modules/@grafana/faro-core/src/api/meta/initialize.ts","../node_modules/@grafana/faro-core/src/api/logs/initialize.ts","../node_modules/@grafana/faro-core/src/api/measurements/initialize.ts","../node_modules/@grafana/faro-core/src/api/events/initialize.ts","../node_modules/@grafana/faro-core/src/internalLogger/createInternalLogger.ts","../node_modules/@grafana/faro-core/src/internalLogger/initialize.ts","../node_modules/@grafana/faro-core/src/transports/batchExecutor.ts","../node_modules/@grafana/faro-core/src/transports/initialize.ts","../node_modules/@grafana/faro-core/src/unpatchedConsole/initialize.ts","../node_modules/@grafana/faro-core/src/initialize.ts","../node_modules/@grafana/faro-core/src/metas/initialize.ts","../node_modules/@grafana/faro-core/src/instrumentations/initialize.ts","../node_modules/@grafana/faro-core/src/metas/registerInitial.ts","../node_modules/@grafana/faro-core/src/utils/sourceMaps.ts","../node_modules/@grafana/faro-core/src/transports/registerInitial.ts","../node_modules/@grafana/faro-core/src/instrumentations/registerInitial.ts","../node_modules/@grafana/faro-core/src/config/const.ts","../node_modules/@grafana/faro-web-sdk/src/instrumentations/errors/stackFrames/parseStacktrace.ts","../node_modules/@grafana/faro-web-sdk/src/metas/browser/meta.ts","../node_modules/@grafana/faro-web-sdk/src/metas/const.ts","../node_modules/@grafana/faro-web-sdk/src/metas/page/meta.ts","../node_modules/@grafana/faro-web-sdk/src/metas/k6/meta.ts","../node_modules/@grafana/faro-core/src/transports/base.ts","../node_modules/@grafana/faro-core/src/transports/utils.ts","../node_modules/@grafana/faro-web-sdk/src/transports/fetch/transport.ts","../node_modules/@grafana/faro-core/src/utils/promiseBuffer.ts","../node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts","../node_modules/@opentelemetry/api/src/version.ts","../node_modules/@opentelemetry/api/src/internal/semver.ts","../node_modules/@opentelemetry/api/src/internal/global-utils.ts","../node_modules/@opentelemetry/api/src/context/context.ts","../node_modules/@opentelemetry/api/src/diag/types.ts","../node_modules/@opentelemetry/api/src/context/NoopContextManager.ts","../node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts","../node_modules/@opentelemetry/api/src/trace/trace_flags.ts","../node_modules/@opentelemetry/api/src/api/diag.ts","../node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts","../node_modules/@opentelemetry/api/src/api/context.ts","../node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts","../node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts","../node_modules/@opentelemetry/api/src/trace/context-utils.ts","../node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts","../node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","../node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts","../node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts","../node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","../node_modules/@opentelemetry/api/src/api/trace.ts","../node_modules/@opentelemetry/api/src/trace-api.ts","../node_modules/@opentelemetry/api/src/context-api.ts","../node_modules/@opentelemetry/context-zone-peer-dep/src/ZoneContextManager.ts","../node_modules/@opentelemetry/context-zone-peer-dep/src/util.ts","../node_modules/@opentelemetry/core/src/trace/suppress-tracing.ts","../node_modules/@opentelemetry/core/src/internal/validators.ts","../node_modules/@opentelemetry/core/src/trace/TraceState.ts","../node_modules/@opentelemetry/core/src/trace/W3CTraceContextPropagator.ts","../node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts","../node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts","../node_modules/@opentelemetry/api/src/api/metrics.ts","../node_modules/@opentelemetry/api/src/metrics-api.ts","../node_modules/@opentelemetry/api-logs/src/platform/browser/globalThis.ts","../node_modules/@opentelemetry/api-logs/src/internal/global-utils.ts","../node_modules/@opentelemetry/api-logs/src/NoopLogger.ts","../node_modules/@opentelemetry/api-logs/src/NoopLoggerProvider.ts","../node_modules/@opentelemetry/api-logs/src/api/logs.ts","../node_modules/@opentelemetry/api-logs/src/index.ts","../node_modules/@opentelemetry/api/src/diag-api.ts","../node_modules/@opentelemetry/semantic-conventions/src/resource/SemanticResourceAttributes.ts","../node_modules/@opentelemetry/core/src/platform/browser/sdk-info.ts","../node_modules/@opentelemetry/core/src/version.ts","../node_modules/@opentelemetry/resources/src/Resource.ts","../node_modules/@opentelemetry/resources/src/platform/browser/default-service-name.ts","../node_modules/@opentelemetry/api/src/propagation/NoopTextMapPropagator.ts","../node_modules/@opentelemetry/api/src/propagation/TextMapPropagator.ts","../node_modules/@opentelemetry/api/src/baggage/context-helpers.ts","../node_modules/@opentelemetry/api/src/baggage/internal/baggage-impl.ts","../node_modules/@opentelemetry/api/src/baggage/internal/symbol.ts","../node_modules/@opentelemetry/api/src/baggage/utils.ts","../node_modules/@opentelemetry/api/src/api/propagation.ts","../node_modules/@opentelemetry/core/src/utils/lodash.merge.ts","../node_modules/@opentelemetry/api/src/propagation-api.ts","../node_modules/@opentelemetry/core/src/utils/merge.ts","../node_modules/@opentelemetry/core/src/utils/sampling.ts","../node_modules/@opentelemetry/core/src/utils/environment.ts","../node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","../node_modules/@opentelemetry/core/src/platform/browser/environment.ts","../node_modules/@opentelemetry/core/src/propagation/composite.ts","../node_modules/@opentelemetry/core/src/baggage/constants.ts","../node_modules/@opentelemetry/core/src/baggage/utils.ts","../node_modules/@opentelemetry/core/src/baggage/propagation/W3CBaggagePropagator.ts","../node_modules/@opentelemetry/api/src/trace/span_kind.ts","../node_modules/@opentelemetry/api/src/trace/SamplingResult.ts","../node_modules/@opentelemetry/api/src/trace/status.ts","../node_modules/@opentelemetry/core/src/common/attributes.ts","../node_modules/@opentelemetry/core/src/platform/browser/performance.ts","../node_modules/@opentelemetry/core/src/common/time.ts","../node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Sampler.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOffSampler.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/AlwaysOnSampler.ts","../node_modules/@opentelemetry/core/src/common/global-error-handler.ts","../node_modules/@opentelemetry/core/src/common/logging-error-handler.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/ParentBasedSampler.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/config.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/utility.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/RandomIdGenerator.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/Tracer.ts","../node_modules/@opentelemetry/core/src/ExportResult.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/MultiSpanProcessor.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/export/NoopSpanProcessor.ts","../node_modules/@opentelemetry/core/src/utils/promise.ts","../node_modules/@opentelemetry/core/src/utils/callback.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/export/BatchSpanProcessorBase.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/BasicTracerProvider.ts","../node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/src/platform/browser/export/BatchSpanProcessor.ts","../node_modules/@opentelemetry/sdk-trace-web/src/StackContextManager.ts","../node_modules/@opentelemetry/sdk-trace-web/src/WebTracerProvider.ts","../node_modules/@opentelemetry/otlp-transformer/src/common/internal.ts","../node_modules/@opentelemetry/otlp-transformer/src/trace/internal.ts","../node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/src/common/time.ts","../node_modules/@opentelemetry/otlp-transformer/node_modules/@opentelemetry/core/src/common/hex-to-binary.ts","../node_modules/@opentelemetry/otlp-transformer/src/common/index.ts","../node_modules/@opentelemetry/otlp-transformer/src/resource/internal.ts","../node_modules/@opentelemetry/otlp-transformer/src/trace/types.ts","../node_modules/@opentelemetry/otlp-transformer/src/trace/index.ts","../node_modules/@grafana/faro-web-tracing/src/faroTraceExporter.ts","../node_modules/@grafana/faro-web-tracing/src/faroTraceExporter.utils.ts","../node_modules/@opentelemetry/instrumentation/src/utils.ts","../node_modules/@opentelemetry/instrumentation/src/instrumentation.ts","../node_modules/@opentelemetry/instrumentation/src/platform/browser/instrumentation.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/utils/url.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/common/time.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","../node_modules/@opentelemetry/instrumentation-fetch/src/enums/AttributeNames.ts","../node_modules/@opentelemetry/instrumentation-fetch/src/version.ts","../node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/core/src/platform/browser/globalThis.ts","../node_modules/@opentelemetry/instrumentation-fetch/src/fetch.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/platform/browser/performance.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/utils/url.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/core/src/common/time.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/enums/PerformanceTimingNames.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/src/utils.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/EventNames.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/src/version.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/src/enums/AttributeNames.ts","../node_modules/@opentelemetry/instrumentation-xml-http-request/src/xhr.ts","../node_modules/@grafana/faro-web-tracing/src/faroXhrInstrumentation.ts","../node_modules/@grafana/faro-web-tracing/src/instrumentationUtils.ts","../node_modules/@grafana/faro-web-tracing/src/getDefaultOTELInstrumentations.ts","../node_modules/@grafana/faro-web-tracing/src/sampler.ts","../node_modules/@grafana/faro-web-tracing/src/sessionSpanProcessor.ts","../node_modules/@opentelemetry/semantic-conventions/src/experimental_attributes.ts","../node_modules/@grafana/faro-web-tracing/src/instrumentation.ts","../node_modules/@opentelemetry/semantic-conventions/src/stable_attributes.ts","../node_modules/@opentelemetry/instrumentation/src/autoLoader.ts","../node_modules/@opentelemetry/instrumentation/src/autoLoaderUtils.ts","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/helpers/throttle.js","../node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/composeSignals.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/axios/lib/helpers/trackStream.js","../node_modules/axios/lib/adapters/fetch.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","App.tsx","../node_modules/@grafana/faro-web-sdk/src/initialize.ts","../node_modules/@grafana/faro-web-sdk/src/config/makeCoreConfig.ts","../node_modules/@grafana/faro-web-sdk/src/consts.ts","index.tsx","../node_modules/@grafana/faro-react/src/instrumentation.ts","../node_modules/@grafana/faro-react/src/router/initialize.ts","../node_modules/@grafana/faro-react/src/router/v6/withFaroRouterInstrumentation.ts"],"sourcesContent":["'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","'use strict'\n\nfunction isFunction (funktion) {\n  return typeof funktion === 'function'\n}\n\n// Default to complaining loudly when things don't go according to plan.\nvar logger = console.error.bind(console)\n\n// Sets a property on an object, preserving its enumerability.\n// This function assumes that the property is already writable.\nfunction defineProperty (obj, name, value) {\n  var enumerable = !!obj[name] && obj.propertyIsEnumerable(name)\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: enumerable,\n    writable: true,\n    value: value\n  })\n}\n\n// Keep initialization idempotent.\nfunction shimmer (options) {\n  if (options && options.logger) {\n    if (!isFunction(options.logger)) logger(\"new logger isn't a function, not replacing\")\n    else logger = options.logger\n  }\n}\n\nfunction wrap (nodule, name, wrapper) {\n  if (!nodule || !nodule[name]) {\n    logger('no original function ' + name + ' to wrap')\n    return\n  }\n\n  if (!wrapper) {\n    logger('no wrapper function')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!isFunction(nodule[name]) || !isFunction(wrapper)) {\n    logger('original object and wrapper must be functions')\n    return\n  }\n\n  var original = nodule[name]\n  var wrapped = wrapper(original, name)\n\n  defineProperty(wrapped, '__original', original)\n  defineProperty(wrapped, '__unwrap', function () {\n    if (nodule[name] === wrapped) defineProperty(nodule, name, original)\n  })\n  defineProperty(wrapped, '__wrapped', true)\n\n  defineProperty(nodule, name, wrapped)\n  return wrapped\n}\n\nfunction massWrap (nodules, names, wrapper) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to wrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      wrap(nodule, name, wrapper)\n    })\n  })\n}\n\nfunction unwrap (nodule, name) {\n  if (!nodule || !nodule[name]) {\n    logger('no function to unwrap.')\n    logger((new Error()).stack)\n    return\n  }\n\n  if (!nodule[name].__unwrap) {\n    logger('no original to unwrap to -- has ' + name + ' already been unwrapped?')\n  } else {\n    return nodule[name].__unwrap()\n  }\n}\n\nfunction massUnwrap (nodules, names) {\n  if (!nodules) {\n    logger('must provide one or more modules to patch')\n    logger((new Error()).stack)\n    return\n  } else if (!Array.isArray(nodules)) {\n    nodules = [nodules]\n  }\n\n  if (!(names && Array.isArray(names))) {\n    logger('must provide one or more functions to unwrap on modules')\n    return\n  }\n\n  nodules.forEach(function (nodule) {\n    names.forEach(function (name) {\n      unwrap(nodule, name)\n    })\n  })\n}\n\nshimmer.wrap = wrap\nshimmer.massWrap = massWrap\nshimmer.unwrap = unwrap\nshimmer.massUnwrap = massUnwrap\n\nmodule.exports = shimmer\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.40\n   Copyright © 2012-2024 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.40',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS',\n        SUFFIX_BROWSER = ' Browser';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return map.hasOwnProperty('*') ? map['*'] : str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /\\b(?:mxbrowser|mxios|myie2)\\/?([-\\w\\.]*)\\b/i                       // Maxthon\n            ], [VERSION, [NAME, 'Maxthon']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\\/ ]?([\\w\\.]*)/i,      \n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer/Sleipnir\n            // Trident based\n            /(avant|iemobile|slim(?:browser|boat|jet))[\\/ ]?([\\d\\.]*)/i,        // Avant/IEMobile/SlimBrowser/SlimBoat/Slimjet\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Blink/Webkit/KHTML based                                         // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ//Vivaldi/DuckDuckGo/Klar/Helio/Dragon\n            /(heytap|ovi|115)browser\\/([\\d\\.]+)/i,                              // HeyTap/Ovi/115\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /quark(?:pc)?\\/([-\\w\\.]+)/i                                         // Quark\n            ], [VERSION, [NAME, 'Quark']], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI' + SUFFIX_BROWSER]], [\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihoobrowser\\/?([\\w\\.]*)/i                                       // 360\n            ], [VERSION, [NAME, '360']], [\n            /\\b(qq)\\/([\\w\\.]+)/i                                                // QQ\n            ], [[NAME, /(.+)/, '$1Browser'], VERSION], [\n            /(oculus|sailfish|huawei|vivo|pico)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1' + SUFFIX_BROWSER], VERSION], [              // Oculus/Sailfish/HuaweiBrowser/VivoBrowser/PicoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345(?=browser|chrome|explorer))\\w*[\\/ ]?v?([\\w\\.]+)/i   // QQ/2345\n            ], [NAME, VERSION], [\n            /(lbbrowser|rekonq)/i,                                              // LieBao Browser/Rekonq\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n            /ome\\/([\\w\\.]+) \\w* ?(iron) saf/i,                                  // Iron\n            /ome\\/([\\w\\.]+).+qihu (360)[es]e/i                                  // 360\n            ], [VERSION, NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(wolvic|librewolf)\\/([\\w\\.]+)/i                                    // Wolvic/LibreWolf\n            ], [NAME, VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, [VERSION, /_/g, '.']], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-(?![lr])\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]((?!sm-[lr])[-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Honor\n            /(?:honor)([-\\w ]+)[;\\)]/i\n            ], [MODEL, [VENDOR, 'Honor'], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+; (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo(?!bc)\\w\\w)( bui|\\))/i,                           // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // TCL\n            /droid [\\w\\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\\w*(\\)| bui)/i\n            ], [MODEL, [VENDOR, 'TCL'], [TYPE, TABLET]], [\n\n            // itel\n            /(itel) ((\\w+))/i\n            ], [[VENDOR, lowerize], MODEL, [TYPE, strMapper, { 'tablet' : ['p10001l', 'w7001'], '*' : 'mobile' }]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // Energizer\n            /; (energy ?\\w+)(?: bui|\\))/i,\n            /; energizer ([\\w ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Energizer'], [TYPE, MOBILE]], [\n\n            // Cat\n            /; cat (b35);/i,\n            /; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Cat'], [TYPE, MOBILE]], [\n\n            // Smartfren\n            /((?:new )?andromax[\\w- ]+)(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Smartfren'], [TYPE, MOBILE]], [\n\n            // Nothing\n            /droid.+; (a(?:015|06[35]|142p?))/i\n            ], [MODEL, [VENDOR, 'Nothing'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron/Infinix/Tecno/Micromax/Advan\n            /; (imo) ((?!tab)[\\w ]+?)(?: bui|\\))/i,                             // IMO\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(imo) (tab \\w+)/i,                                                 // IMO\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /\\b(sm-[lr]\\d\\d[05][fnuw]?s?)\\b/i                                   // Samsung Galaxy Watch\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, WEARABLE]], [\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // XR\n            ///////////////////\n\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /(pico) (4|neo3(?: link|pro)?)/i                                    // Pico\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /; (quest( \\d| pro)?)/i                                             // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /(arkweb)\\/([\\w\\.]+)/i                                              // ArkWeb\n            ], [NAME, VERSION], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna/Servo\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS/OpenHarmony\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\nconst global = globalThis;\n// __Zone_symbol_prefix global can be used to override the default zone\n// symbol prefix with a custom one if needed.\nfunction __symbol__(name) {\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    return symbolPrefix + name;\n}\nfunction initZone() {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    class ZoneImpl {\n        // tslint:disable-next-line:require-internal-with-underscore\n        static { this.__symbol__ = __symbol__; }\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = ZoneImpl.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, ZoneImpl, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = (zoneSpec && zoneSpec.properties) || {};\n            this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            }\n            const zoneTask = task;\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            const { type, data: { isPeriodic = false, isRefreshable = false } = {} } = task;\n            if (task.state === notScheduled && (type === eventTask || type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && zoneTask._transitionTo(running, scheduled);\n            const previousTask = _currentTask;\n            _currentTask = zoneTask;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (type == macroTask && task.data && !isPeriodic && !isRefreshable) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, zoneTask, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                const state = task.state;\n                if (state !== notScheduled && state !== unknown) {\n                    if (type == eventTask || isPeriodic || (isRefreshable && state === scheduling)) {\n                        reEntryGuard && zoneTask._transitionTo(scheduled, running, scheduling);\n                    }\n                    else {\n                        const zoneDelegates = zoneTask._zoneDelegates;\n                        this._updateTaskCount(zoneTask, -1);\n                        reEntryGuard && zoneTask._transitionTo(notScheduled, running, notScheduled);\n                        if (isRefreshable) {\n                            zoneTask._zoneDelegates = zoneDelegates;\n                        }\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name +\n                    '; Execution: ' +\n                    this.name +\n                    ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = -1;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task),\n    };\n    class _ZoneDelegate {\n        get zone() {\n            return this._zone;\n        }\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = {\n                'microTask': 0,\n                'macroTask': 0,\n                'eventTask': 0,\n            };\n            this._zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this._zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this._zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this._zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this._zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt =\n                zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this._zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this._zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this._zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = this._zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this._zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this._zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS\n                ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec)\n                : new ZoneImpl(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS\n                ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source)\n                : callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS\n                ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source)\n                : callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS\n                ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error)\n                : true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS\n                ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs)\n                : task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = (counts[type] = prev + count);\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type,\n                };\n                this.hasTask(this._zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? \" or '\" + fromState2 + \"'\" : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount,\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !ZoneImpl[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask,\n    };\n    let _currentZoneFrame = { parent: null, zone: new ZoneImpl(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return ZoneImpl;\n}\n\nfunction loadZone() {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    const global = globalThis;\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone'] && (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function')) {\n        throw new Error('Zone already loaded.');\n    }\n    // Initialize global `Zone` constant.\n    global['Zone'] ??= initZone();\n    return global['Zone'];\n}\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Object.create */\nconst ObjectCreate = Object.create;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nconst ZONE_SYMBOL_ADD_EVENT_LISTENER = __symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nconst ZONE_SYMBOL_REMOVE_EVENT_LISTENER = __symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = __symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = __symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = (isWindowExists && internalWindow) || globalThis;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction patchPrototype(prototype, fnNames) {\n    const source = prototype.constructor['name'];\n    for (let i = 0; i < fnNames.length; i++) {\n        const name = fnNames[i];\n        const delegate = prototype[name];\n        if (delegate) {\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n            if (!isPropertyWritable(prototypeDesc)) {\n                continue;\n            }\n            prototype[name] = ((delegate) => {\n                const patched = function () {\n                    return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                };\n                attachOriginToPatched(patched, delegate);\n                return patched;\n            })(delegate);\n        }\n    }\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) &&\n    typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    _global.process.toString() === '[object process]' &&\n    !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst enableBeforeunloadSymbol = zoneSymbol('enable_beforeunload');\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result =\n            listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (\n        // https://github.com/angular/angular/issues/47579\n        // https://www.w3.org/TR/2011/WD-html5-20110525/history.html#beforeunloadevent\n        // This is the only specific case we should check for. The spec defines that the\n        // `returnValue` attribute represents the message to show the user. When the event\n        // is created, this attribute must be set to the empty string.\n        event.type === 'beforeunload' &&\n            // To prevent any breaking changes resulting from this change, given that\n            // it was already causing a significant number of failures in G3, we have hidden\n            // that behavior behind a global configuration flag. Consumers can enable this\n            // flag explicitly if they want the `beforeunload` event to be handled as defined\n            // in the specification.\n            _global[enableBeforeunloadSymbol] &&\n            // The IDL event definition is `attribute DOMString returnValue`, so we check whether\n            // `typeof result` is a string.\n            typeof result === 'string') {\n            event.returnValue = result;\n        }\n        else if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nconst originalInstanceKey = zoneSymbol('originalInstance');\n// wrap some native API on `window`\nfunction patchClass(className) {\n    const OriginalClass = _global[className];\n    if (!OriginalClass)\n        return;\n    // keep original class in global\n    _global[zoneSymbol(className)] = OriginalClass;\n    _global[className] = function () {\n        const a = bindArguments(arguments, className);\n        switch (a.length) {\n            case 0:\n                this[originalInstanceKey] = new OriginalClass();\n                break;\n            case 1:\n                this[originalInstanceKey] = new OriginalClass(a[0]);\n                break;\n            case 2:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                break;\n            case 3:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                break;\n            case 4:\n                this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                break;\n            default:\n                throw new Error('Arg list too long.');\n        }\n    };\n    // attach original delegate to patched function\n    attachOriginToPatched(_global[className], OriginalClass);\n    const instance = new OriginalClass(function () { });\n    let prop;\n    for (prop in instance) {\n        // https://bugs.webkit.org/show_bug.cgi?id=44721\n        if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n            continue;\n        (function (prop) {\n            if (typeof instance[prop] === 'function') {\n                _global[className].prototype[prop] = function () {\n                    return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                };\n            }\n            else {\n                ObjectDefineProperty(_global[className].prototype, prop, {\n                    set: function (fn) {\n                        if (typeof fn === 'function') {\n                            this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                            // keep callback in wrapped function so we can\n                            // use it in Function.prototype.toString to return\n                            // the native one.\n                            attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                        }\n                        else {\n                            this[originalInstanceKey][prop] = fn;\n                        }\n                    },\n                    get: function () {\n                        return this[originalInstanceKey][prop];\n                    },\n                });\n            }\n        })(prop);\n    }\n    for (prop in OriginalClass) {\n        if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n            _global[className][prop] = OriginalClass[prop];\n        }\n    }\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\nlet isDetectedIEOrEdge = false;\nlet ieOrEdge = false;\nfunction isIE() {\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n            return true;\n        }\n    }\n    catch (error) { }\n    return false;\n}\nfunction isIEOrEdge() {\n    if (isDetectedIEOrEdge) {\n        return ieOrEdge;\n    }\n    isDetectedIEOrEdge = true;\n    try {\n        const ua = internalWindow.navigator.userAgent;\n        if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n            ieOrEdge = true;\n        }\n    }\n    catch (error) { }\n    return ieOrEdge;\n}\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\n// Note that passive event listeners are now supported by most modern browsers,\n// including Chrome, Firefox, Safari, and Edge. There's a pending change that\n// would remove support for legacy browsers by zone.js. Removing `passiveSupported`\n// from the codebase will reduce the final code size for existing apps that still use zone.js.\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            },\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true,\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // We use a shared global `taskData` to pass data for `scheduleEventTask`,\n        // eliminating the need to create a new object solely for passing data.\n        // WARNING: This object has a static lifetime, meaning it is not created\n        // each time `addEventListener` is called. It is instantiated only once\n        // and captured by reference inside the `addEventListener` and\n        // `removeEventListener` functions. Do not add any new properties to this\n        // object, as doing so would necessitate maintaining the information\n        // between `addEventListener` calls.\n        const taskData = {};\n        const nativeAddEventListener = (proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER]);\n        const nativeRemoveEventListener = (proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER]);\n        const nativeListeners = (proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER]);\n        const nativeRemoveAllListeners = (proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER]);\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        /**\n         * In the context of events and listeners, this function will be\n         * called at the end by `cancelTask`, which, in turn, calls `task.cancelFn`.\n         * Cancelling a task is primarily used to remove event listeners from\n         * the task target.\n         */\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (task.removeAbortListener) {\n                                task.removeAbortListener();\n                                task.removeAbortListener = null;\n                            }\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return ((typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate));\n        };\n        const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        function copyEventListenerOptions(options) {\n            if (typeof options === 'object' && options !== null) {\n                // We need to destructure the target `options` object since it may\n                // be frozen or sealed (possibly provided implicitly by a third-party\n                // library), or its properties may be readonly.\n                const newOptions = { ...options };\n                // The `signal` option was recently introduced, which caused regressions in\n                // third-party scenarios where `AbortController` was directly provided to\n                // `addEventListener` as options. For instance, in cases like\n                // `document.addEventListener('keydown', callback, abortControllerInstance)`,\n                // which is valid because `AbortController` includes a `signal` getter, spreading\n                // `{...options}` wouldn't copy the `signal`. Additionally, using `Object.create`\n                // isn't feasible since `AbortController` is a built-in object type, and attempting\n                // to create a new object directly with it as the prototype might result in\n                // unexpected behavior.\n                if (options.signal) {\n                    newOptions.signal = options.signal;\n                }\n                return newOptions;\n            }\n            return options;\n        }\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = copyEventListenerOptions(buildEventListenerOptions(arguments[2], passive));\n                const signal = options?.signal;\n                if (signal?.aborted) {\n                    // the signal is an aborted one, just return without attaching the event listener.\n                    return;\n                }\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source =\n                        constructorName +\n                            addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // In the code below, `options` should no longer be reassigned; instead, it\n                // should only be mutated. This is because we pass that object to the native\n                // `addEventListener`.\n                // It's generally recommended to use the same object reference for options.\n                // This ensures consistency and avoids potential issues.\n                taskData.options = options;\n                if (once) {\n                    // When using `addEventListener` with the `once` option, we don't pass\n                    // the `once` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `once` setting and handle it ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                if (signal) {\n                    // When using `addEventListener` with the `signal` option, we don't pass\n                    // the `signal` option directly to the native `addEventListener` method.\n                    // Instead, we keep the `signal` setting and handle it ourselves.\n                    taskData.options.signal = undefined;\n                }\n                // The `scheduleEventTask` function will ultimately call `customScheduleGlobal`,\n                // which in turn calls the native `addEventListener`. This is why `taskData.options`\n                // is updated before scheduling the task, as `customScheduleGlobal` uses\n                // `taskData.options` to pass it to the native `addEventListener`.\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                if (signal) {\n                    // after task is scheduled, we need to store the signal back to task.options\n                    taskData.options.signal = signal;\n                    // Wrapping `task` in a weak reference would not prevent memory leaks. Weak references are\n                    // primarily used for preventing strong references cycles. `onAbort` is always reachable\n                    // as it's an event listener, so its closure retains a strong reference to the `task`.\n                    const onAbort = () => task.zone.cancelTask(task);\n                    nativeListener.call(signal, 'abort', onAbort, { once: true });\n                    // We need to remove the `abort` listener when the event listener is going to be removed,\n                    // as it creates a closure that captures `task`. This closure retains a reference to the\n                    // `task` object even after it goes out of scope, preventing `task` from being garbage\n                    // collected.\n                    task.removeAbortListener = () => signal.removeEventListener('abort', onAbort);\n                }\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    taskData.options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            // `existingTasks` may not exist if the `addEventListener` was called before\n            // it was patched by zone.js. Please refer to the attached issue for\n            // clarification, particularly after the `if` condition, before calling\n            // the native `removeEventListener`.\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates with capture=false were removed\n                            // https:// github.com/angular/angular/issues/31643\n                            // https://github.com/angular/angular/issues/54581\n                            if (!capture && typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        // In all other conditions, when `addEventListener` is called after being\n                        // patched by zone.js, we would always find an event task on the `EventTarget`.\n                        // This will trigger `cancelFn` on the `existingTask`, leading to `customCancelGlobal`,\n                        // which ultimately removes an event listener and cleans up the abort listener\n                        // (if an `AbortSignal` was provided when scheduling a task).\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // https://github.com/angular/zone.js/issues/930\n            // We may encounter a situation where the `addEventListener` was\n            // called on the event target before zone.js is loaded, resulting\n            // in no task being stored on the event target due to its invocation\n            // of the native implementation. In this scenario, we simply need to\n            // invoke the native `removeEventListener`.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks\n            ? captureFalseTasks.concat(captureTrueTasks)\n            : captureFalseTasks.slice();\n    }\n}\nfunction patchEventPrototype(global, api) {\n    const Event = global['Event'];\n    if (Event && Event.prototype) {\n        api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n            self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n            // we need to call the native stopImmediatePropagation\n            // in case in some hybrid application, some part of\n            // application will be controlled by zone, some are not\n            delegate && delegate.apply(self, args);\n        });\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchQueueMicrotask(global, api) {\n    api.patchMethod(global, 'queueMicrotask', (delegate) => {\n        return function (self, args) {\n            Zone.current.scheduleMicroTask('queueMicrotask', args[0]);\n        };\n    });\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        const handleOrId = setNative.apply(window, data.args);\n        // Whlist on Node.js when get can the ID by using `[Symbol.toPrimitive]()` we do\n        // to this so that we do not cause potentally leaks when using `setTimeout`\n        // since this can be periodic when using `.refresh`.\n        if (isNumber(handleOrId)) {\n            data.handleId = handleOrId;\n        }\n        else {\n            data.handle = handleOrId;\n            // On Node.js a timeout and interval can be restarted over and over again by using the `.refresh` method.\n            data.isRefreshable = isFunction(handleOrId.refresh);\n        }\n        return task;\n    }\n    function clearTask(task) {\n        const { handle, handleId } = task.data;\n        return clearNative.call(window, handle ?? handleId);\n    }\n    setNative = patchMethod(window, setName, (delegate) => function (self, args) {\n        if (isFunction(args[0])) {\n            const options = {\n                isRefreshable: false,\n                isPeriodic: nameSuffix === 'Interval',\n                delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n                args: args,\n            };\n            const callback = args[0];\n            args[0] = function timer() {\n                try {\n                    return callback.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    // https://github.com/angular/angular/issues/40387\n                    // Cleanup tasksByHandleId should be handled before scheduleTask\n                    // Since some zoneSpec may intercept and doesn't trigger\n                    // scheduleFn(scheduleTask) provided here.\n                    const { handle, handleId, isPeriodic, isRefreshable } = options;\n                    if (!isPeriodic && !isRefreshable) {\n                        if (handleId) {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[handleId];\n                        }\n                        else if (handle) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            handle[taskSymbol] = null;\n                        }\n                    }\n                }\n            };\n            const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n            if (!task) {\n                return task;\n            }\n            // Node.js must additionally support the ref and unref functions.\n            const { handleId, handle, isRefreshable, isPeriodic } = task.data;\n            if (handleId) {\n                // for non nodejs env, we save handleId: task\n                // mapping in local cache for clearTimeout\n                tasksByHandleId[handleId] = task;\n            }\n            else if (handle) {\n                // for nodejs env, we save task\n                // reference in timerId Object for clearTimeout\n                handle[taskSymbol] = task;\n                if (isRefreshable && !isPeriodic) {\n                    const originalRefresh = handle.refresh;\n                    handle.refresh = function () {\n                        const { zone, state } = task;\n                        if (state === 'notScheduled') {\n                            task._state = 'scheduled';\n                            zone._updateTaskCount(task, 1);\n                        }\n                        else if (state === 'running') {\n                            task._state = 'scheduling';\n                        }\n                        return originalRefresh.call(this);\n                    };\n                }\n            }\n            return handle ?? handleId ?? task;\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(window, args);\n        }\n    });\n    clearNative = patchMethod(window, cancelName, (delegate) => function (self, args) {\n        const id = args[0];\n        let task;\n        if (isNumber(id)) {\n            // non nodejs env.\n            task = tasksByHandleId[id];\n            delete tasksByHandleId[id];\n        }\n        else {\n            // nodejs env ?? other environments.\n            task = id?.[taskSymbol];\n            if (task) {\n                id[taskSymbol] = null;\n            }\n            else {\n                task = id;\n            }\n        }\n        if (task?.type) {\n            if (task.cancelFn) {\n                // Do not cancel already canceled functions\n                task.zone.cancelTask(task);\n            }\n        }\n        else {\n            // cause an error by calling it directly.\n            delegate.apply(window, args);\n        }\n    });\n}\n\nfunction patchCustomElements(_global, api) {\n    const { isBrowser, isMix } = api.getGlobalObjects();\n    if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n        return;\n    }\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#concept-custom-element-definition-lifecycle-callbacks\n    const callbacks = [\n        'connectedCallback',\n        'disconnectedCallback',\n        'adoptedCallback',\n        'attributeChangedCallback',\n        'formAssociatedCallback',\n        'formDisabledCallback',\n        'formResetCallback',\n        'formStateRestoreCallback',\n    ];\n    api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n}\n\nfunction eventTargetPatch(_global, api) {\n    if (Zone[api.symbol('patchEventTarget')]) {\n        // EventTarget is already patched.\n        return;\n    }\n    const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n    //  predefine all __zone_symbol__ + eventName + true/false string\n    for (let i = 0; i < eventNames.length; i++) {\n        const eventName = eventNames[i];\n        const falseEventName = eventName + FALSE_STR;\n        const trueEventName = eventName + TRUE_STR;\n        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n        zoneSymbolEventNames[eventName] = {};\n        zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n        zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n    }\n    const EVENT_TARGET = _global['EventTarget'];\n    if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n        return;\n    }\n    api.patchEventTarget(_global, api, [EVENT_TARGET && EVENT_TARGET.prototype]);\n    return true;\n}\nfunction patchEvent(global, api) {\n    api.patchEventPrototype(global, api);\n}\n\n/**\n * @fileoverview\n * @suppress {globalThis}\n */\nfunction filterProperties(target, onProperties, ignoreProperties) {\n    if (!ignoreProperties || ignoreProperties.length === 0) {\n        return onProperties;\n    }\n    const tip = ignoreProperties.filter((ip) => ip.target === target);\n    if (!tip || tip.length === 0) {\n        return onProperties;\n    }\n    const targetIgnoreProperties = tip[0].ignoreProperties;\n    return onProperties.filter((op) => targetIgnoreProperties.indexOf(op) === -1);\n}\nfunction patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n    // check whether target is available, sometimes target will be undefined\n    // because different browser or some 3rd party plugin.\n    if (!target) {\n        return;\n    }\n    const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n    patchOnProperties(target, filteredProperties, prototype);\n}\n/**\n * Get all event name properties which the event name startsWith `on`\n * from the target object itself, inherited properties are not considered.\n */\nfunction getOnEventNames(target) {\n    return Object.getOwnPropertyNames(target)\n        .filter((name) => name.startsWith('on') && name.length > 2)\n        .map((name) => name.substring(2));\n}\nfunction propertyDescriptorPatch(api, _global) {\n    if (isNode && !isMix) {\n        return;\n    }\n    if (Zone[api.symbol('patchEvents')]) {\n        // events are already been patched by legacy patch.\n        return;\n    }\n    const ignoreProperties = _global['__Zone_ignore_on_properties'];\n    // for browsers that we can patch the descriptor:  Chrome & Firefox\n    let patchTargets = [];\n    if (isBrowser) {\n        const internalWindow = window;\n        patchTargets = patchTargets.concat([\n            'Document',\n            'SVGElement',\n            'Element',\n            'HTMLElement',\n            'HTMLBodyElement',\n            'HTMLMediaElement',\n            'HTMLFrameSetElement',\n            'HTMLFrameElement',\n            'HTMLIFrameElement',\n            'HTMLMarqueeElement',\n            'Worker',\n        ]);\n        const ignoreErrorProperties = isIE()\n            ? [{ target: internalWindow, ignoreProperties: ['error'] }]\n            : [];\n        // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n        // so we need to pass WindowPrototype to check onProp exist or not\n        patchFilteredProperties(internalWindow, getOnEventNames(internalWindow), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n    }\n    patchTargets = patchTargets.concat([\n        'XMLHttpRequest',\n        'XMLHttpRequestEventTarget',\n        'IDBIndex',\n        'IDBRequest',\n        'IDBOpenDBRequest',\n        'IDBDatabase',\n        'IDBTransaction',\n        'IDBCursor',\n        'WebSocket',\n    ]);\n    for (let i = 0; i < patchTargets.length; i++) {\n        const target = _global[patchTargets[i]];\n        target &&\n            target.prototype &&\n            patchFilteredProperties(target.prototype, getOnEventNames(target.prototype), ignoreProperties);\n    }\n}\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nfunction patchBrowser(Zone) {\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, api, [XMLHttpRequestEventTarget.prototype]);\n        }\n    });\n    Zone.__load_patch('MutationObserver', (global, Zone, api) => {\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n    });\n    Zone.__load_patch('IntersectionObserver', (global, Zone, api) => {\n        patchClass('IntersectionObserver');\n    });\n    Zone.__load_patch('FileReader', (global, Zone, api) => {\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) {\n                return target[XHR_TASK];\n            }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = (target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            // Also if the request failed without response (status = 0), the load event handler\n                            // will not be triggered, in that case, we should also invoke the placeholder callback\n                            // to close the XMLHttpRequest::send macroTask.\n                            // https://github.com/angular/angular/issues/38795\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (target.status !== 0 && loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                });\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = {\n                        target: self,\n                        url: self[XHR_URL],\n                        isPeriodic: false,\n                        args: args,\n                        aborted: false,\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self &&\n                        self[XHR_ERROR_BEFORE_SCHEDULED] === true &&\n                        !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach((eventTask) => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, {\n                            promise: e.promise,\n                            reason: e.rejection,\n                        });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n    Zone.__load_patch('queueMicrotask', (global, Zone, api) => {\n        patchQueueMicrotask(global, api);\n    });\n}\n\nfunction patchPromise(Zone) {\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const isDisableWrappingUncaughtPromiseRejection = global[__symbol__('DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION')] !== false;\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                try {\n                    uncaughtPromiseError.zone.runGuarded(() => {\n                        if (uncaughtPromiseError.throwOriginal) {\n                            throw uncaughtPromiseError.rejection;\n                        }\n                        throw uncaughtPromiseError;\n                    });\n                }\n                catch (error) {\n                    handleUnhandledRejection(error);\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) { }\n        }\n        function isThenable(value) {\n            return value && value.then;\n        }\n        function forwardResolution(value) {\n            return value;\n        }\n        function forwardRejection(rejection) {\n            return ZoneAwarePromise.reject(rejection);\n        }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => {\n                        resolvePromise(promise, false, err);\n                    })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED &&\n                    value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) &&\n                    value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => {\n                            resolvePromise(promise, false, err);\n                        })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask &&\n                            Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, {\n                                configurable: true,\n                                enumerable: false,\n                                writable: true,\n                                value: trace,\n                            });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        let uncaughtPromiseError = value;\n                        try {\n                            // Here we throws a new Error to print more readable error log\n                            // and if the value is not an error, zone.js builds an `Error`\n                            // Object here to attach the stack information.\n                            throw new Error('Uncaught (in promise): ' +\n                                readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            uncaughtPromiseError = err;\n                        }\n                        if (isDisableWrappingUncaughtPromiseRejection) {\n                            // If disable wrapping uncaught promise reject\n                            // use the value instead of wrapping it.\n                            uncaughtPromiseError.throwOriginal = true;\n                        }\n                        uncaughtPromiseError.rejection = value;\n                        uncaughtPromiseError.promise = promise;\n                        uncaughtPromiseError.zone = Zone.current;\n                        uncaughtPromiseError.task = Zone.currentTask;\n                        _uncaughtPromiseErrors.push(uncaughtPromiseError);\n                        api.scheduleMicroTask(); // to make sure that it is running\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) { }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState\n                ? typeof onFulfilled === 'function'\n                    ? onFulfilled\n                    : forwardResolution\n                : typeof onRejected === 'function'\n                    ? onRejected\n                    : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution\n                        ? []\n                        : [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        const noop = function () { };\n        const AggregateError = global.AggregateError;\n        class ZoneAwarePromise {\n            static toString() {\n                return ZONE_AWARE_PROMISE_TO_STRING;\n            }\n            static resolve(value) {\n                if (value instanceof ZoneAwarePromise) {\n                    return value;\n                }\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static withResolvers() {\n                const result = {};\n                result.promise = new ZoneAwarePromise((res, rej) => {\n                    result.resolve = res;\n                    result.reject = rej;\n                });\n                return result;\n            }\n            static any(values) {\n                if (!values || typeof values[Symbol.iterator] !== 'function') {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                const promises = [];\n                let count = 0;\n                try {\n                    for (let v of values) {\n                        count++;\n                        promises.push(ZoneAwarePromise.resolve(v));\n                    }\n                }\n                catch (err) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                if (count === 0) {\n                    return Promise.reject(new AggregateError([], 'All promises were rejected'));\n                }\n                let finished = false;\n                const errors = [];\n                return new ZoneAwarePromise((resolve, reject) => {\n                    for (let i = 0; i < promises.length; i++) {\n                        promises[i].then((v) => {\n                            if (finished) {\n                                return;\n                            }\n                            finished = true;\n                            resolve(v);\n                        }, (err) => {\n                            errors.push(err);\n                            count--;\n                            if (count === 0) {\n                                finished = true;\n                                reject(new AggregateError(errors, 'All promises were rejected'));\n                            }\n                        });\n                    }\n                });\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) {\n                    resolve(value);\n                }\n                function onReject(error) {\n                    reject(error);\n                }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) {\n                return ZoneAwarePromise.allWithCallback(values);\n            }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err }),\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    const onceWrapper = once();\n                    executor &&\n                        executor(onceWrapper(makeResolver(promise, RESOLVED)), onceWrapper(makeResolver(promise, REJECTED)));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            get [Symbol.toStringTag]() {\n                return 'Promise';\n            }\n            get [Symbol.species]() {\n                return ZoneAwarePromise;\n            }\n            then(onFulfilled, onRejected) {\n                // We must read `Symbol.species` safely because `this` may be anything. For instance, `this`\n                // may be an object without a prototype (created through `Object.create(null)`); thus\n                // `this.constructor` will be undefined. One of the use cases is SystemJS creating\n                // prototype-less objects (modules) via `Object.create(null)`. The SystemJS creates an empty\n                // object and copies promise properties into that object (within the `getOrCreateLoad`\n                // function). The zone.js then checks if the resolved value has the `then` method and\n                // invokes it with the `value` context. Otherwise, this will throw an error: `TypeError:\n                // Cannot read properties of undefined (reading 'Symbol(Symbol.species)')`.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = this.constructor || ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                // See comment on the call to `then` about why thee `Symbol.species` is safely accessed.\n                let C = this.constructor?.[Symbol.species];\n                if (!C || typeof C !== 'function') {\n                    C = ZoneAwarePromise;\n                }\n                const chainPromise = new C(noop);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = (global[symbolPromise] = global['Promise']);\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => {\n                    originalThen.call(this, resolve, reject);\n                });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function (self, args) {\n                let resultPromise = fn.apply(self, args);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            patchMethod(global, 'fetch', (delegate) => zoneify(delegate));\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n}\n\nfunction patchToString(Zone) {\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (typeof Promise === 'function' && this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n}\n\nfunction patchCallbacks(api, target, targetName, method, callbacks) {\n    const symbol = Zone.__symbol__(method);\n    if (target[symbol]) {\n        return;\n    }\n    const nativeDelegate = (target[symbol] = target[method]);\n    target[method] = function (name, opts, options) {\n        if (opts && opts.prototype) {\n            callbacks.forEach(function (callback) {\n                const source = `${targetName}.${method}::` + callback;\n                const prototype = opts.prototype;\n                // Note: the `patchCallbacks` is used for patching the `document.registerElement` and\n                // `customElements.define`. We explicitly wrap the patching code into try-catch since\n                // callbacks may be already patched by other web components frameworks (e.g. LWC), and they\n                // make those properties non-writable. This means that patching callback will throw an error\n                // `cannot assign to read-only property`. See this code as an example:\n                // https://github.com/salesforce/lwc/blob/master/packages/@lwc/engine-core/src/framework/base-bridge-element.ts#L180-L186\n                // We don't want to stop the application rendering if we couldn't patch some\n                // callback, e.g. `attributeChangedCallback`.\n                try {\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                }\n                catch {\n                    // Note: we leave the catch block empty since there's no way to handle the error related\n                    // to non-writable property.\n                }\n            });\n        }\n        return nativeDelegate.call(target, name, opts, options);\n    };\n    api.attachOriginToPatched(target[method], nativeDelegate);\n}\n\nfunction patchUtil(Zone) {\n    Zone.__load_patch('util', (global, Zone, api) => {\n        // Collect native event names by looking at properties\n        // on the global namespace, e.g. 'onclick'.\n        const eventNames = getOnEventNames(global);\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS`\n        // to define which events will not be patched by `Zone.js`. In newer version (>=0.9.0), we\n        // change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep the name consistent with\n        // angular repo. The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be\n        // supported for backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({\n            globalSources,\n            zoneSymbolEventNames,\n            eventNames,\n            isBrowser,\n            isMix,\n            isNode,\n            TRUE_STR,\n            FALSE_STR,\n            ZONE_SYMBOL_PREFIX,\n            ADD_EVENT_LISTENER_STR,\n            REMOVE_EVENT_LISTENER_STR,\n        });\n    });\n}\n\nfunction patchCommon(Zone) {\n    patchPromise(Zone);\n    patchToString(Zone);\n    patchUtil(Zone);\n}\n\nconst Zone$1 = loadZone();\npatchCommon(Zone$1);\npatchBrowser(Zone$1);\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => DataFunctionReturnValue\n  ) => Promise<DataStrategyResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n  fetcherKey: string | null;\n}\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface DataStrategyResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<Record<string, DataStrategyResult>>;\n}\n\nexport type AgnosticPatchRoutesOnNavigationFunctionArgs<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = {\n  path: string;\n  matches: M[];\n  patch: (routeId: string | null, children: O[]) => void;\n};\n\nexport type AgnosticPatchRoutesOnNavigationFunction<\n  O extends AgnosticRouteObject = AgnosticRouteObject,\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> = (\n  opts: AgnosticPatchRoutesOnNavigationFunctionArgs<O, M>\n) => void | Promise<void>;\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  DataStrategyResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      viewTransitionOpts?: ViewTransitionOpts;\n      flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches\n        .slice(0, idx + 1)\n        .every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\n      );\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate: (() => void) | undefined = undefined;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (unblockBlockerHistoryUpdate) {\n          unblockBlockerHistoryUpdate();\n          unblockBlockerHistoryUpdate = undefined;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          let nextHistoryUpdatePromise = new Promise<void>((resolve) => {\n            unblockBlockerHistoryUpdate = resolve;\n          });\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked, after the url\n              // restoration is also complete.  See:\n              // https://github.com/remix-run/react-router/issues/11613\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        viewTransitionOpts: opts.viewTransitionOpts,\n        flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      {\n        overrideNavigation: state.navigation,\n        // Proxy through any rending view transition\n        enableViewTransition: pendingViewTransitionEnabled === true,\n      }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error: discoverResult.error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        state,\n        request,\n        [actionMatch],\n        matches,\n        null\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches)\n          .route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = { ...state.errors, ...errors };\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    abortFetcher(key);\n\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        preventScrollReset,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      preventScrollReset,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      state,\n      fetchRequest,\n      [match],\n      requestMatches,\n      key\n    );\n    let actionResult = actionResults[match.route.id];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        abortFetcher(staleKey);\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(\n        revalidationRequest,\n        redirect.result,\n        false,\n        { preventScrollReset }\n      );\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    preventScrollReset: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      state,\n      fetchRequest,\n      [match],\n      matches,\n      key\n    );\n    let result = results[match.route.id];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset,\n        });\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    isNavigation: boolean,\n    {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation\n          ? pendingViewTransitionEnabled\n          : undefined,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    state: RouterState,\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    fetcherKey: string | null\n  ): Promise<Record<string, DataResult>> {\n    let results: Record<string, DataStrategyResult>;\n    let dataResults: Record<string, DataResult> = {};\n    try {\n      results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        state,\n        request,\n        matchesToLoad,\n        matches,\n        fetcherKey,\n        manifest,\n        mapRouteProperties\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach((m) => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e,\n        };\n      });\n      return dataResults;\n    }\n\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result as Response;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            routeId,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          ),\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\n          result\n        );\n      }\n    }\n\n    return dataResults;\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    state: RouterState,\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let currentMatches = state.matches;\n\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\n      \"loader\",\n      state,\n      request,\n      matchesToLoad,\n      matches,\n      null\n    );\n\n    let fetcherResultsPromise = Promise.all(\n      fetchersToLoad.map(async (f) => {\n        if (f.matches && f.match && f.controller) {\n          let results = await callDataStrategy(\n            \"loader\",\n            state,\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            [f.match],\n            f.matches,\n            f.key\n          );\n          let result = results[f.match.route.id];\n          // Fetcher results are keyed by fetcher key from here on out, not routeId\n          return { [f.key]: result };\n        } else {\n          return Promise.resolve({\n            [f.key]: {\n              type: ResultType.error,\n              error: getInternalRouterError(404, {\n                pathname: f.path,\n              }),\n            } as ErrorResult,\n          });\n        }\n      })\n    );\n\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce(\n      (acc, r) => Object.assign(acc, r),\n      {}\n    );\n\n    await Promise.all([\n      resolveNavigationDeferredResults(\n        matches,\n        loaderResults,\n        request.signal,\n        currentMatches,\n        state.loaderData\n      ),\n      resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    if (!patchRoutesOnNavigationImpl) {\n      return { type: \"success\", matches };\n    }\n\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(\n              routeId,\n              children,\n              routesToUse,\n              localManifest,\n              mapRouteProperties\n            );\n          },\n        });\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        dataStrategy\n      );\n      result = results[actionMatch.route.id];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    dataStrategy: DataStrategyFunction | null\n  ): Promise<Record<string, DataResult>> {\n    let results = await callDataStrategyImpl(\n      dataStrategy || defaultDataStrategy,\n      type,\n      null,\n      request,\n      matchesToLoad,\n      matches,\n      null,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    let dataResults: Record<string, DataResult> = {};\n    await Promise.all(\n      matches.map(async (match) => {\n        if (!(match.route.id in results)) {\n          return;\n        }\n        let result = results[match.route.id];\n        if (isRedirectDataStrategyResultResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            match.route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        dataResults[match.route.id] =\n          await convertDataStrategyResultToDataResult(result);\n      })\n    );\n    return dataResults;\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search\n        ? path.search.replace(/^\\?/, \"?index&\")\n        : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string,\n  includeBoundary = false\n) {\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  initialHydration: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      Object.keys(state.errors)[0],\n      true\n    );\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(\n      matches,\n      pendingActionResult[0]\n    );\n  }\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      initialHydration ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction shouldLoadRouteOnHydration(\n  route: AgnosticDataRouteObject,\n  loaderData: RouteData | null | undefined,\n  errors: RouteData | null | undefined\n) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  let childrenToPatch: AgnosticDataRouteObject[];\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(\n    (newRoute) =>\n      !childrenToPatch.some((existingRoute) =>\n        isSameRoute(newRoute, existingRoute)\n      )\n  );\n\n  let newRoutes = convertRoutesToDataRoutes(\n    uniqueChildren,\n    mapRouteProperties,\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\n    manifest\n  );\n\n  childrenToPatch.push(...newRoutes);\n}\n\nfunction isSameRoute(\n  newRoute: AgnosticRouteObject,\n  existingRoute: AgnosticRouteObject\n): boolean {\n  // Most optimal check is by id\n  if (\n    \"id\" in newRoute &&\n    \"id\" in existingRoute &&\n    newRoute.id === existingRoute.id\n  ) {\n    return true;\n  }\n\n  // Second is by pathing differences\n  if (\n    !(\n      newRoute.index === existingRoute.index &&\n      newRoute.path === existingRoute.path &&\n      newRoute.caseSensitive === existingRoute.caseSensitive\n    )\n  ) {\n    return false;\n  }\n\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if (\n    (!newRoute.children || newRoute.children.length === 0) &&\n    (!existingRoute.children || existingRoute.children.length === 0)\n  ) {\n    return true;\n  }\n\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children!.every((aChild, i) =>\n    existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\n  );\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy({\n  matches,\n}: DataStrategyFunctionArgs): ReturnType<DataStrategyFunction> {\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\n  return results.reduce(\n    (acc, result, i) =>\n      Object.assign(acc, { [matchesToLoad[i].route.id]: result }),\n    {}\n  );\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  state: RouterState | null,\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  fetcherKey: string | null,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<Record<string, DataStrategyResult>> {\n  let loadRouteDefinitionsPromises = matches.map((m) =>\n    m.route.lazy\n      ? loadLazyRouteModule(m.route, mapRouteProperties, manifest)\n      : undefined\n  );\n\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve: DataStrategyMatch[\"resolve\"] = async (handlerOverride) => {\n      if (\n        handlerOverride &&\n        request.method === \"GET\" &&\n        (match.route.lazy || match.route.loader)\n      ) {\n        shouldLoad = true;\n      }\n      return shouldLoad\n        ? callLoaderOrAction(\n            type,\n            request,\n            match,\n            loadRoutePromise,\n            handlerOverride,\n            requestContext\n          )\n        : Promise.resolve({ type: ResultType.data, result: undefined });\n    };\n\n    return {\n      ...match,\n      shouldLoad,\n      resolve,\n    };\n  });\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext,\n  });\n\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n\n  return results;\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  loadRoutePromise: Promise<void> | undefined,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<DataStrategyResult> {\n  let result: DataStrategyResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<DataStrategyResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<DataStrategyResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<DataStrategyResult> = (async () => {\n      try {\n        let val = await (handlerOverride\n          ? handlerOverride((ctx: unknown) => actualHandler(ctx))\n          : actualHandler());\n        return { type: \"data\", result: val };\n      } catch (e) {\n        return { type: \"error\", result: e };\n      }\n    })();\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadRoutePromise,\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertDataStrategyResultToDataResult(\n  dataStrategyResult: DataStrategyResult\n): Promise<DataResult> {\n  let { result, type } = dataStrategyResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach((match) => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  results: Record<string, DataResult>,\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: Record<string, DataResult>,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach((rf) => {\n    let { key, match, controller } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: Record<string, DataResult>\n): { key: string; result: RedirectResult } | undefined {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return { key, result };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isDataStrategyResult(result: unknown): result is DataStrategyResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectDataStrategyResultResult(result: DataStrategyResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveNavigationDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  signal: AbortSignal,\n  currentMatches: AgnosticDataRouteMatch[],\n  currentLoaderData: RouteData\n) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then((result) => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\n\nasync function resolveFetcherDeferredResults(\n  matches: (AgnosticDataRouteMatch | null)[],\n  results: Record<string, DataResult>,\n  revalidatingFetchers: RevalidatingFetcher[]\n) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, routeId, controller } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find((m) => m?.route.id === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(\n        controller,\n        \"Expected an AbortController for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, controller.signal, true).then(\n        (result) => {\n          if (result) {\n            results[key] = result;\n          }\n        }\n      );\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  flushSync?: boolean;\n  viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type { FutureConfig as RouterFutureConfig } from \"@remix-run/router\";\nimport type { FutureConfig as RenderFutureConfig } from \"./components\";\n\nconst alreadyWarned: { [key: string]: boolean } = {};\n\nexport function warnOnce(key: string, message: string): void {\n  if (!alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\n\nconst logDeprecation = (flag: string, msg: string, link: string) =>\n  warnOnce(\n    flag,\n    `⚠️ React Router Future Flag Warning: ${msg}. ` +\n      `You can use the \\`${flag}\\` future flag to opt-in early. ` +\n      `For more information, see ${link}.`\n  );\n\nexport function logV6DeprecationWarnings(\n  renderFuture: Partial<RenderFutureConfig> | undefined,\n  routerFuture?: Omit<RouterFutureConfig, \"v7_prependBasename\">\n) {\n  if (renderFuture?.v7_startTransition === undefined) {\n    logDeprecation(\n      \"v7_startTransition\",\n      \"React Router will begin wrapping state updates in `React.startTransition` in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\"\n    );\n  }\n\n  if (\n    renderFuture?.v7_relativeSplatPath === undefined &&\n    (!routerFuture || !routerFuture.v7_relativeSplatPath)\n  ) {\n    logDeprecation(\n      \"v7_relativeSplatPath\",\n      \"Relative route resolution within Splat routes is changing in v7\",\n      \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\"\n    );\n  }\n\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\n        \"v7_fetcherPersist\",\n        \"The persistence behavior of fetchers is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\"\n      );\n    }\n\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\n        \"v7_normalizeFormMethod\",\n        \"Casing of `formMethod` fields is being normalized to uppercase in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\"\n      );\n    }\n\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\n        \"v7_partialHydration\",\n        \"`RouterProvider` hydration behavior is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\"\n      );\n    }\n\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\n        \"v7_skipActionErrorRevalidation\",\n        \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\",\n        \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\"\n      );\n    }\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\nimport { logV6DeprecationWarnings } from \"./deprecations\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [router, future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AgnosticPatchRoutesOnNavigationFunction,\n  AgnosticPatchRoutesOnNavigationFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  HydrationState,\n  InitialEntry,\n  JsonFunction,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathParam,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  FutureConfig as RouterFutureConfig,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  FutureConfig,\n  IndexRouteProps,\n  LayoutRouteProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  PathRouteProps,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n} from \"./lib/components\";\nimport {\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createRoutesFromChildren,\n  renderMatches,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  NavigateOptions,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteId,\n  useRouteLoaderData,\n  useRoutes,\n  useRoutesImpl,\n} from \"./lib/hooks\";\nimport { logV6DeprecationWarnings } from \"./lib/deprecations\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LazyRouteFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  Pathname,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  Blocker,\n  BlockerFunction,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useBlocker,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport type PatchRoutesOnNavigationFunctionArgs =\n  AgnosticPatchRoutesOnNavigationFunctionArgs<RouteObject, RouteMatch>;\n\nexport type PatchRoutesOnNavigationFunction =\n  AgnosticPatchRoutesOnNavigationFunction<RouteObject, RouteMatch>;\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.HydrateFallback) {\n    if (__DEV__) {\n      if (route.hydrateFallbackElement) {\n        warning(\n          false,\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" +\n            \"`HydrateFallback` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n    dataStrategy?: DataStrategyFunction;\n    patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  LocationContext as UNSAFE_LocationContext,\n  NavigationContext as UNSAFE_NavigationContext,\n  RouteContext as UNSAFE_RouteContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n  logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n","export type IsFnHelper<T = unknown> = (value: unknown) => value is T;\n\nexport function isTypeof<T = unknown>(value: unknown, type: string): value is T {\n  return typeof value === type;\n}\n\nexport function isToString<T = unknown>(value: unknown, type: string): value is T {\n  return Object.prototype.toString.call(value) === `[object ${type}]`;\n}\n\nexport function isInstanceOf<T extends Function = any>(value: unknown, reference: T): value is T {\n  try {\n    return value instanceof reference;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport const isUndefined = ((value) => isTypeof(value, 'undefined')) as IsFnHelper<undefined>;\n\nexport const isNull = ((value) => isTypeof(value, 'null')) as IsFnHelper<null>;\n\nexport const isString = ((value) => isTypeof(value, 'string')) as IsFnHelper<string>;\n\nexport const isNumber = ((value) =>\n  (isTypeof<number>(value, 'number') && !isNaN(value)) || isTypeof(value, 'bigint')) as IsFnHelper<number | bigint>;\n\nexport const isInt = ((value) => isNumber(value) && Number.isInteger(value)) as IsFnHelper<number>;\n\nexport const isBoolean = ((value) => isTypeof(value, 'boolean')) as IsFnHelper<boolean>;\n\nexport const isSymbol = ((value) => isTypeof(value, 'symbol')) as IsFnHelper<Symbol>;\n\nexport const isObject = ((value) => !isNull(value) && isTypeof(value, 'object')) as IsFnHelper<object>;\n\nexport const isFunction = ((value) => isTypeof(value, 'function')) as IsFnHelper<Function>;\n\nexport const isArray = ((value) => isToString(value, 'Array')) as IsFnHelper<unknown[]>;\n\nexport const isRegExp = ((value) => isToString(value, 'RegExp')) as IsFnHelper<string>;\n\nexport const isThenable = ((value) => isFunction((value as any)?.then)) as IsFnHelper<{ then: Function }>;\n\nexport const isPrimitive = ((value) => !isObject(value) && !isFunction(value)) as IsFnHelper<\n  string | number | bigint | boolean | symbol\n>;\n\nexport const isEventDefined = typeof Event !== 'undefined';\n\nexport const isEvent = ((value) => isEventDefined && isInstanceOf(value, Event)) as IsFnHelper<Event>;\n\nexport const isErrorDefined = typeof Error !== 'undefined';\n\nexport const isError = ((value) => isErrorDefined && isInstanceOf(value, Error)) as IsFnHelper<Error>;\n\nexport const isErrorEvent = ((value) => isToString(value, 'ErrorEvent')) as IsFnHelper<ErrorEvent>;\n\nexport const isDomError = ((value) => isToString(value, 'DOMError')) as IsFnHelper<DOMException>;\n\nexport const isDomException = ((value) => isToString(value, 'DOMException')) as IsFnHelper<DOMException>;\n\nexport const isElementDefined = typeof Element !== 'undefined';\n\nexport const isElement = ((value) => isElementDefined && isInstanceOf(value, Element)) as IsFnHelper<Element>;\n\nexport const isMapDefined = typeof Map !== 'undefined';\n\nexport const isMap = ((value) => isMapDefined && isInstanceOf(value, Map)) as IsFnHelper<Map<any, any>>;\n\nexport const isSyntheticEvent = ((value) =>\n  isObject(value) &&\n  'nativeEvent' in value &&\n  'preventDefault' in value &&\n  'stopPropagation' in value) as IsFnHelper<Event>;\n","import type { API, InternalLogger } from '@grafana/faro-web-sdk';\n\nexport let internalLogger: InternalLogger;\nexport let api: API;\n\nexport function setDependencies(newInternalLogger: InternalLogger, newApi: API): void {\n  internalLogger = newInternalLogger;\n  api = newApi;\n}\n","import { version } from 'react';\n\nexport const reactVersion = version;\nexport const reactVersionMajor = getMajorReactVersion();\nexport const isReactVersionAtLeast18 = isReactVersionAtLeast(18);\nexport const isReactVersionAtLeast17 = isReactVersionAtLeast(17);\nexport const isReactVersionAtLeast16 = isReactVersionAtLeast(16);\n\nexport function getMajorReactVersion(): number | null {\n  const major = reactVersion.split('.');\n\n  try {\n    return major[0] ? parseInt(major[0], 10) : null;\n  } catch (err) {\n    return null;\n  }\n}\n\nexport function isReactVersionAtLeast(version: number): boolean {\n  return reactVersionMajor === null ? false : reactVersionMajor >= version;\n}\n","import { Component, isValidElement } from 'react';\nimport type { ErrorInfo, ReactNode } from 'react';\n\nimport { isFunction } from '@grafana/faro-web-sdk';\n\nimport { api, internalLogger } from '../dependencies';\nimport { isReactVersionAtLeast17 } from '../utils';\n\nimport { faroErrorBoundaryInitialState } from './const';\nimport type { FaroErrorBoundaryProps, FaroErrorBoundaryState } from './types';\n\nexport class FaroErrorBoundary extends Component<FaroErrorBoundaryProps, FaroErrorBoundaryState> {\n  override state: FaroErrorBoundaryState = faroErrorBoundaryInitialState;\n\n  constructor(props: FaroErrorBoundaryProps) {\n    super(props);\n\n    this.resetErrorBoundary = this.resetErrorBoundary.bind(this);\n  }\n\n  getErrorWithComponentStack(error: Error, errorInfo: ErrorInfo): Error {\n    if (!isReactVersionAtLeast17 || !errorInfo.componentStack) {\n      return error;\n    }\n\n    const newError = new Error(error.message);\n\n    newError.name = `React ErrorBoundary ${error.name}`;\n    newError.stack = errorInfo.componentStack;\n\n    return newError;\n  }\n\n  static getDerivedStateFromError(error: Error): FaroErrorBoundaryState {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    const errorWithComponentStack = this.getErrorWithComponentStack(error, errorInfo);\n\n    this.props.beforeCapture?.(errorWithComponentStack);\n\n    api.pushError(errorWithComponentStack, this.props.pushErrorOptions);\n\n    this.props.onError?.(errorWithComponentStack);\n\n    this.setState({ hasError: true, error });\n  }\n\n  override componentDidMount(): void {\n    this.props.onMount?.();\n  }\n\n  override componentWillUnmount(): void {\n    this.props.onUnmount?.(this.state.error);\n  }\n\n  resetErrorBoundary(): void {\n    this.props.onReset?.(this.state.error);\n\n    this.setState(faroErrorBoundaryInitialState);\n  }\n\n  override render(): ReactNode {\n    if (!this.state.hasError) {\n      return isFunction(this.props.children) ? this.props.children() : this.props.children;\n    }\n\n    const element = !isFunction(this.props.fallback)\n      ? this.props.fallback\n      : this.props.fallback(this.state.error!, this.resetErrorBoundary);\n\n    if (isValidElement(element)) {\n      return element;\n    }\n\n    if (this.props.fallback) {\n      internalLogger?.warn('ErrorBoundary\\n', 'Cannot get a valid ReactElement from \"fallback\"');\n    }\n\n    return null;\n  }\n}\n","import { noop } from '../utils';\n\nimport type { InternalLogger } from './types';\n\nexport enum InternalLoggerLevel {\n  OFF = 0,\n  ERROR = 1,\n  WARN = 2,\n  INFO = 3,\n  VERBOSE = 4,\n}\n\nexport const defaultInternalLoggerPrefix = 'Faro';\n\nexport const defaultInternalLogger: InternalLogger = {\n  debug: noop,\n  error: noop,\n  info: noop,\n  prefix: defaultInternalLoggerPrefix,\n  warn: noop,\n} as const;\n\nexport const defaultInternalLoggerLevel = InternalLoggerLevel.ERROR;\n","export function noop(): void {}\n","import type { UnpatchedConsole } from './types';\n\nexport const defaultUnpatchedConsole: UnpatchedConsole = { ...console };\n","import type { Config } from '../config';\nimport { defaultInternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport { defaultUnpatchedConsole } from '../unpatchedConsole';\n\nimport type { Extension } from './types';\n\nexport abstract class BaseExtension implements Extension {\n  abstract readonly name: string;\n  abstract readonly version: string;\n\n  unpatchedConsole = defaultUnpatchedConsole;\n  internalLogger = defaultInternalLogger;\n  config = {} as Config;\n  metas = {} as Metas;\n\n  logDebug(...args: unknown[]): void {\n    this.internalLogger.debug(`${this.name}\\n`, ...args);\n  }\n\n  logInfo(...args: unknown[]): void {\n    this.internalLogger.info(`${this.name}\\n`, ...args);\n  }\n\n  logWarn(...args: unknown[]): void {\n    this.internalLogger.warn(`${this.name}\\n`, ...args);\n  }\n\n  logError(...args: unknown[]): void {\n    this.internalLogger.error(`${this.name}\\n`, ...args);\n  }\n}\n","import type { API } from '../api';\nimport { BaseExtension } from '../extensions';\nimport type { Transports } from '../transports';\n\nimport type { Instrumentation } from './types';\n\nexport abstract class BaseInstrumentation extends BaseExtension implements Instrumentation {\n  api: API = {} as API;\n  transports: Transports = {} as Transports;\n\n  abstract initialize(): void;\n}\n","// auto-generated by bin/genVersion.ts\nexport const VERSION = '1.12.2';\n","export interface ReactRouterLocation<S extends any = unknown> {\n  hash: string;\n  key: string;\n  pathname: string;\n  search: string;\n  state: S;\n}\n\nexport interface ReactRouterHistory extends Record<string, any> {\n  listen?: (cb: (location: ReactRouterLocation, action: NavigationType) => void) => void;\n  location?: ReactRouterLocation;\n}\n\nexport enum ReactRouterVersion {\n  V4 = 'v4',\n  V5 = 'v5',\n  V6 = 'v6',\n  V6_data_router = 'v6_data_router',\n}\n\nexport enum NavigationType {\n  Pop = 'POP',\n  Push = 'PUSH',\n  Replace = 'REPLACE',\n}\n","/**\n * @deprecated The conventions object will be removed in a future version\n */\nexport const Conventions = {\n  /**\n   * @deprecated The event names object will be removed in a future version\n   */\n  EventNames: {\n    CLICK: 'click',\n    NAVIGATION: 'navigation',\n    SESSION_START: 'session_start',\n    VIEW_CHANGED: 'view_changed',\n  },\n} as const;\n\nexport const EVENT_CLICK = 'click';\nexport const EVENT_NAVIGATION = 'navigation';\nexport const EVENT_VIEW_CHANGED = 'view_changed';\nexport const EVENT_SESSION_START = 'session_start';\nexport const EVENT_SESSION_RESUME = 'session_resume';\nexport const EVENT_SESSION_EXTEND = 'session_extend';\nexport const EVENT_ROUTE_CHANGE = 'route_change';\n","import { EVENT_ROUTE_CHANGE } from '@grafana/faro-web-sdk';\n\nimport { api } from '../../dependencies';\n\nimport type { ReactRouterV4V5ActiveEvent } from './types';\n\nexport let activeEvent: ReactRouterV4V5ActiveEvent | undefined = undefined;\n\nexport function createNewActiveEvent(url: string): ReactRouterV4V5ActiveEvent {\n  activeEvent = {\n    route: '',\n    url,\n  };\n\n  return activeEvent;\n}\n\nexport function setActiveEventRoute(route: string): void {\n  if (activeEvent) {\n    activeEvent.route = route;\n  }\n}\n\nexport function sendActiveEvent(): void {\n  api.pushEvent(EVENT_ROUTE_CHANGE, activeEvent, undefined, { skipDedupe: true });\n\n  activeEvent = undefined;\n}\n","import type { ReactRouterHistory } from '../types';\n\nimport type { ReactRouterV4V5Dependencies, ReactRouterV4V5RouteShape } from './types';\n\nexport let isInitialized = false;\nexport let history: ReactRouterHistory;\nexport let Route: ReactRouterV4V5RouteShape;\n\nexport function setReactRouterV4V5Dependencies(dependencies: ReactRouterV4V5Dependencies): void {\n  isInitialized = true;\n\n  history = dependencies.history;\n  Route = dependencies.Route;\n}\n\nexport function setReactRouterV4V5SSRDependencies(newDependencies: Pick<ReactRouterV4V5Dependencies, 'Route'>): void {\n  Route = newDependencies.Route;\n}\n","import { setActiveEventRoute } from './activeEvent';\nimport { Route } from './routerDependencies';\nimport type { ReactRouterV4V5RouteProps } from './types';\n\nexport function FaroRoute(props: ReactRouterV4V5RouteProps) {\n  if (props?.computedMatch?.isExact) {\n    setActiveEventRoute(props.computedMatch.path);\n  }\n\n  return <Route {...props} />;\n}\n","import type { Faro, internalGlobalObjectKey } from '../sdk';\n\nexport type GlobalObject<T = typeof globalThis | typeof global | typeof self> = T & {\n  [label: string]: Faro;\n\n  [internalGlobalObjectKey]: Faro;\n};\n\n// This does not uses isUndefined method because it will throw an error in non-browser environments\nexport const globalObject = (typeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof global !== 'undefined'\n  ? global\n  : typeof self !== 'undefined'\n  ? self\n  : undefined) as unknown as GlobalObject;\n","import hoistNonReactStatics from 'hoist-non-react-statics';\nimport type { FunctionComponent } from 'react';\n\nimport { globalObject } from '@grafana/faro-web-sdk';\n\nimport type { ReactRouterV4V5Config } from '../../types';\nimport { NavigationType, ReactRouterVersion } from '../types';\n\nimport { createNewActiveEvent, sendActiveEvent } from './activeEvent';\nimport { FaroRoute } from './FaroRoute';\nimport { setReactRouterV4V5Dependencies } from './routerDependencies';\nimport type { ReactRouterV4V5Dependencies } from './types';\n\nexport function initializeReactRouterV4V5Instrumentation(dependencies: ReactRouterV4V5Dependencies): void {\n  const Route = dependencies.Route as FunctionComponent;\n  const componentDisplayName = Route.displayName ?? Route.name;\n  (FaroRoute as FunctionComponent).displayName = `faroRoute(${componentDisplayName})`;\n  hoistNonReactStatics(FaroRoute, Route);\n\n  setReactRouterV4V5Dependencies(dependencies);\n\n  createNewActiveEvent(globalObject.location?.href);\n\n  dependencies.history.listen?.((_location, action) => {\n    if (action === NavigationType.Push || action === NavigationType.Pop) {\n      sendActiveEvent();\n\n      createNewActiveEvent(globalObject.location?.href);\n    }\n  });\n}\n\nexport function createReactRouterV4Options(dependencies: ReactRouterV4V5Dependencies): ReactRouterV4V5Config {\n  return {\n    version: ReactRouterVersion.V4,\n    dependencies,\n  };\n}\n\nexport function createReactRouterV5Options(dependencies: ReactRouterV4V5Dependencies): ReactRouterV4V5Config {\n  return {\n    version: ReactRouterVersion.V5,\n    dependencies,\n  };\n}\n","import type {\n  ReactRouterV6CreateRoutesFromChildren,\n  ReactRouterV6DataRouterDependencies,\n  ReactRouterV6Dependencies,\n  ReactRouterV6MatchRoutes,\n  ReactRouterV6RoutesShape,\n  ReactRouterV6UseLocation,\n  ReactRouterV6UseNavigationType,\n} from './types';\n\nexport let isInitialized = false;\nexport let createRoutesFromChildren: ReactRouterV6CreateRoutesFromChildren;\nexport let matchRoutes: ReactRouterV6MatchRoutes;\nexport let Routes: ReactRouterV6RoutesShape;\nexport let useLocation: ReactRouterV6UseLocation;\nexport let useNavigationType: ReactRouterV6UseNavigationType;\n\nexport function setReactRouterV6Dependencies(newDependencies: ReactRouterV6Dependencies): void {\n  isInitialized = true;\n\n  createRoutesFromChildren = newDependencies.createRoutesFromChildren;\n  matchRoutes = newDependencies.matchRoutes;\n  Routes = newDependencies.Routes;\n  useLocation = newDependencies.useLocation;\n  useNavigationType = newDependencies.useNavigationType;\n}\n\nexport function setReactRouterV6SSRDependencies(newDependencies: Pick<ReactRouterV6Dependencies, 'Routes'>): void {\n  Routes = newDependencies.Routes;\n}\n\nexport function setReactRouterV6DataRouterDependencies(newDependencies: ReactRouterV6DataRouterDependencies): void {\n  isInitialized = true;\n  matchRoutes = newDependencies.matchRoutes;\n}\n","import type { ReactRouterLocation } from '../types';\n\nimport { matchRoutes } from './routerDependencies';\nimport type { ReactRouterV6RouteObject } from './types';\n\nexport function getNumberOfUrlSegments(url: string): number {\n  return url.split(/\\\\?\\//).filter((currentSegment) => currentSegment.length > 0 && currentSegment !== ',').length;\n}\n\nexport function getRouteFromLocation(routes: ReactRouterV6RouteObject[], location: ReactRouterLocation): string {\n  if (!routes || routes.length === 0) {\n    return location.pathname;\n  }\n\n  const matchedRoutes = matchRoutes(routes, location);\n\n  let pathBuilder = '';\n\n  if (matchedRoutes) {\n    for (let x = 0; x < matchedRoutes.length; x++) {\n      const branch = matchedRoutes[x]!;\n      const route = branch.route;\n\n      if (route) {\n        if (route.index) {\n          return branch.pathname;\n        }\n\n        let path = route.path;\n\n        if (path) {\n          path = path.startsWith('/') ? path : `/${path}`;\n\n          pathBuilder += path;\n\n          if (branch.pathname === location.pathname) {\n            if (getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname)) {\n              return path;\n            }\n\n            return pathBuilder;\n          }\n        }\n      }\n    }\n  }\n\n  return location.pathname;\n}\n","import { useEffect, useMemo, useRef } from 'react';\n\nimport { EVENT_ROUTE_CHANGE, globalObject } from '@grafana/faro-web-sdk';\n\nimport { api } from '../../dependencies';\nimport { NavigationType } from '../types';\n\nimport { createRoutesFromChildren, isInitialized, Routes, useLocation, useNavigationType } from './routerDependencies';\nimport type { EventRouteTransitionAttributes, ReactRouterV6RoutesProps } from './types';\nimport { getRouteFromLocation } from './utils';\n\nexport function FaroRoutes(props: ReactRouterV6RoutesProps) {\n  const location = useLocation?.();\n  const navigationType = useNavigationType?.();\n\n  const routes = useMemo(() => createRoutesFromChildren?.(props.children) ?? [], [props.children]);\n\n  const lastRouteRef = useRef<EventRouteTransitionAttributes>({});\n\n  useEffect(() => {\n    if (isInitialized && (navigationType === NavigationType.Push || navigationType === NavigationType.Pop)) {\n      const route = getRouteFromLocation(routes, location);\n      const url = globalObject.location?.href;\n\n      api.pushEvent(EVENT_ROUTE_CHANGE, {\n        toRoute: route,\n        toUrl: globalObject.location?.href,\n        ...lastRouteRef.current,\n      });\n\n      lastRouteRef.current = {\n        fromRoute: route,\n        fromUrl: url,\n      };\n    }\n  }, [location, navigationType, routes]);\n\n  const ActualRoutes = props.routesComponent ?? Routes;\n\n  return <ActualRoutes {...props} />;\n}\n","import hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport type { ReactRouterV6Config, ReactRouterV6DataRouterConfig } from '../../types';\nimport { ReactRouterVersion } from '../types';\n\nimport { FaroRoutes } from './FaroRoutes';\nimport {\n  setReactRouterV6DataRouterDependencies as setReactRouterV6DataRouterDependencies,\n  setReactRouterV6Dependencies,\n} from './routerDependencies';\nimport type { ReactRouterV6DataRouterDependencies, ReactRouterV6Dependencies } from './types';\n\nexport function initializeReactRouterV6Instrumentation(dependencies: ReactRouterV6Dependencies): void {\n  hoistNonReactStatics(FaroRoutes, dependencies.Routes);\n  setReactRouterV6Dependencies(dependencies);\n}\n\nexport function createReactRouterV6Options(dependencies: ReactRouterV6Dependencies): ReactRouterV6Config {\n  return {\n    version: ReactRouterVersion.V6,\n    dependencies,\n  };\n}\n\nexport function initializeReactRouterV6DataRouterInstrumentation(\n  dependencies: ReactRouterV6DataRouterDependencies\n): void {\n  setReactRouterV6DataRouterDependencies(dependencies);\n}\n\nexport function createReactRouterV6DataOptions(\n  dependencies: ReactRouterV6DataRouterDependencies\n): ReactRouterV6DataRouterConfig {\n  return {\n    version: ReactRouterVersion.V6_data_router,\n    dependencies,\n  };\n}\n","import type { Attributes, Span, Tracer } from '@opentelemetry/api';\nimport { Component } from 'react';\nimport type { ReactNode } from 'react';\n\nimport { VERSION } from '@grafana/faro-web-sdk';\nimport type { OTELApi } from '@grafana/faro-web-sdk';\n\nimport { api, internalLogger } from '../dependencies';\n\nexport interface FaroProfilerProps {\n  children: ReactNode;\n  name: string;\n  updateProps: Record<string, unknown>;\n}\n\nexport class FaroProfiler extends Component<FaroProfilerProps> {\n  protected mountSpan: Span | undefined = undefined;\n  protected mountSpanEndTime: number | undefined = undefined;\n  protected updateSpan: Span | undefined = undefined;\n\n  private get isOtelInitialized(): boolean {\n    return !!api?.isOTELInitialized();\n  }\n\n  private get otel(): OTELApi | undefined {\n    return api?.getOTEL()!;\n  }\n\n  private get tracer(): Tracer {\n    return this.otel?.trace.getTracer('@grafana/faro-react', VERSION)!;\n  }\n\n  private createSpan(\n    spanName: string,\n    options?: { startTime?: number; endTime?: number; attributes?: Attributes }\n  ): Span {\n    const span = this.tracer.startSpan(spanName, {\n      startTime: options?.startTime,\n      attributes: {\n        'react.component.name': this.props.name,\n        ...(options?.attributes ?? {}),\n      },\n    });\n\n    this.otel?.trace.setSpan(this.otel.context.active(), span);\n\n    if (options?.endTime) {\n      span.end(options.endTime);\n    }\n\n    return span;\n  }\n\n  private createChildSpan(\n    spanName: string,\n    parent: Span,\n    options?: { startTime?: number; endTime?: number; attributes?: Attributes }\n  ): Span {\n    let span: Span;\n\n    this.otel?.context.with(this.otel.trace.setSpan(this.otel.context.active(), parent), () => {\n      span = this.createSpan(spanName, options);\n    });\n\n    return span!;\n  }\n\n  constructor(props: FaroProfilerProps) {\n    super(props);\n\n    if (this.isOtelInitialized) {\n      this.mountSpan = this.createSpan('componentMount');\n    } else {\n      internalLogger?.error(\n        'The Faro React Profiler requires tracing instrumentation. Please enable it in the \"instrumentations\" section of your config.'\n      );\n    }\n  }\n\n  override componentDidMount(): void {\n    if (this.isOtelInitialized && this.mountSpan) {\n      this.mountSpanEndTime = Date.now();\n      this.mountSpan.end(this.mountSpanEndTime);\n    }\n  }\n\n  override shouldComponentUpdate({ updateProps }: FaroProfilerProps): boolean {\n    if (this.isOtelInitialized && this.mountSpan && updateProps !== this.props.updateProps) {\n      const changedProps = Object.keys(updateProps).filter((key) => updateProps[key] !== this.props.updateProps[key]);\n\n      if (changedProps.length > 0) {\n        this.updateSpan = this.createChildSpan('componentUpdate', this.mountSpan, {\n          attributes: {\n            'react.component.changed_props': changedProps,\n          },\n        });\n      }\n    }\n\n    return true;\n  }\n\n  override componentDidUpdate(): void {\n    if (this.isOtelInitialized && this.updateSpan) {\n      this.updateSpan.end();\n      this.updateSpan = undefined;\n    }\n  }\n\n  override componentWillUnmount(): void {\n    if (this.isOtelInitialized && this.mountSpan) {\n      this.createChildSpan('componentRender', this.mountSpan, {\n        startTime: this.mountSpanEndTime,\n        endTime: Date.now(),\n      });\n    }\n  }\n\n  override render(): ReactNode {\n    return this.props.children;\n  }\n}\n","export const primitiveUnhandledValue = 'Non-Error promise rejection captured with value:';\nexport const primitiveUnhandledType = 'UnhandledRejection';\n\nexport const domErrorType = 'DOMError';\nexport const domExceptionType = 'DOMException';\n\nexport const objectEventValue = 'Non-Error exception captured with keys:';\n\nexport const unknownSymbolString = '?';\n\nexport const valueTypeRegex =\n  /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n","export const newLineString = '\\n';\nexport const evalString = 'eval';\nexport const unknownSymbolString = '?';\nexport const atString = '@';\n\nexport const webkitLineRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nexport const webkitEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\nexport const webkitEvalString = 'eval';\nexport const webkitAddressAtString = 'address at ';\nexport const webkitAddressAtStringLength = webkitAddressAtString.length;\n\nexport const firefoxLineRegex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nexport const firefoxEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\nexport const firefoxEvalString = ' > eval';\n\nexport const safariExtensionString = 'safari-extension';\nexport const safariWebExtensionString = 'safari-web-extension';\n\nexport const reactMinifiedRegex = /Minified React error #\\d+;/i;\n","import type { ExceptionStackFrame } from '@grafana/faro-core';\n\nimport { unknownSymbolString } from './const';\n\nexport function buildStackFrame(\n  filename: string | undefined,\n  func: string | undefined,\n  lineno: number | undefined,\n  colno: number | undefined\n): ExceptionStackFrame {\n  const stackFrame: ExceptionStackFrame = {\n    filename: filename || document.location.href,\n    function: func || unknownSymbolString,\n  };\n\n  if (lineno !== undefined) {\n    stackFrame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    stackFrame.colno = colno;\n  }\n\n  return stackFrame;\n}\n","import { atString, safariExtensionString, safariWebExtensionString } from './const';\n\nexport function getDataFromSafariExtensions(\n  func: string | undefined,\n  filename: string | undefined\n): [string | undefined, string | undefined] {\n  const isSafariExtension = func?.includes(safariExtensionString);\n  const isSafariWebExtension = !isSafariExtension && func?.includes(safariWebExtensionString);\n\n  if (!isSafariExtension && !isSafariWebExtension) {\n    return [func, filename];\n  }\n\n  return [\n    func?.includes(atString) ? func.split(atString)[0] : func,\n    isSafariExtension ? `${safariExtensionString}:${filename}` : `${safariWebExtensionString}:${filename}`,\n  ];\n}\n","import { isNumber } from '@grafana/faro-core';\nimport type { ExceptionStackFrame, ExtendedError } from '@grafana/faro-core';\n\nimport { buildStackFrame } from './buildStackFrame';\nimport {\n  evalString,\n  firefoxEvalRegex,\n  firefoxEvalString,\n  firefoxLineRegex,\n  newLineString,\n  reactMinifiedRegex,\n  webkitAddressAtString,\n  webkitAddressAtStringLength,\n  webkitEvalRegex,\n  webkitEvalString,\n  webkitLineRegex,\n} from './const';\nimport { getDataFromSafariExtensions } from './getDataFromSafariExtensions';\n\nexport function getStackFramesFromError(error: ExtendedError): ExceptionStackFrame[] {\n  let lines: string[] = [];\n\n  if (error.stacktrace) {\n    lines = error.stacktrace.split(newLineString).filter((_line, idx) => idx % 2 === 0);\n  } else if (error.stack) {\n    lines = error.stack.split(newLineString);\n  }\n\n  const stackFrames = lines.reduce((acc, line, idx) => {\n    let parts: RegExpExecArray | null;\n    let func: string | undefined;\n    let filename: string | undefined;\n    let lineno: string | undefined;\n    let colno: string | undefined;\n\n    if ((parts = webkitLineRegex.exec(line))) {\n      func = parts[1];\n      filename = parts[2];\n      lineno = parts[3];\n      colno = parts[4];\n\n      if (filename?.startsWith(webkitEvalString)) {\n        const submatch = webkitEvalRegex.exec(filename);\n\n        if (submatch) {\n          filename = submatch[1];\n          lineno = submatch[2];\n          colno = submatch[3];\n        }\n      }\n\n      filename = filename?.startsWith(webkitAddressAtString)\n        ? filename.substring(webkitAddressAtStringLength)\n        : filename;\n      [func, filename] = getDataFromSafariExtensions(func, filename);\n    } else if ((parts = firefoxLineRegex.exec(line))) {\n      func = parts[1];\n      filename = parts[3];\n      lineno = parts[4];\n      colno = parts[5];\n\n      if (!!filename && filename.includes(firefoxEvalString)) {\n        const submatch = firefoxEvalRegex.exec(filename);\n\n        if (submatch) {\n          func = func || evalString;\n          filename = submatch[1];\n          lineno = submatch[2];\n        }\n      } else if (idx === 0 && !colno && isNumber(error.columnNumber)) {\n        colno = String(error.columnNumber! + 1);\n      }\n\n      [func, filename] = getDataFromSafariExtensions(func, filename);\n    }\n\n    if (filename || func) {\n      acc.push(buildStackFrame(filename, func, lineno ? Number(lineno) : undefined, colno ? Number(colno) : undefined));\n    }\n\n    return acc;\n  }, [] as ExceptionStackFrame[]);\n\n  if (reactMinifiedRegex.test(error.message)) {\n    return stackFrames.slice(1);\n  }\n\n  return stackFrames;\n}\n","import { isDomError, isDomException, isError, isErrorEvent, isEvent, isObject } from '@grafana/faro-core';\nimport type { ExceptionStackFrame } from '@grafana/faro-core';\n\nimport { domErrorType, domExceptionType, objectEventValue } from './const';\nimport { getStackFramesFromError } from './stackFrames';\nimport type { ErrorEvent } from './types';\n\nexport function getErrorDetails(evt: ErrorEvent): [string | undefined, string | undefined, ExceptionStackFrame[]] {\n  let value: string | undefined;\n  let type: string | undefined;\n  let stackFrames: ExceptionStackFrame[] = [];\n  let isDomErrorRes: boolean | undefined;\n  let isEventRes: boolean | undefined;\n\n  if (isErrorEvent(evt) && evt.error) {\n    value = evt.error.message;\n    type = evt.error.name;\n    stackFrames = getStackFramesFromError(evt.error);\n  } else if ((isDomErrorRes = isDomError(evt)) || isDomException(evt)) {\n    const { name, message } = evt;\n\n    type = name ?? (isDomErrorRes ? domErrorType : domExceptionType);\n    value = message ? `${type}: ${message}` : type;\n  } else if (isError(evt)) {\n    value = evt.message;\n    stackFrames = getStackFramesFromError(evt);\n  } else if (isObject(evt) || (isEventRes = isEvent(evt))) {\n    type = isEventRes ? evt.constructor.name : undefined;\n    value = `${objectEventValue} ${Object.keys(evt)}`;\n  }\n\n  return [value, type, stackFrames];\n}\n","export const defaultExceptionType = 'Error';\n","import { isString } from '@grafana/faro-core';\nimport type { API, ExceptionStackFrame } from '@grafana/faro-core';\n\nimport { unknownSymbolString } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nimport { getValueAndTypeFromMessage } from './getValueAndTypeFromMessage';\nimport { buildStackFrame } from './stackFrames';\n\nexport function registerOnerror(api: API): void {\n  const oldOnerror = window.onerror;\n\n  window.onerror = (...args) => {\n    try {\n      const [evt, source, lineno, colno, error] = args;\n      let value: string | undefined;\n      let type: string | undefined;\n      let stackFrames: ExceptionStackFrame[] = [];\n      const eventIsString = isString(evt);\n      const initialStackFrame = buildStackFrame(source, unknownSymbolString, lineno, colno);\n\n      if (error || !eventIsString) {\n        [value, type, stackFrames] = getErrorDetails((error ?? evt) as Error | Event);\n\n        if (stackFrames.length === 0) {\n          stackFrames = [initialStackFrame];\n        }\n      } else if (eventIsString) {\n        [value, type] = getValueAndTypeFromMessage(evt);\n        stackFrames = [initialStackFrame];\n      }\n\n      if (value) {\n        api.pushError(new Error(value), { type, stackFrames });\n      }\n    } finally {\n      oldOnerror?.apply(window, args);\n    }\n  };\n}\n","import { defaultExceptionType } from '@grafana/faro-core';\n\nimport { valueTypeRegex } from './const';\n\nexport function getValueAndTypeFromMessage(message: string): [string, string] {\n  const groups = message.match(valueTypeRegex);\n\n  const type = groups?.[1] ?? defaultExceptionType;\n  const value = groups?.[2] ?? message;\n\n  return [value, type];\n}\n","import { ExceptionStackFrame, isPrimitive } from '@grafana/faro-core';\nimport type { API } from '@grafana/faro-core';\n\nimport { primitiveUnhandledType, primitiveUnhandledValue } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nimport type { ExtendedPromiseRejectionEvent } from './types';\n\nexport function registerOnunhandledrejection(api: API): void {\n  window.addEventListener('unhandledrejection', (evt: ExtendedPromiseRejectionEvent) => {\n    let error = evt;\n\n    if (error.reason) {\n      error = evt.reason;\n    } else if (evt.detail?.reason) {\n      error = evt.detail?.reason;\n    }\n\n    let value: string | undefined;\n    let type: string | undefined;\n    let stackFrames: ExceptionStackFrame[] = [];\n    if (isPrimitive(error)) {\n      value = `${primitiveUnhandledValue} ${String(error)}`;\n      type = primitiveUnhandledType;\n    } else {\n      [value, type, stackFrames] = getErrorDetails(error);\n    }\n\n    if (value) {\n      api.pushError(new Error(value), { type, stackFrames });\n    }\n  });\n}\n","import { BaseInstrumentation, VERSION } from '@grafana/faro-core';\n\nimport { registerOnerror } from './registerOnerror';\nimport { registerOnunhandledrejection } from './registerOnunhandledrejection';\n\nexport class ErrorsInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-errors';\n  readonly version = VERSION;\n\n  initialize(): void {\n    this.logDebug('Initializing');\n\n    registerOnerror(this.api);\n\n    registerOnunhandledrejection(this.api);\n  }\n}\n","var e,n,t,r,i,o=-1,a=function(e){addEventListener(\"pageshow\",(function(n){n.persisted&&(o=n.timeStamp,e(n))}),!0)},c=function(){var e=self.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0];if(e&&e.responseStart>0&&e.responseStart<performance.now())return e},u=function(){var e=c();return e&&e.activationStart||0},f=function(e,n){var t=c(),r=\"navigate\";o>=0?r=\"back-forward-cache\":t&&(document.prerendering||u()>0?r=\"prerender\":document.wasDiscarded?r=\"restore\":t.type&&(r=t.type.replace(/_/g,\"-\")));return{name:e,value:void 0===n?-1:n,rating:\"good\",delta:0,entries:[],id:\"v4-\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:r}},s=function(e,n,t){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){var r=new PerformanceObserver((function(e){Promise.resolve().then((function(){n(e.getEntries())}))}));return r.observe(Object.assign({type:e,buffered:!0},t||{})),r}}catch(e){}},d=function(e,n,t,r){var i,o;return function(a){n.value>=0&&(a||r)&&((o=n.value-(i||0))||void 0===i)&&(i=n.value,n.delta=o,n.rating=function(e,n){return e>n[1]?\"poor\":e>n[0]?\"needs-improvement\":\"good\"}(n.value,t),e(n))}},l=function(e){requestAnimationFrame((function(){return requestAnimationFrame((function(){return e()}))}))},p=function(e){document.addEventListener(\"visibilitychange\",(function(){\"hidden\"===document.visibilityState&&e()}))},v=function(e){var n=!1;return function(){n||(e(),n=!0)}},m=-1,h=function(){return\"hidden\"!==document.visibilityState||document.prerendering?1/0:0},g=function(e){\"hidden\"===document.visibilityState&&m>-1&&(m=\"visibilitychange\"===e.type?e.timeStamp:0,T())},y=function(){addEventListener(\"visibilitychange\",g,!0),addEventListener(\"prerenderingchange\",g,!0)},T=function(){removeEventListener(\"visibilitychange\",g,!0),removeEventListener(\"prerenderingchange\",g,!0)},E=function(){return m<0&&(m=h(),y(),a((function(){setTimeout((function(){m=h(),y()}),0)}))),{get firstHiddenTime(){return m}}},C=function(e){document.prerendering?addEventListener(\"prerenderingchange\",(function(){return e()}),!0):e()},b=[1800,3e3],S=function(e,n){n=n||{},C((function(){var t,r=E(),i=f(\"FCP\"),o=s(\"paint\",(function(e){e.forEach((function(e){\"first-contentful-paint\"===e.name&&(o.disconnect(),e.startTime<r.firstHiddenTime&&(i.value=Math.max(e.startTime-u(),0),i.entries.push(e),t(!0)))}))}));o&&(t=d(e,i,b,n.reportAllChanges),a((function(r){i=f(\"FCP\"),t=d(e,i,b,n.reportAllChanges),l((function(){i.value=performance.now()-r.timeStamp,t(!0)}))})))}))},L=[.1,.25],w=function(e,n){n=n||{},S(v((function(){var t,r=f(\"CLS\",0),i=0,o=[],c=function(e){e.forEach((function(e){if(!e.hadRecentInput){var n=o[0],t=o[o.length-1];i&&e.startTime-t.startTime<1e3&&e.startTime-n.startTime<5e3?(i+=e.value,o.push(e)):(i=e.value,o=[e])}})),i>r.value&&(r.value=i,r.entries=o,t())},u=s(\"layout-shift\",c);u&&(t=d(e,r,L,n.reportAllChanges),p((function(){c(u.takeRecords()),t(!0)})),a((function(){i=0,r=f(\"CLS\",0),t=d(e,r,L,n.reportAllChanges),l((function(){return t()}))})),setTimeout(t,0))})))},A=0,I=1/0,P=0,M=function(e){e.forEach((function(e){e.interactionId&&(I=Math.min(I,e.interactionId),P=Math.max(P,e.interactionId),A=P?(P-I)/7+1:0)}))},k=function(){return e?A:performance.interactionCount||0},F=function(){\"interactionCount\"in performance||e||(e=s(\"event\",M,{type:\"event\",buffered:!0,durationThreshold:0}))},D=[],x=new Map,R=0,B=function(){var e=Math.min(D.length-1,Math.floor((k()-R)/50));return D[e]},H=[],q=function(e){if(H.forEach((function(n){return n(e)})),e.interactionId||\"first-input\"===e.entryType){var n=D[D.length-1],t=x.get(e.interactionId);if(t||D.length<10||e.duration>n.latency){if(t)e.duration>t.latency?(t.entries=[e],t.latency=e.duration):e.duration===t.latency&&e.startTime===t.entries[0].startTime&&t.entries.push(e);else{var r={id:e.interactionId,latency:e.duration,entries:[e]};x.set(r.id,r),D.push(r)}D.sort((function(e,n){return n.latency-e.latency})),D.length>10&&D.splice(10).forEach((function(e){return x.delete(e.id)}))}}},O=function(e){var n=self.requestIdleCallback||self.setTimeout,t=-1;return e=v(e),\"hidden\"===document.visibilityState?e():(t=n(e),p(e)),t},N=[200,500],j=function(e,n){\"PerformanceEventTiming\"in self&&\"interactionId\"in PerformanceEventTiming.prototype&&(n=n||{},C((function(){var t;F();var r,i=f(\"INP\"),o=function(e){O((function(){e.forEach(q);var n=B();n&&n.latency!==i.value&&(i.value=n.latency,i.entries=n.entries,r())}))},c=s(\"event\",o,{durationThreshold:null!==(t=n.durationThreshold)&&void 0!==t?t:40});r=d(e,i,N,n.reportAllChanges),c&&(c.observe({type:\"first-input\",buffered:!0}),p((function(){o(c.takeRecords()),r(!0)})),a((function(){R=k(),D.length=0,x.clear(),i=f(\"INP\"),r=d(e,i,N,n.reportAllChanges)})))})))},_=[2500,4e3],z={},G=function(e,n){n=n||{},C((function(){var t,r=E(),i=f(\"LCP\"),o=function(e){n.reportAllChanges||(e=e.slice(-1)),e.forEach((function(e){e.startTime<r.firstHiddenTime&&(i.value=Math.max(e.startTime-u(),0),i.entries=[e],t())}))},c=s(\"largest-contentful-paint\",o);if(c){t=d(e,i,_,n.reportAllChanges);var m=v((function(){z[i.id]||(o(c.takeRecords()),c.disconnect(),z[i.id]=!0,t(!0))}));[\"keydown\",\"click\"].forEach((function(e){addEventListener(e,(function(){return O(m)}),{once:!0,capture:!0})})),p(m),a((function(r){i=f(\"LCP\"),t=d(e,i,_,n.reportAllChanges),l((function(){i.value=performance.now()-r.timeStamp,z[i.id]=!0,t(!0)}))}))}}))},J=[800,1800],K=function e(n){document.prerendering?C((function(){return e(n)})):\"complete\"!==document.readyState?addEventListener(\"load\",(function(){return e(n)}),!0):setTimeout(n,0)},Q=function(e,n){n=n||{};var t=f(\"TTFB\"),r=d(e,t,J,n.reportAllChanges);K((function(){var i=c();i&&(t.value=Math.max(i.responseStart-u(),0),t.entries=[i],r(!0),a((function(){t=f(\"TTFB\",0),(r=d(e,t,J,n.reportAllChanges))(!0)})))}))},U={passive:!0,capture:!0},V=new Date,W=function(e,i){n||(n=i,t=e,r=new Date,Z(removeEventListener),X())},X=function(){if(t>=0&&t<r-V){var e={entryType:\"first-input\",name:n.type,target:n.target,cancelable:n.cancelable,startTime:n.timeStamp,processingStart:n.timeStamp+t};i.forEach((function(n){n(e)})),i=[]}},Y=function(e){if(e.cancelable){var n=(e.timeStamp>1e12?new Date:performance.now())-e.timeStamp;\"pointerdown\"==e.type?function(e,n){var t=function(){W(e,n),i()},r=function(){i()},i=function(){removeEventListener(\"pointerup\",t,U),removeEventListener(\"pointercancel\",r,U)};addEventListener(\"pointerup\",t,U),addEventListener(\"pointercancel\",r,U)}(n,e):W(n,e)}},Z=function(e){[\"mousedown\",\"keydown\",\"touchstart\",\"pointerdown\"].forEach((function(n){return e(n,Y,U)}))},$=[100,300],ee=function(e,r){r=r||{},C((function(){var o,c=E(),u=f(\"FID\"),l=function(e){e.startTime<c.firstHiddenTime&&(u.value=e.processingStart-e.startTime,u.entries.push(e),o(!0))},m=function(e){e.forEach(l)},h=s(\"first-input\",m);o=d(e,u,$,r.reportAllChanges),h&&(p(v((function(){m(h.takeRecords()),h.disconnect()}))),a((function(){var a;u=f(\"FID\"),o=d(e,u,$,r.reportAllChanges),i=[],t=-1,n=null,Z(addEventListener),a=l,i.push(a),X()})))}))};export{L as CLSThresholds,b as FCPThresholds,$ as FIDThresholds,N as INPThresholds,_ as LCPThresholds,J as TTFBThresholds,w as onCLS,S as onFCP,ee as onFID,j as onINP,G as onLCP,Q as onTTFB};\n","import { onCLS, onFCP, onFID, onINP, onLCP, onTTFB } from 'web-vitals';\n\nimport type { MeasurementsAPI } from '@grafana/faro-core';\n\nexport class WebVitalsBasic {\n  static mapping = {\n    cls: onCLS,\n    fcp: onFCP,\n    fid: onFID,\n    inp: onINP,\n    lcp: onLCP,\n    ttfb: onTTFB,\n  };\n\n  constructor(private pushMeasurement: MeasurementsAPI['pushMeasurement']) {}\n\n  initialize(): void {\n    Object.entries(WebVitalsBasic.mapping).forEach(([indicator, executor]) => {\n      executor((metric) => {\n        this.pushMeasurement({\n          type: 'web-vitals',\n\n          values: {\n            [indicator]: metric.value,\n          },\n        });\n      });\n    });\n  }\n}\n","var t,e,n=function(){var t=self.performance&&performance.getEntriesByType&&performance.getEntriesByType(\"navigation\")[0];if(t&&t.responseStart>0&&t.responseStart<performance.now())return t},r=function(t){if(\"loading\"===document.readyState)return\"loading\";var e=n();if(e){if(t<e.domInteractive)return\"loading\";if(0===e.domContentLoadedEventStart||t<e.domContentLoadedEventStart)return\"dom-interactive\";if(0===e.domComplete||t<e.domComplete)return\"dom-content-loaded\"}return\"complete\"},i=function(t){var e=t.nodeName;return 1===t.nodeType?e.toLowerCase():e.toUpperCase().replace(/^#/,\"\")},a=function(t,e){var n=\"\";try{for(;t&&9!==t.nodeType;){var r=t,a=r.id?\"#\"+r.id:i(r)+(r.classList&&r.classList.value&&r.classList.value.trim()&&r.classList.value.trim().length?\".\"+r.classList.value.trim().replace(/\\s+/g,\".\"):\"\");if(n.length+a.length>(e||100)-1)return n||a;if(n=n?a+\">\"+n:a,r.id)break;t=r.parentNode}}catch(t){}return n},o=-1,c=function(){return o},u=function(t){addEventListener(\"pageshow\",(function(e){e.persisted&&(o=e.timeStamp,t(e))}),!0)},s=function(){var t=n();return t&&t.activationStart||0},f=function(t,e){var r=n(),i=\"navigate\";c()>=0?i=\"back-forward-cache\":r&&(document.prerendering||s()>0?i=\"prerender\":document.wasDiscarded?i=\"restore\":r.type&&(i=r.type.replace(/_/g,\"-\")));return{name:t,value:void 0===e?-1:e,rating:\"good\",delta:0,entries:[],id:\"v4-\".concat(Date.now(),\"-\").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:i}},d=function(t,e,n){try{if(PerformanceObserver.supportedEntryTypes.includes(t)){var r=new PerformanceObserver((function(t){Promise.resolve().then((function(){e(t.getEntries())}))}));return r.observe(Object.assign({type:t,buffered:!0},n||{})),r}}catch(t){}},l=function(t,e,n,r){var i,a;return function(o){e.value>=0&&(o||r)&&((a=e.value-(i||0))||void 0===i)&&(i=e.value,e.delta=a,e.rating=function(t,e){return t>e[1]?\"poor\":t>e[0]?\"needs-improvement\":\"good\"}(e.value,n),t(e))}},m=function(t){requestAnimationFrame((function(){return requestAnimationFrame((function(){return t()}))}))},p=function(t){document.addEventListener(\"visibilitychange\",(function(){\"hidden\"===document.visibilityState&&t()}))},v=function(t){var e=!1;return function(){e||(t(),e=!0)}},g=-1,h=function(){return\"hidden\"!==document.visibilityState||document.prerendering?1/0:0},T=function(t){\"hidden\"===document.visibilityState&&g>-1&&(g=\"visibilitychange\"===t.type?t.timeStamp:0,E())},y=function(){addEventListener(\"visibilitychange\",T,!0),addEventListener(\"prerenderingchange\",T,!0)},E=function(){removeEventListener(\"visibilitychange\",T,!0),removeEventListener(\"prerenderingchange\",T,!0)},S=function(){return g<0&&(g=h(),y(),u((function(){setTimeout((function(){g=h(),y()}),0)}))),{get firstHiddenTime(){return g}}},b=function(t){document.prerendering?addEventListener(\"prerenderingchange\",(function(){return t()}),!0):t()},L=[1800,3e3],C=function(t,e){e=e||{},b((function(){var n,r=S(),i=f(\"FCP\"),a=d(\"paint\",(function(t){t.forEach((function(t){\"first-contentful-paint\"===t.name&&(a.disconnect(),t.startTime<r.firstHiddenTime&&(i.value=Math.max(t.startTime-s(),0),i.entries.push(t),n(!0)))}))}));a&&(n=l(t,i,L,e.reportAllChanges),u((function(r){i=f(\"FCP\"),n=l(t,i,L,e.reportAllChanges),m((function(){i.value=performance.now()-r.timeStamp,n(!0)}))})))}))},M=[.1,.25],D=function(t,e){!function(t,e){e=e||{},C(v((function(){var n,r=f(\"CLS\",0),i=0,a=[],o=function(t){t.forEach((function(t){if(!t.hadRecentInput){var e=a[0],n=a[a.length-1];i&&t.startTime-n.startTime<1e3&&t.startTime-e.startTime<5e3?(i+=t.value,a.push(t)):(i=t.value,a=[t])}})),i>r.value&&(r.value=i,r.entries=a,n())},c=d(\"layout-shift\",o);c&&(n=l(t,r,M,e.reportAllChanges),p((function(){o(c.takeRecords()),n(!0)})),u((function(){i=0,r=f(\"CLS\",0),n=l(t,r,M,e.reportAllChanges),m((function(){return n()}))})),setTimeout(n,0))})))}((function(e){var n=function(t){var e,n={};if(t.entries.length){var i=t.entries.reduce((function(t,e){return t&&t.value>e.value?t:e}));if(i&&i.sources&&i.sources.length){var o=(e=i.sources).find((function(t){return t.node&&1===t.node.nodeType}))||e[0];o&&(n={largestShiftTarget:a(o.node),largestShiftTime:i.startTime,largestShiftValue:i.value,largestShiftSource:o,largestShiftEntry:i,loadState:r(i.startTime)})}}return Object.assign(t,{attribution:n})}(e);t(n)}),e)},w=function(t,e){C((function(e){var i=function(t){var e={timeToFirstByte:0,firstByteToFCP:t.value,loadState:r(c())};if(t.entries.length){var i=n(),a=t.entries[t.entries.length-1];if(i){var o=i.activationStart||0,u=Math.max(0,i.responseStart-o);e={timeToFirstByte:u,firstByteToFCP:t.value-u,loadState:r(t.entries[0].startTime),navigationEntry:i,fcpEntry:a}}}return Object.assign(t,{attribution:e})}(e);t(i)}),e)},x=0,I=1/0,k=0,A=function(t){t.forEach((function(t){t.interactionId&&(I=Math.min(I,t.interactionId),k=Math.max(k,t.interactionId),x=k?(k-I)/7+1:0)}))},F=function(){return t?x:performance.interactionCount||0},P=function(){\"interactionCount\"in performance||t||(t=d(\"event\",A,{type:\"event\",buffered:!0,durationThreshold:0}))},B=[],O=new Map,R=0,j=function(){var t=Math.min(B.length-1,Math.floor((F()-R)/50));return B[t]},q=[],H=function(t){if(q.forEach((function(e){return e(t)})),t.interactionId||\"first-input\"===t.entryType){var e=B[B.length-1],n=O.get(t.interactionId);if(n||B.length<10||t.duration>e.latency){if(n)t.duration>n.latency?(n.entries=[t],n.latency=t.duration):t.duration===n.latency&&t.startTime===n.entries[0].startTime&&n.entries.push(t);else{var r={id:t.interactionId,latency:t.duration,entries:[t]};O.set(r.id,r),B.push(r)}B.sort((function(t,e){return e.latency-t.latency})),B.length>10&&B.splice(10).forEach((function(t){return O.delete(t.id)}))}}},N=function(t){var e=self.requestIdleCallback||self.setTimeout,n=-1;return t=v(t),\"hidden\"===document.visibilityState?t():(n=e(t),p(t)),n},W=[200,500],z=function(t,e){\"PerformanceEventTiming\"in self&&\"interactionId\"in PerformanceEventTiming.prototype&&(e=e||{},b((function(){var n;P();var r,i=f(\"INP\"),a=function(t){N((function(){t.forEach(H);var e=j();e&&e.latency!==i.value&&(i.value=e.latency,i.entries=e.entries,r())}))},o=d(\"event\",a,{durationThreshold:null!==(n=e.durationThreshold)&&void 0!==n?n:40});r=l(t,i,W,e.reportAllChanges),o&&(o.observe({type:\"first-input\",buffered:!0}),p((function(){a(o.takeRecords()),r(!0)})),u((function(){R=F(),B.length=0,O.clear(),i=f(\"INP\"),r=l(t,i,W,e.reportAllChanges)})))})))},U=[],V=[],_=0,G=new WeakMap,J=new Map,K=-1,Q=function(t){U=U.concat(t),X()},X=function(){K<0&&(K=N(Y))},Y=function(){J.size>10&&J.forEach((function(t,e){O.has(e)||J.delete(e)}));var t=B.map((function(t){return G.get(t.entries[0])})),e=V.length-50;V=V.filter((function(n,r){return r>=e||t.includes(n)}));for(var n=new Set,r=0;r<V.length;r++){var i=V[r];nt(i.startTime,i.processingEnd).forEach((function(t){n.add(t)}))}var a=U.length-1-50;U=U.filter((function(t,e){return t.startTime>_&&e>a||n.has(t)})),K=-1};q.push((function(t){t.interactionId&&t.target&&!J.has(t.interactionId)&&J.set(t.interactionId,t.target)}),(function(t){var e,n=t.startTime+t.duration;_=Math.max(_,t.processingEnd);for(var r=V.length-1;r>=0;r--){var i=V[r];if(Math.abs(n-i.renderTime)<=8){(e=i).startTime=Math.min(t.startTime,e.startTime),e.processingStart=Math.min(t.processingStart,e.processingStart),e.processingEnd=Math.max(t.processingEnd,e.processingEnd),e.entries.push(t);break}}e||(e={startTime:t.startTime,processingStart:t.processingStart,processingEnd:t.processingEnd,renderTime:n,entries:[t]},V.push(e)),(t.interactionId||\"first-input\"===t.entryType)&&G.set(t,e),X()}));var Z,$,tt,et,nt=function(t,e){for(var n,r=[],i=0;n=U[i];i++)if(!(n.startTime+n.duration<t)){if(n.startTime>e)break;r.push(n)}return r},rt=function(t,n){e||(e=d(\"long-animation-frame\",Q)),z((function(e){var n=function(t){var e=t.entries[0],n=G.get(e),i=e.processingStart,o=n.processingEnd,c=n.entries.sort((function(t,e){return t.processingStart-e.processingStart})),u=nt(e.startTime,o),s=t.entries.find((function(t){return t.target})),f=s&&s.target||J.get(e.interactionId),d=[e.startTime+e.duration,o].concat(u.map((function(t){return t.startTime+t.duration}))),l=Math.max.apply(Math,d),m={interactionTarget:a(f),interactionTargetElement:f,interactionType:e.name.startsWith(\"key\")?\"keyboard\":\"pointer\",interactionTime:e.startTime,nextPaintTime:l,processedEventEntries:c,longAnimationFrameEntries:u,inputDelay:i-e.startTime,processingDuration:o-i,presentationDelay:Math.max(l-o,0),loadState:r(e.startTime)};return Object.assign(t,{attribution:m})}(e);t(n)}),n)},it=[2500,4e3],at={},ot=function(t,e){!function(t,e){e=e||{},b((function(){var n,r=S(),i=f(\"LCP\"),a=function(t){e.reportAllChanges||(t=t.slice(-1)),t.forEach((function(t){t.startTime<r.firstHiddenTime&&(i.value=Math.max(t.startTime-s(),0),i.entries=[t],n())}))},o=d(\"largest-contentful-paint\",a);if(o){n=l(t,i,it,e.reportAllChanges);var c=v((function(){at[i.id]||(a(o.takeRecords()),o.disconnect(),at[i.id]=!0,n(!0))}));[\"keydown\",\"click\"].forEach((function(t){addEventListener(t,(function(){return N(c)}),{once:!0,capture:!0})})),p(c),u((function(r){i=f(\"LCP\"),n=l(t,i,it,e.reportAllChanges),m((function(){i.value=performance.now()-r.timeStamp,at[i.id]=!0,n(!0)}))}))}}))}((function(e){var r=function(t){var e={timeToFirstByte:0,resourceLoadDelay:0,resourceLoadDuration:0,elementRenderDelay:t.value};if(t.entries.length){var r=n();if(r){var i=r.activationStart||0,o=t.entries[t.entries.length-1],c=o.url&&performance.getEntriesByType(\"resource\").filter((function(t){return t.name===o.url}))[0],u=Math.max(0,r.responseStart-i),s=Math.max(u,c?(c.requestStart||c.startTime)-i:0),f=Math.max(s,c?c.responseEnd-i:0),d=Math.max(f,o.startTime-i);e={element:a(o.element),timeToFirstByte:u,resourceLoadDelay:s-u,resourceLoadDuration:f-s,elementRenderDelay:d-f,navigationEntry:r,lcpEntry:o},o.url&&(e.url=o.url),c&&(e.lcpResourceEntry=c)}}return Object.assign(t,{attribution:e})}(e);t(r)}),e)},ct=[800,1800],ut=function t(e){document.prerendering?b((function(){return t(e)})):\"complete\"!==document.readyState?addEventListener(\"load\",(function(){return t(e)}),!0):setTimeout(e,0)},st=function(t,e){e=e||{};var r=f(\"TTFB\"),i=l(t,r,ct,e.reportAllChanges);ut((function(){var a=n();a&&(r.value=Math.max(a.responseStart-s(),0),r.entries=[a],i(!0),u((function(){r=f(\"TTFB\",0),(i=l(t,r,ct,e.reportAllChanges))(!0)})))}))},ft=function(t,e){st((function(e){var n=function(t){var e={waitingDuration:0,cacheDuration:0,dnsDuration:0,connectionDuration:0,requestDuration:0};if(t.entries.length){var n=t.entries[0],r=n.activationStart||0,i=Math.max((n.workerStart||n.fetchStart)-r,0),a=Math.max(n.domainLookupStart-r,0),o=Math.max(n.connectStart-r,0),c=Math.max(n.connectEnd-r,0);e={waitingDuration:i,cacheDuration:a-i,dnsDuration:o-a,connectionDuration:c-o,requestDuration:t.value-c,navigationEntry:n}}return Object.assign(t,{attribution:e})}(e);t(n)}),e)},dt={passive:!0,capture:!0},lt=new Date,mt=function(t,e){Z||(Z=e,$=t,tt=new Date,gt(removeEventListener),pt())},pt=function(){if($>=0&&$<tt-lt){var t={entryType:\"first-input\",name:Z.type,target:Z.target,cancelable:Z.cancelable,startTime:Z.timeStamp,processingStart:Z.timeStamp+$};et.forEach((function(e){e(t)})),et=[]}},vt=function(t){if(t.cancelable){var e=(t.timeStamp>1e12?new Date:performance.now())-t.timeStamp;\"pointerdown\"==t.type?function(t,e){var n=function(){mt(t,e),i()},r=function(){i()},i=function(){removeEventListener(\"pointerup\",n,dt),removeEventListener(\"pointercancel\",r,dt)};addEventListener(\"pointerup\",n,dt),addEventListener(\"pointercancel\",r,dt)}(e,t):mt(e,t)}},gt=function(t){[\"mousedown\",\"keydown\",\"touchstart\",\"pointerdown\"].forEach((function(e){return t(e,vt,dt)}))},ht=[100,300],Tt=function(t,e){e=e||{},b((function(){var n,r=S(),i=f(\"FID\"),a=function(t){t.startTime<r.firstHiddenTime&&(i.value=t.processingStart-t.startTime,i.entries.push(t),n(!0))},o=function(t){t.forEach(a)},c=d(\"first-input\",o);n=l(t,i,ht,e.reportAllChanges),c&&(p(v((function(){o(c.takeRecords()),c.disconnect()}))),u((function(){var r;i=f(\"FID\"),n=l(t,i,ht,e.reportAllChanges),et=[],$=-1,Z=null,gt(addEventListener),r=a,et.push(r),pt()})))}))},yt=function(t,e){Tt((function(e){var n=function(t){var e=t.entries[0],n={eventTarget:a(e.target),eventType:e.name,eventTime:e.startTime,eventEntry:e,loadState:r(e.startTime)};return Object.assign(t,{attribution:n})}(e);t(n)}),e)};export{M as CLSThresholds,L as FCPThresholds,ht as FIDThresholds,W as INPThresholds,it as LCPThresholds,ct as TTFBThresholds,D as onCLS,w as onFCP,yt as onFID,rt as onINP,ot as onLCP,ft as onTTFB};\n","export const unknownString = 'unknown';\n","export const internalGlobalObjectKey = '_faroInternal';\n","import type { API } from '../api';\nimport type { Config } from '../config';\nimport type { Instrumentations } from '../instrumentations';\nimport type { InternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport type { Transports } from '../transports';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\n\nimport { setFaroOnGlobalObject } from './faroGlobalObject';\nimport { setInternalFaroOnGlobalObject } from './internalFaroGlobalObject';\nimport type { Faro } from './types';\n\nexport let faro: Faro = {} as Faro;\n\nexport function registerFaro(\n  unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  api: API,\n  instrumentations: Instrumentations\n): Faro {\n  internalLogger.debug('Initializing Faro');\n\n  faro = {\n    api,\n    config,\n    instrumentations,\n    internalLogger,\n    metas,\n    pause: transports.pause,\n    transports,\n    unpatchedConsole,\n    unpause: transports.unpause,\n  };\n\n  setInternalFaroOnGlobalObject(faro);\n\n  setFaroOnGlobalObject(faro);\n\n  return faro;\n}\n","import { globalObject } from '../globalObject';\n\nimport { internalGlobalObjectKey } from './const';\nimport type { Faro } from './types';\n\nexport function getInternalFromGlobalObject(): Faro | undefined {\n  return globalObject[internalGlobalObjectKey];\n}\n\nexport function setInternalFaroOnGlobalObject(faro: Faro): void {\n  if (!faro.config.isolate) {\n    faro.internalLogger.debug('Registering internal Faro instance on global object');\n\n    Object.defineProperty(globalObject, internalGlobalObjectKey, {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: faro,\n    });\n  } else {\n    faro.internalLogger.debug('Skipping registering internal Faro instance on global object');\n  }\n}\n\nexport function isInternalFaroOnGlobalObject(): boolean {\n  return internalGlobalObjectKey in globalObject;\n}\n","import { globalObject } from '../globalObject';\n\nimport type { Faro } from './types';\n\nexport function setFaroOnGlobalObject(faro: Faro): void {\n  if (!faro.config.preventGlobalExposure) {\n    faro.internalLogger.debug(\n      `Registering public faro reference in the global scope using \"${faro.config.globalObjectKey}\" key`\n    );\n\n    if (faro.config.globalObjectKey in globalObject) {\n      faro.internalLogger.warn(\n        `Skipping global registration due to key \"${faro.config.globalObjectKey}\" being used already. Please set \"globalObjectKey\" to something else or set \"preventGlobalExposure\" to \"true\"`\n      );\n\n      return;\n    }\n\n    Object.defineProperty(globalObject, faro.config.globalObjectKey, {\n      configurable: false,\n      writable: false,\n      value: faro,\n    });\n  } else {\n    faro.internalLogger.debug('Skipping registering public Faro instance in the global scope');\n  }\n}\n","import { faro } from '@grafana/faro-core';\n\nexport const webStorageType = {\n  session: 'sessionStorage',\n  local: 'localStorage',\n} as const;\n\ntype StorageMechanism = (typeof webStorageType)[keyof typeof webStorageType];\n\n// TODO: remove default storage type from all function\n\n/**\n * Check if selected web storage mechanism is available.\n * @param type storage mechanism to test availability for.\n * @returns\n */\nexport function isWebStorageAvailable(type: StorageMechanism): boolean {\n  try {\n    let storage;\n    storage = window[type];\n\n    const testItem = '__faro_storage_test__';\n    storage.setItem(testItem, testItem);\n    storage.removeItem(testItem);\n    return true;\n  } catch (error) {\n    // the above can throw\n    faro.internalLogger?.info(`Web storage of type ${type} is not available. Reason: ${error}`);\n    return false;\n  }\n}\n\n/**\n * Get item from SessionStorage or LocalStorage.\n * @param key: the item key.\n * @param webStorageMechanism: wether the item shall be received form local storage or session storage. Defaults to local storage.\n */\nexport function getItem(key: string, webStorageMechanism: StorageMechanism): string | null {\n  if (isWebStorageTypeAvailable(webStorageMechanism)) {\n    return window[webStorageMechanism].getItem(key);\n  }\n\n  return null;\n}\n\n/**\n * Store item in SessionStorage or LocalStorage.\n * @param key: the item key.\n * @param value: the item data.\n * @param webStorageMechanism: wether the item shall be received form local storage or session storage. Defaults to local storage.\n */\nexport function setItem(key: string, value: string, webStorageMechanism: StorageMechanism): void {\n  if (isWebStorageTypeAvailable(webStorageMechanism)) {\n    try {\n      window[webStorageMechanism].setItem(key, value);\n    } catch (error) {\n      // do nothing\n    }\n  }\n}\n\n/**\n * Remove item from SessionStorage or LocalStorage.\n * @param key: the item key.\n * @param webStorageMechanism: wether the item shall be received form local storage or session storage. Defaults to local storage.\n */\nexport function removeItem(key: string, webStorageMechanism: StorageMechanism): void {\n  if (isWebStorageTypeAvailable(webStorageMechanism)) {\n    window[webStorageMechanism].removeItem(key);\n  }\n}\n\nexport const isLocalStorageAvailable = isWebStorageAvailable(webStorageType.local);\nexport const isSessionStorageAvailable = isWebStorageAvailable(webStorageType.session);\n\nfunction isWebStorageTypeAvailable(webStorageMechanism: StorageMechanism) {\n  if (webStorageMechanism === webStorageType.local) {\n    return isLocalStorageAvailable;\n  }\n\n  if (webStorageMechanism === webStorageType.session) {\n    return isSessionStorageAvailable;\n  }\n\n  return false;\n}\n","export const NAVIGATION_ID_STORAGE_KEY = 'com.grafana.faro.lastNavigationId';\n","import { onCLS, onFCP, onFID, onINP, onLCP, onTTFB } from 'web-vitals/attribution';\nimport type { Metric } from 'web-vitals/attribution';\n\nimport { unknownString } from '@grafana/faro-core';\nimport type { MeasurementEvent, MeasurementsAPI, PushMeasurementOptions } from '@grafana/faro-core';\n\nimport { getItem, webStorageType } from '../../utils';\nimport { NAVIGATION_ID_STORAGE_KEY } from '../instrumentationConstants';\n\ntype Values = MeasurementEvent['values'];\ntype Context = Required<PushMeasurementOptions>['context'];\n\n// duplicate keys saved in variables to save bundle size\n// refs: https://github.com/grafana/faro-web-sdk/pull/595#discussion_r1615833968\nconst loadStateKey = 'load_state';\nconst timeToFirstByteKey = 'time_to_first_byte';\n\nexport class WebVitalsWithAttribution {\n  constructor(private corePushMeasurement: MeasurementsAPI['pushMeasurement']) {}\n\n  initialize(): void {\n    this.measureCLS();\n    this.measureFCP();\n    this.measureFID();\n    this.measureINP();\n    this.measureLCP();\n    this.measureTTFB();\n  }\n\n  private measureCLS(): void {\n    onCLS((metric) => {\n      const { loadState, largestShiftValue, largestShiftTime, largestShiftTarget } = metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'largest_shift_value', largestShiftValue);\n      this.addIfPresent(values, 'largest_shift_time', largestShiftTime);\n\n      const context = this.buildInitialContext(metric);\n      this.addIfPresent(context, loadStateKey, loadState);\n      this.addIfPresent(context, 'largest_shift_target', largestShiftTarget);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private measureFCP(): void {\n    onFCP((metric) => {\n      const { firstByteToFCP, timeToFirstByte, loadState } = metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'first_byte_to_fcp', firstByteToFCP);\n      this.addIfPresent(values, timeToFirstByteKey, timeToFirstByte);\n\n      const context = this.buildInitialContext(metric);\n      this.addIfPresent(context, loadStateKey, loadState);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private measureFID(): void {\n    onFID((metric) => {\n      const { eventTime, eventTarget, eventType, loadState } = metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'event_time', eventTime);\n\n      const context = this.buildInitialContext(metric);\n      this.addIfPresent(context, 'event_target', eventTarget);\n      this.addIfPresent(context, 'event_type', eventType);\n      this.addIfPresent(context, loadStateKey, loadState);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private measureINP(): void {\n    onINP((metric) => {\n      const {\n        interactionTime,\n        presentationDelay,\n        inputDelay,\n        processingDuration,\n        nextPaintTime,\n        loadState,\n        interactionTarget,\n        interactionType,\n      } = metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'interaction_time', interactionTime);\n      this.addIfPresent(values, 'presentation_delay', presentationDelay);\n      this.addIfPresent(values, 'input_delay', inputDelay);\n      this.addIfPresent(values, 'processing_duration', processingDuration);\n      this.addIfPresent(values, 'next_paint_time', nextPaintTime);\n\n      const context = this.buildInitialContext(metric);\n      this.addIfPresent(context, loadStateKey, loadState);\n      this.addIfPresent(context, 'interaction_target', interactionTarget);\n      this.addIfPresent(context, 'interaction_type', interactionType);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private measureLCP(): void {\n    onLCP((metric) => {\n      const { elementRenderDelay, resourceLoadDelay, resourceLoadDuration, timeToFirstByte, element } =\n        metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'element_render_delay', elementRenderDelay);\n      this.addIfPresent(values, 'resource_load_delay', resourceLoadDelay);\n      this.addIfPresent(values, 'resource_load_duration', resourceLoadDuration);\n      this.addIfPresent(values, timeToFirstByteKey, timeToFirstByte);\n\n      const context = this.buildInitialContext(metric);\n      this.addIfPresent(context, 'element', element);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private measureTTFB(): void {\n    onTTFB((metric) => {\n      const { dnsDuration, connectionDuration, requestDuration, waitingDuration, cacheDuration } = metric.attribution;\n\n      const values = this.buildInitialValues(metric);\n      this.addIfPresent(values, 'dns_duration', dnsDuration);\n      this.addIfPresent(values, 'connection_duration', connectionDuration);\n      this.addIfPresent(values, 'request_duration', requestDuration);\n      this.addIfPresent(values, 'waiting_duration', waitingDuration);\n      this.addIfPresent(values, 'cache_duration', cacheDuration);\n\n      const context = this.buildInitialContext(metric);\n\n      this.pushMeasurement(values, context);\n    });\n  }\n\n  private buildInitialValues(metric: Metric): Values {\n    const indicator = metric.name.toLowerCase();\n    return {\n      [indicator]: metric.value,\n      delta: metric.delta,\n    };\n  }\n\n  private buildInitialContext(metric: Metric): Context {\n    const navigationEntryId = getItem(NAVIGATION_ID_STORAGE_KEY, webStorageType.session) ?? unknownString;\n\n    return {\n      id: metric.id,\n      rating: metric.rating,\n      navigation_type: metric.navigationType,\n      navigation_entry_id: navigationEntryId,\n    };\n  }\n\n  private pushMeasurement(values: Values, context: Context): void {\n    const type = 'web-vitals';\n    this.corePushMeasurement({ type, values }, { context });\n  }\n\n  private addIfPresent(source: Values | Context, key: string, metric?: number | string): void {\n    if (metric) {\n      source[key] = metric;\n    }\n  }\n}\n","import { BaseInstrumentation, VERSION } from '@grafana/faro-core';\n\nimport { WebVitalsBasic } from './webVitalsBasic';\nimport { WebVitalsWithAttribution } from './webVitalsWithAttribution';\n\nexport class WebVitalsInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-web-vitals';\n  readonly version = VERSION;\n\n  initialize(): void {\n    this.logDebug('Initializing');\n    const webVitals = this.intializeWebVitalsInstrumentation();\n    webVitals.initialize();\n  }\n\n  private intializeWebVitalsInstrumentation() {\n    if (this.config.trackWebVitalsAttribution) {\n      return new WebVitalsWithAttribution(this.api.pushMeasurement);\n    }\n    return new WebVitalsBasic(this.api.pushMeasurement);\n  }\n}\n","export function dateNow(): number {\n  return Date.now();\n}\n\nexport function getCurrentTimestamp(): string {\n  return new Date().toISOString();\n}\n\nexport function timestampToIsoString(value: number): string {\n  return new Date(value).toISOString();\n}\n","const alphabet = 'abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ0123456789';\n\nexport function genShortID(length = 10): string {\n  return Array.from(Array(length))\n    .map(() => alphabet[Math.floor(Math.random() * alphabet.length)]!)\n    .join('');\n}\n","import { faro } from '@grafana/faro-core';\n\nexport function isSampled(): boolean {\n  const sendAllSignals = 1;\n  const sessionTracking = faro.config.sessionTracking;\n  let samplingRate =\n    sessionTracking?.sampler?.({ metas: faro.metas.value }) ?? sessionTracking?.samplingRate ?? sendAllSignals;\n\n  if (typeof samplingRate !== 'number') {\n    const sendNoSignals = 0;\n    samplingRate = sendNoSignals;\n  }\n\n  return Math.random() < samplingRate;\n}\n","/**\n * Tail based throttle which caches the args of the last call and updates\n */\nexport function throttle<T extends (...args: any[]) => void>(callback: T, delay: number) {\n  let pause = false;\n  let lastPending: Parameters<T> | null;\n\n  const timeoutBehavior = () => {\n    if (lastPending == null) {\n      pause = false;\n      return;\n    }\n\n    callback(...lastPending);\n    lastPending = null;\n    setTimeout(timeoutBehavior, delay);\n  };\n\n  return (...args: Parameters<T>) => {\n    if (pause) {\n      lastPending = args;\n      return;\n    }\n\n    callback(...args);\n    pause = true;\n    setTimeout(timeoutBehavior, delay);\n  };\n}\n","export function getCircularDependencyReplacer() {\n  const valueSeen = new WeakSet();\n  return function (_key: string | Symbol, value: unknown) {\n    if (typeof value === 'object' && value !== null) {\n      if (valueSeen.has(value)) {\n        return null;\n      }\n      valueSeen.add(value);\n    }\n    return value;\n  };\n}\n\ntype JSONObject = {\n  [key: string]: JSONValue;\n};\ntype JSONArray = JSONValue[] & {};\ntype JSONValue = string | number | boolean | null | JSONObject | JSONArray;\n\nexport function stringifyExternalJson(json: any = {}) {\n  return JSON.stringify(json ?? {}, getCircularDependencyReplacer());\n}\n","import type { Config } from '@grafana/faro-core';\n\nexport const STORAGE_KEY = 'com.grafana.faro.session';\nexport const SESSION_EXPIRATION_TIME = 4 * 60 * 60 * 1000; // hrs\nexport const SESSION_INACTIVITY_TIME = 15 * 60 * 1000; // minutes\nexport const STORAGE_UPDATE_DELAY = 1 * 1000; // seconds\n\n/**\n * @deprecated MAX_SESSION_PERSISTENCE_TIME_BUFFER is not used anymore. The constant will be removed in the future\n */\nexport const MAX_SESSION_PERSISTENCE_TIME_BUFFER = 1 * 60 * 1000;\nexport const MAX_SESSION_PERSISTENCE_TIME = SESSION_INACTIVITY_TIME;\n\nexport const defaultSessionTrackingConfig: Config['sessionTracking'] = {\n  enabled: true,\n  persistent: false,\n  maxSessionPersistenceTime: MAX_SESSION_PERSISTENCE_TIME,\n} as const;\n","import { dateNow, faro, genShortID } from '@grafana/faro-core';\n\nimport { isLocalStorageAvailable, isSessionStorageAvailable } from '../../../utils';\n\nimport { isSampled } from './sampling';\nimport { SESSION_EXPIRATION_TIME, SESSION_INACTIVITY_TIME } from './sessionConstants';\nimport type { FaroUserSession } from './types';\n\ntype CreateUserSessionObjectParams = {\n  sessionId?: string;\n  started?: number;\n  lastActivity?: number;\n  isSampled?: boolean;\n};\n\nexport function createUserSessionObject({\n  sessionId,\n  started,\n  lastActivity,\n  isSampled = true,\n}: CreateUserSessionObjectParams = {}): FaroUserSession {\n  const now = dateNow();\n\n  const generateSessionId = faro.config?.sessionTracking?.generateSessionId;\n\n  if (sessionId == null) {\n    sessionId = typeof generateSessionId === 'function' ? generateSessionId() : genShortID();\n  }\n\n  return {\n    sessionId,\n    lastActivity: lastActivity ?? now,\n    started: started ?? now,\n    isSampled: isSampled,\n  };\n}\n\nexport function isUserSessionValid(session: FaroUserSession | null): boolean {\n  if (session == null) {\n    return false;\n  }\n\n  const now = dateNow();\n  const lifetimeValid = now - session.started < SESSION_EXPIRATION_TIME;\n\n  if (!lifetimeValid) {\n    return false;\n  }\n\n  const inactivityPeriodValid = now - session.lastActivity < SESSION_INACTIVITY_TIME;\n  return inactivityPeriodValid;\n}\n\ntype GetUserSessionUpdaterParams = {\n  storeUserSession: (session: FaroUserSession) => void;\n  fetchUserSession: () => FaroUserSession | null;\n};\n\ntype UpdateSessionParams = { forceSessionExtend: boolean };\n\nexport function getUserSessionUpdater({\n  fetchUserSession,\n  storeUserSession,\n}: GetUserSessionUpdaterParams): (options?: UpdateSessionParams) => void {\n  return function updateSession({ forceSessionExtend } = { forceSessionExtend: false }): void {\n    if (!fetchUserSession || !storeUserSession) {\n      return;\n    }\n\n    const sessionTrackingConfig = faro.config.sessionTracking;\n    const isPersistentSessions = sessionTrackingConfig?.persistent;\n\n    if ((isPersistentSessions && !isLocalStorageAvailable) || (!isPersistentSessions && !isSessionStorageAvailable)) {\n      return;\n    }\n\n    const sessionFromStorage = fetchUserSession();\n\n    if (forceSessionExtend === false && isUserSessionValid(sessionFromStorage)) {\n      storeUserSession({ ...sessionFromStorage!, lastActivity: dateNow() });\n    } else {\n      let newSession = addSessionMetadataToNextSession(\n        createUserSessionObject({ isSampled: isSampled() }),\n        sessionFromStorage\n      );\n\n      storeUserSession(newSession);\n\n      faro.api?.setSession(newSession.sessionMeta);\n      sessionTrackingConfig?.onSessionChange?.(sessionFromStorage?.sessionMeta ?? null, newSession.sessionMeta!);\n    }\n  };\n}\n\nexport function addSessionMetadataToNextSession(newSession: FaroUserSession, previousSession: FaroUserSession | null) {\n  const sessionWithMeta: Required<FaroUserSession> = {\n    ...newSession,\n    sessionMeta: {\n      id: newSession.sessionId,\n      attributes: {\n        ...faro.config.sessionTracking?.session?.attributes,\n        ...(faro.metas.value.session?.attributes ?? {}),\n        ...(previousSession != null ? { previousSession: previousSession.sessionId } : {}),\n        isSampled: newSession.isSampled.toString(),\n      },\n    },\n  };\n\n  return sessionWithMeta;\n}\n","import { faro } from '@grafana/faro-core';\nimport type { Meta } from '@grafana/faro-core';\n\nimport { stringifyExternalJson, throttle } from '../../../utils';\nimport { getItem, removeItem, setItem, webStorageType } from '../../../utils/webStorage';\n\nimport { isSampled } from './sampling';\nimport { STORAGE_KEY, STORAGE_UPDATE_DELAY } from './sessionConstants';\nimport { addSessionMetadataToNextSession, createUserSessionObject, getUserSessionUpdater } from './sessionManagerUtils';\nimport type { FaroUserSession } from './types';\n\nexport class PersistentSessionsManager {\n  private static storageTypeLocal = webStorageType.local;\n  private updateUserSession: ReturnType<typeof getUserSessionUpdater>;\n\n  constructor() {\n    this.updateUserSession = getUserSessionUpdater({\n      fetchUserSession: PersistentSessionsManager.fetchUserSession,\n      storeUserSession: PersistentSessionsManager.storeUserSession,\n    });\n\n    this.init();\n  }\n\n  static removeUserSession() {\n    removeItem(STORAGE_KEY, PersistentSessionsManager.storageTypeLocal);\n  }\n\n  static storeUserSession(session: FaroUserSession): void {\n    setItem(STORAGE_KEY, stringifyExternalJson(session), PersistentSessionsManager.storageTypeLocal);\n  }\n\n  static fetchUserSession(): FaroUserSession | null {\n    const storedSession = getItem(STORAGE_KEY, PersistentSessionsManager.storageTypeLocal);\n\n    if (storedSession) {\n      return JSON.parse(storedSession) as FaroUserSession;\n    }\n\n    return null;\n  }\n\n  updateSession = throttle(() => this.updateUserSession(), STORAGE_UPDATE_DELAY);\n\n  private init(): void {\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') {\n        this.updateSession();\n      }\n    });\n\n    // Users can call the setSession() method, so we need to sync this with the local storage session\n    faro.metas.addListener(function syncSessionIfChangedExternally(meta: Meta) {\n      const session = meta.session;\n      const sessionFromLocalStorage = PersistentSessionsManager.fetchUserSession();\n\n      if (session && session.id !== sessionFromLocalStorage?.sessionId) {\n        const userSession = addSessionMetadataToNextSession(\n          createUserSessionObject({ sessionId: session.id, isSampled: isSampled() }),\n          sessionFromLocalStorage\n        );\n\n        PersistentSessionsManager.storeUserSession(userSession);\n        faro.api.setSession(userSession.sessionMeta);\n      }\n    });\n  }\n}\n","import { faro } from '@grafana/faro-core';\nimport type { Meta } from '@grafana/faro-core';\n\nimport { throttle } from '../../../utils';\nimport { stringifyExternalJson } from '../../../utils/json';\nimport { getItem, removeItem, setItem, webStorageType } from '../../../utils/webStorage';\n\nimport { isSampled } from './sampling';\nimport { STORAGE_KEY, STORAGE_UPDATE_DELAY } from './sessionConstants';\nimport { addSessionMetadataToNextSession, createUserSessionObject, getUserSessionUpdater } from './sessionManagerUtils';\nimport type { FaroUserSession } from './types';\n\nexport class VolatileSessionsManager {\n  private static storageTypeSession = webStorageType.session;\n  private updateUserSession: ReturnType<typeof getUserSessionUpdater>;\n\n  constructor() {\n    this.updateUserSession = getUserSessionUpdater({\n      fetchUserSession: VolatileSessionsManager.fetchUserSession,\n      storeUserSession: VolatileSessionsManager.storeUserSession,\n    });\n\n    this.init();\n  }\n\n  static removeUserSession() {\n    removeItem(STORAGE_KEY, VolatileSessionsManager.storageTypeSession);\n  }\n\n  static storeUserSession(session: FaroUserSession): void {\n    setItem(STORAGE_KEY, stringifyExternalJson(session), VolatileSessionsManager.storageTypeSession);\n  }\n\n  static fetchUserSession(): FaroUserSession | null {\n    const storedSession = getItem(STORAGE_KEY, VolatileSessionsManager.storageTypeSession);\n\n    if (storedSession) {\n      return JSON.parse(storedSession) as FaroUserSession;\n    }\n\n    return null;\n  }\n\n  updateSession = throttle(() => this.updateUserSession(), STORAGE_UPDATE_DELAY);\n\n  private init(): void {\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') {\n        this.updateSession();\n      }\n    });\n\n    // Users can call the setSession() method, so we need to sync this with the local storage session\n    faro.metas.addListener(function syncSessionIfChangedExternally(meta: Meta) {\n      const session = meta.session;\n      const sessionFromSessionStorage = VolatileSessionsManager.fetchUserSession();\n\n      if (session && session.id !== sessionFromSessionStorage?.sessionId) {\n        const userSession = addSessionMetadataToNextSession(\n          createUserSessionObject({ sessionId: session.id, isSampled: isSampled() }),\n          sessionFromSessionStorage\n        );\n\n        VolatileSessionsManager.storeUserSession(userSession);\n        faro.api.setSession(userSession.sessionMeta);\n      }\n    });\n  }\n}\n","import type { Config } from '@grafana/faro-core';\n\nimport { PersistentSessionsManager } from './PersistentSessionsManager';\nimport type { SessionManager } from './types';\nimport { VolatileSessionsManager } from './VolatileSessionManager';\n\nexport function getSessionManagerByConfig(sessionTrackingConfig: Config['sessionTracking']): SessionManager {\n  return sessionTrackingConfig?.persistent ? PersistentSessionsManager : VolatileSessionsManager;\n}\n","import {\n  BaseInstrumentation,\n  dateNow,\n  EVENT_SESSION_EXTEND,\n  EVENT_SESSION_RESUME,\n  EVENT_SESSION_START,\n  Meta,\n  MetaSession,\n  VERSION,\n} from '@grafana/faro-core';\nimport type { Config } from '@grafana/faro-core';\n\nimport type { TransportItem } from '../..';\nimport { createSession } from '../../metas';\n\nimport { type FaroUserSession, getSessionManagerByConfig, isSampled } from './sessionManager';\nimport { PersistentSessionsManager } from './sessionManager/PersistentSessionsManager';\nimport { createUserSessionObject, isUserSessionValid } from './sessionManager/sessionManagerUtils';\nimport type { SessionManager } from './sessionManager/types';\n\ntype LifecycleType = typeof EVENT_SESSION_RESUME | typeof EVENT_SESSION_START;\n\nexport class SessionInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-session';\n  readonly version = VERSION;\n\n  // previously notified session, to ensure we don't send session start\n  // event twice for the same session\n  private notifiedSession: MetaSession | undefined;\n\n  private sendSessionStartEvent(meta: Meta): void {\n    const session = meta.session;\n\n    if (session && session.id !== this.notifiedSession?.id) {\n      if (this.notifiedSession && this.notifiedSession.id === session.attributes?.['previousSession']) {\n        this.api.pushEvent(EVENT_SESSION_EXTEND, {}, undefined, { skipDedupe: true });\n        this.notifiedSession = session;\n        return;\n      }\n\n      this.notifiedSession = session;\n      // no need to add attributes and session id, they are included as part of meta\n      // automatically\n      this.api.pushEvent(EVENT_SESSION_START, {}, undefined, { skipDedupe: true });\n    }\n  }\n\n  private createInitialSession(\n    SessionManager: SessionManager,\n    sessionsConfig: Required<Config>['sessionTracking']\n  ): {\n    initialSession: FaroUserSession;\n    lifecycleType: LifecycleType;\n  } {\n    let userSession: FaroUserSession | null = SessionManager.fetchUserSession();\n\n    if (sessionsConfig.persistent && sessionsConfig.maxSessionPersistenceTime && userSession) {\n      const now = dateNow();\n      const shouldClearPersistentSession = userSession.lastActivity < now - sessionsConfig.maxSessionPersistenceTime;\n\n      if (shouldClearPersistentSession) {\n        PersistentSessionsManager.removeUserSession();\n        userSession = null;\n      }\n    }\n\n    let lifecycleType: LifecycleType;\n    let initialSession: FaroUserSession;\n\n    if (isUserSessionValid(userSession)) {\n      const sessionId = userSession?.sessionId;\n\n      initialSession = createUserSessionObject({\n        sessionId,\n        isSampled: userSession!.isSampled || false,\n        started: userSession?.started,\n      });\n\n      initialSession.sessionMeta = {\n        id: sessionId,\n        attributes: {\n          ...sessionsConfig.session?.attributes,\n          ...userSession?.sessionMeta?.attributes,\n          // For valid resumed sessions we do not want to recalculate the sampling decision on each init phase.\n          isSampled: initialSession.isSampled.toString(),\n        },\n      };\n\n      lifecycleType = EVENT_SESSION_RESUME;\n    } else {\n      const sessionId = sessionsConfig.session?.id ?? createSession().id;\n\n      initialSession = createUserSessionObject({\n        sessionId,\n        isSampled: isSampled(),\n      });\n\n      initialSession.sessionMeta = {\n        id: sessionId,\n        attributes: {\n          isSampled: initialSession.isSampled.toString(),\n          ...sessionsConfig.session?.attributes,\n        },\n      };\n\n      lifecycleType = EVENT_SESSION_START;\n    }\n\n    return { initialSession, lifecycleType };\n  }\n\n  private registerBeforeSendHook(SessionManager: SessionManager) {\n    const { updateSession } = new SessionManager();\n\n    this.transports?.addBeforeSendHooks((item) => {\n      updateSession();\n\n      const attributes = item.meta.session?.attributes;\n\n      if (attributes && attributes?.['isSampled'] === 'true') {\n        let newItem: TransportItem = JSON.parse(JSON.stringify(item));\n\n        const newAttributes = newItem.meta.session?.attributes;\n        delete newAttributes?.['isSampled'];\n\n        if (Object.keys(newAttributes ?? {}).length === 0) {\n          delete newItem.meta.session?.attributes;\n        }\n\n        return newItem;\n      }\n\n      return null;\n    });\n  }\n\n  initialize() {\n    this.logDebug('init session instrumentation');\n\n    const sessionTrackingConfig = this.config.sessionTracking;\n\n    if (sessionTrackingConfig?.enabled) {\n      const SessionManager = getSessionManagerByConfig(sessionTrackingConfig);\n\n      this.registerBeforeSendHook(SessionManager);\n\n      const { initialSession, lifecycleType } = this.createInitialSession(SessionManager, sessionTrackingConfig);\n\n      SessionManager.storeUserSession(initialSession);\n\n      const initialSessionMeta = initialSession.sessionMeta;\n\n      this.notifiedSession = initialSessionMeta;\n      this.api.setSession(initialSessionMeta);\n\n      if (lifecycleType === EVENT_SESSION_START) {\n        this.api.pushEvent(EVENT_SESSION_START, {}, undefined, { skipDedupe: true });\n      }\n\n      if (lifecycleType === EVENT_SESSION_RESUME) {\n        this.api.pushEvent(EVENT_SESSION_RESUME, {}, undefined, { skipDedupe: true });\n      }\n    }\n\n    this.metas.addListener(this.sendSessionStartEvent.bind(this));\n  }\n}\n","import { faro, genShortID } from '@grafana/faro-core';\nimport type { MetaSession } from '@grafana/faro-core';\n\nexport function createSession(attributes?: MetaSession['attributes']): MetaSession {\n  return {\n    id: faro.config?.sessionTracking?.generateSessionId?.() ?? genShortID(),\n    attributes,\n  };\n}\n","import { BaseInstrumentation, EVENT_VIEW_CHANGED, Meta, MetaView, unknownString, VERSION } from '@grafana/faro-core';\n\n// all this does is send VIEW_CHANGED event\nexport class ViewInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-view';\n  readonly version = VERSION;\n\n  // previously notified view, to ensure we don't send view changed\n  // event twice for the same view\n  private notifiedView: MetaView | undefined;\n\n  private sendViewChangedEvent(meta: Meta): void {\n    const view = meta.view;\n\n    if (view && view.name !== this.notifiedView?.name) {\n      this.api.pushEvent(\n        EVENT_VIEW_CHANGED,\n        {\n          fromView: this.notifiedView?.name ?? unknownString,\n          toView: view.name ?? unknownString,\n        },\n        undefined,\n        { skipDedupe: true }\n      );\n\n      this.notifiedView = view;\n    }\n  }\n\n  initialize() {\n    this.metas.addListener(this.sendViewChangedEvent.bind(this));\n  }\n}\n","export const NAVIGATION_ENTRY = 'navigation';\nexport const RESOURCE_ENTRY = 'resource';\n","import { isArray, type PushEventOptions, unknownString } from '@grafana/faro-core';\n\nimport type { CacheType, FaroNavigationTiming, FaroResourceTiming } from './types';\n\nconst w3cTraceparentFormat = /^00-[a-f0-9]{32}-[a-f0-9]{16}-[0-9]{1,2}$/;\n\ntype SpanContext = PushEventOptions['spanContext'];\n\n// Extract traceparent from serverTiming, if present\nexport function getSpanContextFromServerTiming(serverTimings: PerformanceServerTiming[] = []): SpanContext | undefined {\n  for (const serverEntry of serverTimings) {\n    if (serverEntry.name === 'traceparent') {\n      if (!w3cTraceparentFormat.test(serverEntry.description)) {\n        continue;\n      }\n\n      const [, traceId, spanId] = serverEntry.description.split('-');\n      if (traceId != null && spanId != null) {\n        return { traceId, spanId };\n      }\n\n      break;\n    }\n  }\n\n  return undefined;\n}\n\nexport function performanceObserverSupported(): boolean {\n  return 'PerformanceObserver' in window;\n}\n\nexport function entryUrlIsIgnored(ignoredUrls: Array<string | RegExp> = [], entryName: string): boolean {\n  return ignoredUrls.some((url) => url && entryName.match(url) != null);\n}\n\nexport function onDocumentReady(handleReady: () => void) {\n  if (document.readyState === 'complete') {\n    handleReady();\n  } else {\n    const readyStateCompleteHandler = () => {\n      if (document.readyState === 'complete') {\n        handleReady();\n        document.removeEventListener('readystatechange', readyStateCompleteHandler);\n      }\n    };\n\n    document.addEventListener('readystatechange', readyStateCompleteHandler);\n  }\n}\n\ntype PerformanceEntryAllowProperties = Record<string, Array<string | number> | string | number>;\n\nexport function includePerformanceEntry(\n  performanceEntryJSON: Record<string, any>,\n  allowProps: PerformanceEntryAllowProperties = {}\n): boolean {\n  for (const [allowPropKey, allowPropValue] of Object.entries(allowProps)) {\n    const perfEntryPropVal = performanceEntryJSON[allowPropKey];\n\n    if (perfEntryPropVal == null) {\n      return false;\n    }\n\n    if (isArray(allowPropValue)) {\n      return allowPropValue.includes(perfEntryPropVal);\n    }\n\n    return perfEntryPropVal === allowPropValue;\n  }\n\n  // empty object allows all\n  return true;\n}\n\nexport function createFaroResourceTiming(resourceEntryRaw: PerformanceResourceTiming): FaroResourceTiming {\n  const {\n    connectEnd,\n    connectStart,\n    decodedBodySize,\n    domainLookupEnd,\n    domainLookupStart,\n    duration,\n    encodedBodySize,\n    fetchStart,\n    initiatorType,\n    name,\n    nextHopProtocol,\n    redirectEnd,\n    redirectStart,\n    // @ts-expect-error the renderBlockingStatus property is not available in all browsers\n    renderBlockingStatus: rbs,\n    requestStart,\n    responseEnd,\n    responseStart,\n    // @ts-expect-error the renderBlockingStatus property is not available in all browsers\n    responseStatus,\n    secureConnectionStart,\n    transferSize,\n    workerStart,\n  } = resourceEntryRaw;\n\n  return {\n    name: name,\n    duration: toFaroPerformanceTimingString(duration),\n    tcpHandshakeTime: toFaroPerformanceTimingString(connectEnd - connectStart),\n    dnsLookupTime: toFaroPerformanceTimingString(domainLookupEnd - domainLookupStart),\n    tlsNegotiationTime: toFaroPerformanceTimingString(requestStart - secureConnectionStart),\n    responseStatus: toFaroPerformanceTimingString(responseStatus),\n    redirectTime: toFaroPerformanceTimingString(redirectEnd - redirectStart),\n    requestTime: toFaroPerformanceTimingString(responseStart - requestStart),\n    responseTime: toFaroPerformanceTimingString(responseEnd - responseStart),\n    fetchTime: toFaroPerformanceTimingString(responseEnd - fetchStart),\n    serviceWorkerTime: toFaroPerformanceTimingString(fetchStart - workerStart),\n    decodedBodySize: toFaroPerformanceTimingString(decodedBodySize),\n    encodedBodySize: toFaroPerformanceTimingString(encodedBodySize),\n    cacheHitStatus: getCacheType(),\n    renderBlockingStatus: toFaroPerformanceTimingString(rbs) as FaroResourceTiming['renderBlockingStatus'],\n    protocol: nextHopProtocol,\n    initiatorType: initiatorType,\n    visibilityState: document.visibilityState,\n    ttfb: toFaroPerformanceTimingString(responseStart - requestStart),\n\n    // TODO: add in future iteration, ideally after nested objects are supported by the collector.\n    // serverTiming: resourceEntryRaw.serverTiming,\n  };\n\n  function getCacheType(): CacheType {\n    let cacheType: CacheType = 'fullLoad';\n    if (transferSize === 0) {\n      if (decodedBodySize > 0) {\n        cacheType = 'cache';\n      }\n    } else {\n      if (responseStatus != null) {\n        if (responseStatus === 304) {\n          cacheType = 'conditionalFetch';\n        }\n      } else if (encodedBodySize > 0 && transferSize < encodedBodySize) {\n        cacheType = 'conditionalFetch';\n      }\n    }\n    return cacheType;\n  }\n}\n\nexport function createFaroNavigationTiming(navigationEntryRaw: PerformanceNavigationTiming): FaroNavigationTiming {\n  const {\n    activationStart,\n    domComplete,\n    domContentLoadedEventEnd,\n    domContentLoadedEventStart,\n    domInteractive,\n    fetchStart,\n    loadEventEnd,\n    loadEventStart,\n    responseStart,\n    type,\n  } = navigationEntryRaw;\n\n  const parserStart = getDocumentParsingTime();\n\n  return {\n    ...createFaroResourceTiming(navigationEntryRaw),\n    pageLoadTime: toFaroPerformanceTimingString(domComplete - fetchStart),\n    documentParsingTime: toFaroPerformanceTimingString(parserStart ? domInteractive - parserStart : null),\n    domProcessingTime: toFaroPerformanceTimingString(domComplete - domInteractive),\n    domContentLoadHandlerTime: toFaroPerformanceTimingString(domContentLoadedEventEnd - domContentLoadedEventStart),\n    onLoadTime: toFaroPerformanceTimingString(loadEventEnd - loadEventStart),\n\n    // For navigation entries we can calculate the TTFB based on activationStart. We overwrite the TTFB value coming with the resource entry.\n    // For more accuracy on prerendered pages page we calculate relative top the activationStart instead of the start of the navigation.\n    // clamp to 0 if activationStart occurs after first byte is received.\n    ttfb: toFaroPerformanceTimingString(Math.max(responseStart - (activationStart ?? 0), 0)),\n    type: type,\n  };\n}\n\nfunction getDocumentParsingTime(): number | null {\n  if (performance.timing?.domLoading != null) {\n    // the browser is about to start parsing the first received bytes of the HTML document.\n    // This property is deprecated but there isn't a really good alternative atm.\n    // For now we stick with domLoading and keep researching a better alternative.\n    return performance.timing.domLoading - performance.timeOrigin;\n  }\n\n  return null;\n}\n\nfunction toFaroPerformanceTimingString(v: unknown): string {\n  if (v == null) {\n    return unknownString;\n  }\n\n  if (typeof v === 'number') {\n    return Math.round(v).toString();\n  }\n\n  return v.toString();\n}\n","import { faro, genShortID } from '@grafana/faro-core';\nimport type { EventsAPI, PushEventOptions } from '@grafana/faro-core';\n\nimport { RESOURCE_ENTRY } from './performanceConstants';\nimport {\n  createFaroResourceTiming,\n  entryUrlIsIgnored,\n  getSpanContextFromServerTiming,\n  includePerformanceEntry,\n} from './performanceUtils';\n\ntype SpanContext = PushEventOptions['spanContext'];\n\nconst DEFAULT_TRACK_RESOURCES = { initiatorType: ['xmlhttprequest', 'fetch'] };\n\nexport function observeResourceTimings(\n  faroNavigationId: string,\n  pushEvent: EventsAPI['pushEvent'],\n  ignoredUrls: Array<string | RegExp>\n) {\n  const trackResources = faro.config.trackResources;\n\n  const observer = new PerformanceObserver((observedEntries) => {\n    const entries = observedEntries.getEntries();\n\n    for (const resourceEntryRaw of entries) {\n      if (entryUrlIsIgnored(ignoredUrls, resourceEntryRaw.name)) {\n        return;\n      }\n\n      const resourceEntryJson = resourceEntryRaw.toJSON();\n\n      let spanContext: SpanContext = getSpanContextFromServerTiming(resourceEntryJson?.serverTiming);\n\n      if (\n        (trackResources == null && includePerformanceEntry(resourceEntryJson, DEFAULT_TRACK_RESOURCES)) ||\n        trackResources\n      ) {\n        const faroResourceEntry = {\n          ...createFaroResourceTiming(resourceEntryJson),\n          faroNavigationId,\n          faroResourceId: genShortID(),\n        };\n\n        pushEvent('faro.performance.resource', faroResourceEntry, undefined, {\n          spanContext,\n          timestampOverwriteMs: performance.timeOrigin + resourceEntryJson.startTime,\n        });\n      }\n    }\n  });\n\n  observer.observe({\n    type: RESOURCE_ENTRY,\n    buffered: true,\n  });\n}\n","export enum LogLevel {\n  TRACE = 'trace',\n  DEBUG = 'debug',\n  INFO = 'info',\n  LOG = 'log',\n  WARN = 'warn',\n  ERROR = 'error',\n}\n\nexport const defaultLogLevel = LogLevel.LOG;\n\nexport const allLogLevels: Readonly<Array<Readonly<LogLevel>>> = [\n  LogLevel.TRACE,\n  LogLevel.DEBUG,\n  LogLevel.INFO,\n  LogLevel.LOG,\n  LogLevel.WARN,\n  LogLevel.ERROR,\n] as const;\n","import { BaseInstrumentation, VERSION } from '@grafana/faro-core';\nimport type { Patterns } from '@grafana/faro-core';\n\nimport { getNavigationTimings } from './navigation';\nimport { onDocumentReady, performanceObserverSupported } from './performanceUtils';\nimport { observeResourceTimings } from './resource';\n\nexport class PerformanceInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-performance';\n  readonly version = VERSION;\n\n  initialize() {\n    if (!performanceObserverSupported()) {\n      this.logDebug('performance observer not supported. Disable performance instrumentation.');\n      return;\n    }\n\n    onDocumentReady(async () => {\n      const pushEvent = this.api.pushEvent;\n      const ignoredUrls = this.getIgnoreUrls();\n\n      const { faroNavigationId } = await getNavigationTimings(pushEvent, ignoredUrls);\n\n      if (faroNavigationId != null) {\n        observeResourceTimings(faroNavigationId, pushEvent, ignoredUrls);\n      }\n    });\n  }\n\n  private getIgnoreUrls(): Patterns {\n    return this.transports.transports?.flatMap((transport) => transport.getIgnoreUrls());\n  }\n}\n","import { genShortID, unknownString } from '@grafana/faro-core';\nimport type { EventsAPI, PushEventOptions } from '@grafana/faro-core';\n\nimport { getItem, setItem, webStorageType } from '../../utils';\nimport { NAVIGATION_ID_STORAGE_KEY } from '../instrumentationConstants';\n\nimport { NAVIGATION_ENTRY } from './performanceConstants';\nimport { createFaroNavigationTiming, entryUrlIsIgnored, getSpanContextFromServerTiming } from './performanceUtils';\nimport type { FaroNavigationItem } from './types';\n\ntype SpanContext = PushEventOptions['spanContext'];\n\nexport function getNavigationTimings(\n  pushEvent: EventsAPI['pushEvent'],\n  ignoredUrls: Array<string | RegExp>\n): Promise<FaroNavigationItem> {\n  let faroNavigationEntryResolve: (value: FaroNavigationItem) => void;\n  const faroNavigationEntryPromise = new Promise<FaroNavigationItem>((resolve) => {\n    faroNavigationEntryResolve = resolve;\n  });\n\n  const observer = new PerformanceObserver((observedEntries) => {\n    const [navigationEntryRaw] = observedEntries.getEntries();\n\n    if (navigationEntryRaw == null || entryUrlIsIgnored(ignoredUrls, navigationEntryRaw.name)) {\n      return;\n    }\n\n    const navEntryJson = navigationEntryRaw.toJSON();\n\n    let spanContext: SpanContext = getSpanContextFromServerTiming(navEntryJson?.serverTiming);\n\n    const faroPreviousNavigationId = getItem(NAVIGATION_ID_STORAGE_KEY, webStorageType.session) ?? unknownString;\n\n    const faroNavigationEntry: FaroNavigationItem = {\n      ...createFaroNavigationTiming(navEntryJson),\n      faroNavigationId: genShortID(),\n      faroPreviousNavigationId,\n    };\n\n    setItem(NAVIGATION_ID_STORAGE_KEY, faroNavigationEntry.faroNavigationId, webStorageType.session);\n\n    pushEvent('faro.performance.navigation', faroNavigationEntry, undefined, {\n      spanContext,\n      timestampOverwriteMs: performance.timeOrigin + navEntryJson.startTime,\n    });\n\n    faroNavigationEntryResolve(faroNavigationEntry);\n  });\n\n  observer.observe({\n    type: NAVIGATION_ENTRY,\n    buffered: true,\n  });\n\n  return faroNavigationEntryPromise;\n}\n","import type { LogArgsSerializer } from './types';\n\nexport const defaultLogArgsSerializer: LogArgsSerializer = (args) =>\n  args\n    .map((arg) => {\n      try {\n        return String(arg);\n      } catch (err) {\n        return '';\n      }\n    })\n    .join(' ');\n","import { allLogLevels, BaseInstrumentation, defaultLogArgsSerializer, LogLevel, VERSION } from '@grafana/faro-core';\n\nimport type { ConsoleInstrumentationOptions } from './types';\n\nexport class ConsoleInstrumentation extends BaseInstrumentation {\n  readonly name = '@grafana/faro-web-sdk:instrumentation-console';\n  readonly version = VERSION;\n\n  static defaultDisabledLevels: LogLevel[] = [LogLevel.DEBUG, LogLevel.TRACE, LogLevel.LOG];\n\n  constructor(private options: ConsoleInstrumentationOptions = {}) {\n    super();\n  }\n\n  initialize() {\n    this.logDebug('Initializing\\n', this.options);\n    this.options = { ...this.options, ...this.config.consoleInstrumentation };\n\n    allLogLevels\n      .filter(\n        (level) => !(this.options?.disabledLevels ?? ConsoleInstrumentation.defaultDisabledLevels).includes(level)\n      )\n      .forEach((level) => {\n        /* eslint-disable-next-line no-console */\n        console[level] = (...args) => {\n          try {\n            if (level === LogLevel.ERROR && !this.options?.consoleErrorAsLog) {\n              this.api.pushError(new Error('console.error: ' + defaultLogArgsSerializer(args)));\n            } else {\n              this.api.pushLog(args, { level });\n            }\n          } catch (err) {\n            this.logError(err);\n          } finally {\n            this.unpatchedConsole[level](...args);\n          }\n        };\n      });\n  }\n}\n","import type { Instrumentation } from '@grafana/faro-core';\n\nimport {\n  ConsoleInstrumentation,\n  ErrorsInstrumentation,\n  PerformanceInstrumentation,\n  SessionInstrumentation,\n  ViewInstrumentation,\n  WebVitalsInstrumentation,\n} from '../instrumentations';\n\nimport type { GetWebInstrumentationsOptions } from './types';\n\nexport function getWebInstrumentations(options: GetWebInstrumentationsOptions = {}): Instrumentation[] {\n  const instrumentations: Instrumentation[] = [\n    new ErrorsInstrumentation(),\n    new WebVitalsInstrumentation(),\n    new SessionInstrumentation(),\n    new ViewInstrumentation(),\n  ];\n\n  if (options.enablePerformanceInstrumentation !== false) {\n    // unshift to ensure that initialization starts before the other instrumentations\n    instrumentations.unshift(new PerformanceInstrumentation());\n  }\n\n  if (options.captureConsole !== false) {\n    instrumentations.push(\n      new ConsoleInstrumentation({\n        disabledLevels: options.captureConsoleDisabledLevels,\n      })\n    );\n  }\n\n  return instrumentations;\n}\n","import type { BodyKey } from './types';\n\nexport enum TransportItemType {\n  EXCEPTION = 'exception',\n  LOG = 'log',\n  MEASUREMENT = 'measurement',\n  TRACE = 'trace',\n  EVENT = 'event',\n}\n\nexport const transportItemTypeToBodyKey: Record<TransportItemType, BodyKey> = {\n  [TransportItemType.EXCEPTION]: 'exceptions',\n  [TransportItemType.LOG]: 'logs',\n  [TransportItemType.MEASUREMENT]: 'measurements',\n  [TransportItemType.TRACE]: 'traces',\n  [TransportItemType.EVENT]: 'events',\n} as const;\n","import { isArray, isObject, isTypeof } from './is';\n\n// This function was inspired by fast-deep-equal\n// fast-deep-equal has issues with Rollup and also it checks for some edge cases that we don't need\n\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  // Using isTypeOf instead of isNumber as isNumber also checks against NaN\n  if (isTypeof(a, 'number') && isNaN(a as number)) {\n    return isTypeof(b, 'number') && isNaN(b as number);\n  }\n\n  const aIsArray = isArray(a);\n  const bIsArray = isArray(b);\n\n  if (aIsArray !== bIsArray) {\n    return false;\n  }\n\n  if (aIsArray && bIsArray) {\n    const length = a.length;\n\n    if (length !== b.length) {\n      return false;\n    }\n\n    for (let idx = length; idx-- !== 0; ) {\n      if (!deepEqual(a[idx], b[idx])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  const aIsObject = isObject(a);\n  const bIsObject = isObject(b);\n\n  if (aIsObject !== bIsObject) {\n    return false;\n  }\n\n  if (a && b && aIsObject && bIsObject) {\n    const aKeys = Object.keys(a) as Array<keyof typeof a>;\n    const bKeys = Object.keys(b);\n    const aLength = aKeys.length;\n    const bLength = bKeys.length;\n\n    if (aLength !== bLength) {\n      return false;\n    }\n\n    for (let aKey of aKeys) {\n      if (!bKeys.includes(aKey)) {\n        return false;\n      }\n    }\n\n    for (let aKey of aKeys) {\n      if (!deepEqual(a[aKey], b[aKey])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Metas } from '../../metas';\nimport { TransportItemType } from '../../transports';\nimport type { TransportItem, Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\nimport { deepEqual, getCurrentTimestamp, isArray, isError, isNull, isObject } from '../../utils';\nimport { timestampToIsoString } from '../../utils/date';\nimport type { TracesAPI } from '../traces';\n\nimport { defaultExceptionType } from './const';\nimport type { ErrorWithIndexProperties, ExceptionEvent, ExceptionsAPI, StacktraceParser } from './types';\n\nlet stacktraceParser: StacktraceParser | undefined;\n\nexport function initializeExceptionsAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  tracesApi: TracesAPI\n): ExceptionsAPI {\n  internalLogger.debug('Initializing exceptions API');\n\n  let lastPayload: Pick<ExceptionEvent, 'type' | 'value' | 'stacktrace' | 'context'> | null = null;\n\n  stacktraceParser = config.parseStacktrace ?? stacktraceParser;\n\n  const changeStacktraceParser: ExceptionsAPI['changeStacktraceParser'] = (newStacktraceParser) => {\n    internalLogger.debug('Changing stacktrace parser');\n\n    stacktraceParser = newStacktraceParser ?? stacktraceParser;\n  };\n\n  const getStacktraceParser: ExceptionsAPI['getStacktraceParser'] = () => stacktraceParser;\n\n  const pushError: ExceptionsAPI['pushError'] = (\n    error,\n    { skipDedupe, stackFrames, type, context, spanContext, timestampOverwriteMs } = {}\n  ) => {\n    type = type || error.name || defaultExceptionType;\n\n    const item: TransportItem<ExceptionEvent> = {\n      meta: metas.value,\n      payload: {\n        type,\n        value: error.message,\n        timestamp: timestampOverwriteMs ? timestampToIsoString(timestampOverwriteMs) : getCurrentTimestamp(),\n        trace: spanContext\n          ? {\n              trace_id: spanContext.traceId,\n              span_id: spanContext.spanId,\n            }\n          : tracesApi.getTraceContext(),\n        context: {\n          ...parseCause(error),\n          ...(context ?? {}),\n        },\n      },\n      type: TransportItemType.EXCEPTION,\n    };\n\n    stackFrames = stackFrames ?? (error.stack ? stacktraceParser?.(error).frames : undefined);\n\n    if (stackFrames?.length) {\n      item.payload.stacktrace = {\n        frames: stackFrames,\n      };\n    }\n\n    const testingPayload = {\n      type: item.payload.type,\n      value: item.payload.value,\n      stackTrace: item.payload.stacktrace,\n      context: item.payload.context,\n    };\n\n    if (!skipDedupe && config.dedupe && !isNull(lastPayload) && deepEqual(testingPayload, lastPayload)) {\n      internalLogger.debug('Skipping error push because it is the same as the last one\\n', item.payload);\n\n      return;\n    }\n\n    lastPayload = testingPayload;\n\n    internalLogger.debug('Pushing exception\\n', item);\n\n    transports.execute(item);\n  };\n\n  changeStacktraceParser(config.parseStacktrace);\n\n  return {\n    changeStacktraceParser,\n    getStacktraceParser,\n    pushError,\n  };\n}\nfunction parseCause(error: ErrorWithIndexProperties): {} | { cause: string } {\n  let cause = error.cause;\n\n  if (isError(cause)) {\n    cause = error.cause.toString();\n    // typeof operator on null returns \"object\". This is a well-known quirk in JavaScript and is considered a bug that cannot be fixed due to backward compatibility issues.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof#typeof_null\n  } else if (cause !== null && (isObject(error.cause) || isArray(error.cause))) {\n    cause = JSON.stringify(error.cause);\n  } else if (cause != null) {\n    cause = error.cause.toString();\n  }\n\n  return cause == null ? {} : { cause };\n}\n","import type { Config } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport type { Transports } from '../transports';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\n\nimport { initializeEventsAPI } from './events';\nimport { initializeExceptionsAPI } from './exceptions';\nimport { initializeLogsAPI } from './logs';\nimport { initializeMeasurementsAPI } from './measurements';\nimport { initializeMetaAPI } from './meta';\nimport { initializeTracesAPI } from './traces';\nimport type { API } from './types';\n\nexport function initializeAPI(\n  unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports\n): API {\n  internalLogger.debug('Initializing API');\n\n  const tracesApi = initializeTracesAPI(unpatchedConsole, internalLogger, config, metas, transports);\n\n  return {\n    ...tracesApi,\n    ...initializeExceptionsAPI(unpatchedConsole, internalLogger, config, metas, transports, tracesApi),\n    ...initializeMetaAPI(unpatchedConsole, internalLogger, config, metas, transports),\n    ...initializeLogsAPI(unpatchedConsole, internalLogger, config, metas, transports, tracesApi),\n    ...initializeMeasurementsAPI(unpatchedConsole, internalLogger, config, metas, transports, tracesApi),\n    ...initializeEventsAPI(unpatchedConsole, internalLogger, config, metas, transports, tracesApi),\n  };\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Metas } from '../../metas';\nimport { TransportItem, TransportItemType, Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\n\nimport type { OTELApi, TraceEvent, TracesAPI } from './types';\n\nexport function initializeTracesAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config,\n  metas: Metas,\n  transports: Transports\n): TracesAPI {\n  internalLogger.debug('Initializing traces API');\n\n  let otel: OTELApi | undefined = undefined;\n\n  const initOTEL: TracesAPI['initOTEL'] = (trace, context) => {\n    internalLogger.debug('Initializing OpenTelemetry');\n\n    otel = {\n      trace,\n      context,\n    };\n  };\n\n  const getTraceContext: TracesAPI['getTraceContext'] = () => {\n    const ctx = otel?.trace.getSpanContext(otel.context.active());\n\n    return !ctx\n      ? undefined\n      : {\n          trace_id: ctx.traceId,\n          span_id: ctx.spanId,\n        };\n  };\n\n  const pushTraces: TracesAPI['pushTraces'] = (payload) => {\n    try {\n      const item: TransportItem<TraceEvent> = {\n        type: TransportItemType.TRACE,\n        payload,\n        meta: metas.value,\n      };\n\n      internalLogger.debug('Pushing trace\\n', item);\n\n      transports.execute(item);\n    } catch (err) {\n      internalLogger.error('Error pushing trace\\n', err);\n    }\n  };\n\n  const getOTEL: TracesAPI['getOTEL'] = () => otel;\n\n  const isOTELInitialized: TracesAPI['isOTELInitialized'] = () => !!otel;\n\n  return {\n    getOTEL,\n    getTraceContext,\n    initOTEL,\n    isOTELInitialized,\n    pushTraces,\n  };\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Meta, Metas } from '../../metas';\nimport type { Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\n\nimport type { MetaAPI } from './types';\n\nexport function initializeMetaAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config,\n  metas: Metas,\n  _transports: Transports\n): MetaAPI {\n  internalLogger.debug('Initializing meta API');\n\n  let metaSession: Partial<Meta> | undefined = undefined;\n  let metaUser: Partial<Meta> | undefined = undefined;\n  let metaView: Partial<Meta> | undefined = undefined;\n\n  const setUser: MetaAPI['setUser'] = (user) => {\n    if (metaUser) {\n      metas.remove(metaUser);\n    }\n\n    metaUser = {\n      user,\n    };\n\n    metas.add(metaUser);\n  };\n\n  const setSession: MetaAPI['setSession'] = (session) => {\n    if (metaSession) {\n      metas.remove(metaSession);\n    }\n\n    metaSession = {\n      session,\n    };\n\n    metas.add(metaSession);\n  };\n\n  const getSession: MetaAPI['getSession'] = () => metas.value.session;\n\n  const setView: MetaAPI['setView'] = (view) => {\n    if (metaView?.view?.name === view?.name) {\n      return;\n    }\n\n    const previousView = metaView;\n\n    metaView = {\n      view,\n    };\n\n    metas.add(metaView);\n\n    if (previousView) {\n      metas.remove(previousView);\n    }\n  };\n\n  const getView: MetaAPI['getView'] = () => metas.value.view;\n\n  return {\n    setUser,\n    resetUser: setUser as MetaAPI['resetUser'],\n    setSession,\n    resetSession: setSession as MetaAPI['resetSession'],\n    getSession,\n    setView,\n    getView,\n  };\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Metas } from '../../metas';\nimport { TransportItem, TransportItemType } from '../../transports';\nimport type { Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\nimport { deepEqual, defaultLogLevel, getCurrentTimestamp, isNull } from '../../utils';\nimport { timestampToIsoString } from '../../utils/date';\nimport type { TracesAPI } from '../traces';\n\nimport { defaultLogArgsSerializer } from './const';\nimport type { LogEvent, LogsAPI } from './types';\n\nexport function initializeLogsAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  tracesApi: TracesAPI\n): LogsAPI {\n  internalLogger.debug('Initializing logs API');\n\n  let lastPayload: Pick<LogEvent, 'message' | 'level' | 'context'> | null = null;\n\n  const logArgsSerializer = config.logArgsSerializer ?? defaultLogArgsSerializer;\n\n  const pushLog: LogsAPI['pushLog'] = (\n    args,\n    { context, level, skipDedupe, spanContext, timestampOverwriteMs } = {}\n  ) => {\n    try {\n      const item: TransportItem<LogEvent> = {\n        type: TransportItemType.LOG,\n        payload: {\n          message: logArgsSerializer(args),\n          level: level ?? defaultLogLevel,\n          context: context ?? {},\n          timestamp: timestampOverwriteMs ? timestampToIsoString(timestampOverwriteMs) : getCurrentTimestamp(),\n          trace: spanContext\n            ? {\n                trace_id: spanContext.traceId,\n                span_id: spanContext.spanId,\n              }\n            : tracesApi.getTraceContext(),\n        },\n        meta: metas.value,\n      };\n\n      const testingPayload = {\n        message: item.payload.message,\n        level: item.payload.level,\n        context: item.payload.context,\n      };\n\n      if (!skipDedupe && config.dedupe && !isNull(lastPayload) && deepEqual(testingPayload, lastPayload)) {\n        internalLogger.debug('Skipping log push because it is the same as the last one\\n', item.payload);\n\n        return;\n      }\n\n      lastPayload = testingPayload;\n\n      internalLogger.debug('Pushing log\\n', item);\n\n      transports.execute(item);\n    } catch (err) {\n      internalLogger.error('Error pushing log\\n', err);\n    }\n  };\n\n  return {\n    pushLog,\n  };\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Metas } from '../../metas';\nimport { TransportItem, TransportItemType } from '../../transports';\nimport type { Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\nimport { deepEqual, getCurrentTimestamp, isNull } from '../../utils';\nimport { timestampToIsoString } from '../../utils/date';\nimport type { TracesAPI } from '../traces';\n\nimport type { MeasurementEvent, MeasurementsAPI } from './types';\n\nexport function initializeMeasurementsAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  tracesApi: TracesAPI\n): MeasurementsAPI {\n  internalLogger.debug('Initializing measurements API');\n\n  let lastPayload: Pick<MeasurementEvent, 'type' | 'values' | 'context'> | null = null;\n\n  const pushMeasurement: MeasurementsAPI['pushMeasurement'] = (\n    payload,\n    { skipDedupe, context, spanContext, timestampOverwriteMs } = {}\n  ) => {\n    try {\n      const item: TransportItem<MeasurementEvent> = {\n        type: TransportItemType.MEASUREMENT,\n        payload: {\n          ...payload,\n          trace: spanContext\n            ? {\n                trace_id: spanContext.traceId,\n                span_id: spanContext.spanId,\n              }\n            : tracesApi.getTraceContext(),\n          timestamp: timestampOverwriteMs ? timestampToIsoString(timestampOverwriteMs) : getCurrentTimestamp(),\n          context: context ?? {},\n        },\n        meta: metas.value,\n      };\n\n      const testingPayload = {\n        type: item.payload.type,\n        values: item.payload.values,\n        context: item.payload.context,\n      };\n\n      if (!skipDedupe && config.dedupe && !isNull(lastPayload) && deepEqual(testingPayload, lastPayload)) {\n        internalLogger.debug('Skipping measurement push because it is the same as the last one\\n', item.payload);\n\n        return;\n      }\n\n      lastPayload = testingPayload;\n\n      internalLogger.debug('Pushing measurement\\n', item);\n\n      transports.execute(item);\n    } catch (err) {\n      internalLogger.error('Error pushing measurement\\n', err);\n    }\n  };\n\n  return {\n    pushMeasurement,\n  };\n}\n","import type { Config } from '../../config';\nimport type { InternalLogger } from '../../internalLogger';\nimport type { Metas } from '../../metas';\nimport { TransportItem, TransportItemType, Transports } from '../../transports';\nimport type { UnpatchedConsole } from '../../unpatchedConsole';\nimport { deepEqual, getCurrentTimestamp, isNull } from '../../utils';\nimport { timestampToIsoString } from '../../utils/date';\nimport type { TracesAPI } from '../traces';\n\nimport type { EventEvent, EventsAPI } from './types';\n\nexport function initializeEventsAPI(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  tracesApi: TracesAPI\n): EventsAPI {\n  let lastPayload: Pick<EventEvent, 'name' | 'domain' | 'attributes'> | null = null;\n\n  const pushEvent: EventsAPI['pushEvent'] = (\n    name,\n    attributes,\n    domain,\n    { skipDedupe, spanContext, timestampOverwriteMs } = {}\n  ) => {\n    try {\n      const item: TransportItem<EventEvent> = {\n        meta: metas.value,\n        payload: {\n          name,\n          domain: domain ?? config.eventDomain,\n          attributes,\n          timestamp: timestampOverwriteMs ? timestampToIsoString(timestampOverwriteMs) : getCurrentTimestamp(),\n          trace: spanContext\n            ? {\n                trace_id: spanContext.traceId,\n                span_id: spanContext.spanId,\n              }\n            : tracesApi.getTraceContext(),\n        },\n        type: TransportItemType.EVENT,\n      };\n\n      const testingPayload = {\n        name: item.payload.name,\n        attributes: item.payload.attributes,\n        domain: item.payload.domain,\n      };\n\n      if (!skipDedupe && config.dedupe && !isNull(lastPayload) && deepEqual(testingPayload, lastPayload)) {\n        internalLogger.debug('Skipping event push because it is the same as the last one\\n', item.payload);\n\n        return;\n      }\n\n      lastPayload = testingPayload;\n\n      internalLogger.debug('Pushing event\\n', item);\n\n      transports.execute(item);\n    } catch (err) {\n      internalLogger.error('Error pushing event', err);\n    }\n  };\n\n  return {\n    pushEvent,\n  };\n}\n","import { defaultUnpatchedConsole } from '../unpatchedConsole';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { noop } from '../utils';\n\nimport { defaultInternalLogger, defaultInternalLoggerLevel, InternalLoggerLevel } from './const';\nimport type { InternalLogger } from './types';\n\nexport function createInternalLogger(\n  unpatchedConsole: UnpatchedConsole = defaultUnpatchedConsole,\n  internalLoggerLevel = defaultInternalLoggerLevel\n): InternalLogger {\n  const internalLogger = defaultInternalLogger;\n\n  if (internalLoggerLevel > InternalLoggerLevel.OFF) {\n    internalLogger.error =\n      internalLoggerLevel >= InternalLoggerLevel.ERROR\n        ? function (...args) {\n            unpatchedConsole.error(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.warn =\n      internalLoggerLevel >= InternalLoggerLevel.WARN\n        ? function (...args) {\n            unpatchedConsole.warn(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.info =\n      internalLoggerLevel >= InternalLoggerLevel.INFO\n        ? function (...args) {\n            unpatchedConsole.info(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n\n    internalLogger.debug =\n      internalLoggerLevel >= InternalLoggerLevel.VERBOSE\n        ? function (...args) {\n            unpatchedConsole.debug(`${internalLogger.prefix}\\n`, ...args);\n          }\n        : noop;\n  }\n\n  return internalLogger;\n}\n","import type { Config } from '../config';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\n\nimport { defaultInternalLogger } from './const';\nimport { createInternalLogger } from './createInternalLogger';\nimport type { InternalLogger } from './types';\n\nexport let internalLogger: InternalLogger = defaultInternalLogger;\n\nexport function initializeInternalLogger(unpatchedConsole: UnpatchedConsole, config: Config): InternalLogger {\n  internalLogger = createInternalLogger(unpatchedConsole, config.internalLoggerLevel);\n\n  return internalLogger;\n}\n","import type { TransportItem } from '../';\n\nimport type { BatchExecutorOptions, SendFn } from './types';\n\nconst DEFAULT_SEND_TIMEOUT_MS = 250;\nconst DEFAULT_BATCH_ITEM_LIMIT = 50;\n\nexport class BatchExecutor {\n  private readonly itemLimit: number;\n  private readonly sendTimeout: number;\n\n  private signalBuffer: TransportItem[] = [];\n  private sendFn: SendFn;\n  private paused: boolean;\n  private flushInterval: number;\n\n  constructor(sendFn: SendFn, options?: BatchExecutorOptions) {\n    this.itemLimit = options?.itemLimit ?? DEFAULT_BATCH_ITEM_LIMIT;\n    this.sendTimeout = options?.sendTimeout ?? DEFAULT_SEND_TIMEOUT_MS;\n    this.paused = options?.paused || false;\n    this.sendFn = sendFn;\n    this.flushInterval = -1;\n\n    if (!this.paused) {\n      this.start();\n    }\n\n    // Send batched/buffered data when user navigates to new page, switches or closes the tab, minimizes or closes the browser.\n    // If on mobile, it also sends data if user switches from the browser to a different app.\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'hidden') {\n        this.flush();\n      }\n    });\n  }\n\n  addItem(item: TransportItem): void {\n    if (this.paused) {\n      return;\n    }\n\n    this.signalBuffer.push(item);\n\n    if (this.signalBuffer.length >= this.itemLimit) {\n      this.flush();\n    }\n  }\n\n  start(): void {\n    this.paused = false;\n    if (this.sendTimeout > 0) {\n      this.flushInterval = window.setInterval(() => this.flush(), this.sendTimeout);\n    }\n  }\n\n  pause(): void {\n    this.paused = true;\n    clearInterval(this.flushInterval);\n  }\n\n  groupItems(items: TransportItem[]): TransportItem[][] {\n    const itemMap = new Map<string, TransportItem[]>();\n    items.forEach((item) => {\n      const metaKey = JSON.stringify(item.meta);\n\n      let currentItems = itemMap.get(metaKey);\n      if (currentItems === undefined) {\n        currentItems = [item];\n      } else {\n        currentItems = [...currentItems, item];\n      }\n\n      itemMap.set(metaKey, currentItems);\n    });\n    return Array.from(itemMap.values());\n  }\n\n  private flush() {\n    if (this.paused || this.signalBuffer.length === 0) {\n      return;\n    }\n\n    const itemGroups = this.groupItems(this.signalBuffer);\n    itemGroups.forEach(this.sendFn);\n    this.signalBuffer = [];\n  }\n}\n","import type { TransportItem } from '..';\nimport type { ExceptionEvent } from '../api';\nimport type { Config, Patterns } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { isString } from '../utils';\n\nimport { BatchExecutor } from './batchExecutor';\nimport { TransportItemType } from './const';\nimport type { BeforeSendHook, Transport, Transports } from './types';\n\nexport function shouldIgnoreEvent(patterns: Patterns, msg: string): boolean {\n  return patterns.some((pattern) => {\n    return isString(pattern) ? msg.includes(pattern) : !!msg.match(pattern);\n  });\n}\n\nexport function createBeforeSendHookFromIgnorePatterns(patterns: Patterns): BeforeSendHook {\n  return (item: TransportItem) => {\n    if (item.type === TransportItemType.EXCEPTION && item.payload) {\n      const evt = item.payload as ExceptionEvent;\n      const msg = `${evt.type}: ${evt.value}`;\n\n      if (shouldIgnoreEvent(patterns, msg)) {\n        return null;\n      }\n    }\n\n    return item;\n  };\n}\n\nexport function initializeTransports(\n  unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas\n): Transports {\n  internalLogger.debug('Initializing transports');\n\n  const transports: Transport[] = [];\n\n  let paused = config.paused;\n\n  let beforeSendHooks: BeforeSendHook[] = [];\n\n  const add: Transports['add'] = (...newTransports) => {\n    internalLogger.debug('Adding transports');\n\n    newTransports.forEach((newTransport) => {\n      internalLogger.debug(`Adding \"${newTransport.name}\" transport`);\n\n      const exists = transports.some((existingTransport) => existingTransport === newTransport);\n\n      if (exists) {\n        internalLogger.warn(`Transport ${newTransport.name} is already added`);\n\n        return;\n      }\n\n      newTransport.unpatchedConsole = unpatchedConsole;\n      newTransport.internalLogger = internalLogger;\n      newTransport.config = config;\n      newTransport.metas = metas;\n\n      transports.push(newTransport);\n    });\n  };\n\n  const addBeforeSendHooks: Transports['addBeforeSendHooks'] = (...newBeforeSendHooks) => {\n    internalLogger.debug('Adding beforeSendHooks\\n', beforeSendHooks);\n\n    newBeforeSendHooks.forEach((beforeSendHook) => {\n      if (beforeSendHook) {\n        beforeSendHooks.push(beforeSendHook);\n      }\n    });\n  };\n\n  const addIgnoreErrorsPatterns: Transports['addIgnoreErrorsPatterns'] = (...ignoreErrorsPatterns) => {\n    internalLogger.debug('Adding ignoreErrorsPatterns\\n', ignoreErrorsPatterns);\n\n    ignoreErrorsPatterns.forEach((ignoreErrorsPattern) => {\n      if (ignoreErrorsPattern) {\n        beforeSendHooks.push(createBeforeSendHookFromIgnorePatterns(ignoreErrorsPattern));\n      }\n    });\n  };\n\n  const applyBeforeSendHooks = (items: TransportItem[]): TransportItem[] => {\n    let filteredItems = items;\n    for (const hook of beforeSendHooks) {\n      const modified = filteredItems.map(hook).filter(Boolean) as TransportItem[];\n\n      if (modified.length === 0) {\n        return [];\n      }\n\n      filteredItems = modified;\n    }\n    return filteredItems;\n  };\n\n  const batchedSend = (items: TransportItem[]) => {\n    const filteredItems = applyBeforeSendHooks(items);\n\n    if (filteredItems.length === 0) {\n      return;\n    }\n\n    for (const transport of transports) {\n      internalLogger.debug(`Transporting item using ${transport.name}\\n`, filteredItems);\n      if (transport.isBatched()) {\n        transport.send(filteredItems);\n      }\n    }\n  };\n\n  const instantSend = (item: TransportItem) => {\n    // prevent all beforeSend hooks being executed twice if batching is enabled.\n    if (config.batching?.enabled && transports.every((transport) => transport.isBatched())) {\n      return;\n    }\n\n    const [filteredItem] = applyBeforeSendHooks([item]);\n\n    if (filteredItem === undefined) {\n      return;\n    }\n\n    for (const transport of transports) {\n      internalLogger.debug(`Transporting item using ${transport.name}\\n`, filteredItem);\n      if (!transport.isBatched()) {\n        transport.send(filteredItem);\n      } else if (!config.batching?.enabled) {\n        transport.send([filteredItem]);\n      }\n    }\n  };\n\n  let batchExecutor: BatchExecutor | undefined;\n\n  if (config.batching?.enabled) {\n    batchExecutor = new BatchExecutor(batchedSend, {\n      sendTimeout: config.batching.sendTimeout,\n      itemLimit: config.batching.itemLimit,\n      paused,\n    });\n  }\n\n  // Send a signal to the appropriate transports\n  //\n  // 1. If SDK is paused, early return\n  // 2. If batching is not enabled send the signal to all transports\n  //    instantly.\n  // 3i. If batching is enabled, enqueue the signal\n  // 3ii. Send the signal instantly to all un-batched transports\n  const execute: Transports['execute'] = (item) => {\n    if (paused) {\n      return;\n    }\n\n    if (config.batching?.enabled) {\n      batchExecutor?.addItem(item);\n    }\n\n    instantSend(item);\n  };\n\n  const getBeforeSendHooks: Transports['getBeforeSendHooks'] = () => [...beforeSendHooks];\n\n  const isPaused: Transports['isPaused'] = () => paused;\n\n  const pause: Transports['pause'] = () => {\n    internalLogger.debug('Pausing transports');\n    batchExecutor?.pause();\n\n    paused = true;\n  };\n\n  const remove: Transports['remove'] = (...transportsToRemove) => {\n    internalLogger.debug('Removing transports');\n\n    transportsToRemove.forEach((transportToRemove) => {\n      internalLogger.debug(`Removing \"${transportToRemove.name}\" transport`);\n\n      const existingTransportIndex = transports.indexOf(transportToRemove);\n\n      if (existingTransportIndex === -1) {\n        internalLogger.warn(`Transport \"${transportToRemove.name}\" is not added`);\n\n        return;\n      }\n\n      transports.splice(existingTransportIndex, 1);\n    });\n  };\n\n  const removeBeforeSendHooks: Transports['removeBeforeSendHooks'] = (...beforeSendHooksToRemove) => {\n    beforeSendHooks.filter((beforeSendHook) => !beforeSendHooksToRemove.includes(beforeSendHook));\n  };\n\n  const unpause: Transports['unpause'] = () => {\n    internalLogger.debug('Unpausing transports');\n    batchExecutor?.start();\n\n    paused = false;\n  };\n\n  return {\n    add,\n    addBeforeSendHooks,\n    addIgnoreErrorsPatterns,\n    getBeforeSendHooks,\n    execute,\n    isPaused,\n    pause,\n    remove,\n    removeBeforeSendHooks,\n    get transports() {\n      return [...transports];\n    },\n    unpause,\n  };\n}\n","import type { Config } from '../config';\n\nimport { defaultUnpatchedConsole } from './const';\nimport type { UnpatchedConsole } from './types';\n\nexport let unpatchedConsole: UnpatchedConsole = defaultUnpatchedConsole;\n\nexport function initializeUnpatchedConsole(config: Config): UnpatchedConsole {\n  unpatchedConsole = config.unpatchedConsole ?? unpatchedConsole;\n\n  return unpatchedConsole;\n}\n","import { initializeAPI } from './api';\nimport type { Config } from './config';\nimport { initializeInstrumentations, registerInitialInstrumentations } from './instrumentations';\nimport { initializeInternalLogger } from './internalLogger';\nimport { initializeMetas, registerInitialMetas } from './metas';\nimport { isInternalFaroOnGlobalObject, registerFaro } from './sdk';\nimport type { Faro } from './sdk';\nimport { initializeTransports, registerInitialTransports } from './transports';\nimport { initializeUnpatchedConsole } from './unpatchedConsole';\n\nexport function initializeFaro(config: Config): Faro {\n  const unpatchedConsole = initializeUnpatchedConsole(config);\n  const internalLogger = initializeInternalLogger(unpatchedConsole, config);\n\n  if (isInternalFaroOnGlobalObject() && !config.isolate) {\n    internalLogger.error(\n      'Faro is already registered. Either add instrumentations, transports etc. to the global faro instance or use the \"isolate\" property'\n    );\n\n    return undefined!;\n  }\n\n  internalLogger.debug('Initializing');\n\n  // Initializing the APIs\n  const metas = initializeMetas(unpatchedConsole, internalLogger, config);\n  const transports = initializeTransports(unpatchedConsole, internalLogger, config, metas);\n  const api = initializeAPI(unpatchedConsole, internalLogger, config, metas, transports);\n  const instrumentations = initializeInstrumentations(unpatchedConsole, internalLogger, config, metas, transports, api);\n  const faro = registerFaro(unpatchedConsole, internalLogger, config, metas, transports, api, instrumentations);\n\n  // make sure Faro is initialized before registering default metas, instrumentations, transports etc.\n  registerInitialMetas(faro);\n  registerInitialTransports(faro);\n  registerInitialInstrumentations(faro);\n\n  return faro;\n}\n","import type { Config } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\nimport { isFunction } from '../utils';\n\nimport type { Meta, MetaItem, Metas, MetasListener } from './types';\n\nexport function initializeMetas(\n  _unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  _config: Config\n): Metas {\n  let items: MetaItem[] = [];\n  let listeners: MetasListener[] = [];\n\n  const getValue = () => items.reduce<Meta>((acc, item) => Object.assign(acc, isFunction(item) ? item() : item), {});\n\n  const notifyListeners = () => {\n    if (listeners.length) {\n      const value = getValue();\n\n      listeners.forEach((listener) => listener(value));\n    }\n  };\n\n  const add: Metas['add'] = (...newItems) => {\n    internalLogger.debug('Adding metas\\n', newItems);\n\n    items.push(...newItems);\n\n    notifyListeners();\n  };\n\n  const remove: Metas['remove'] = (...itemsToRemove) => {\n    internalLogger.debug('Removing metas\\n', itemsToRemove);\n\n    items = items.filter((currentItem) => !itemsToRemove.includes(currentItem));\n\n    notifyListeners();\n  };\n\n  const addListener: Metas['addListener'] = (listener) => {\n    internalLogger.debug('Adding metas listener\\n', listener);\n\n    listeners.push(listener);\n  };\n\n  const removeListener: Metas['removeListener'] = (listener) => {\n    internalLogger.debug('Removing metas listener\\n', listener);\n\n    listeners = listeners.filter((currentListener) => currentListener !== listener);\n  };\n\n  return {\n    add,\n    remove,\n    addListener,\n    removeListener,\n    get value() {\n      return getValue();\n    },\n  };\n}\n","import type { API } from '../api';\nimport type { Config } from '../config';\nimport type { InternalLogger } from '../internalLogger';\nimport type { Metas } from '../metas';\nimport type { Transports } from '../transports';\nimport type { UnpatchedConsole } from '../unpatchedConsole';\n\nimport type { Instrumentation, Instrumentations } from './types';\n\nexport function initializeInstrumentations(\n  unpatchedConsole: UnpatchedConsole,\n  internalLogger: InternalLogger,\n  config: Config,\n  metas: Metas,\n  transports: Transports,\n  api: API\n): Instrumentations {\n  internalLogger.debug('Initializing instrumentations');\n\n  const instrumentations: Instrumentation[] = [];\n\n  const add: Instrumentations['add'] = (...newInstrumentations) => {\n    internalLogger.debug('Adding instrumentations');\n\n    newInstrumentations.forEach((newInstrumentation) => {\n      internalLogger.debug(`Adding \"${newInstrumentation.name}\" instrumentation`);\n\n      const exists = instrumentations.some(\n        (existingInstrumentation) => existingInstrumentation.name === newInstrumentation.name\n      );\n\n      if (exists) {\n        internalLogger.warn(`Instrumentation ${newInstrumentation.name} is already added`);\n\n        return;\n      }\n\n      newInstrumentation.unpatchedConsole = unpatchedConsole;\n      newInstrumentation.internalLogger = internalLogger;\n      newInstrumentation.config = config;\n      newInstrumentation.metas = metas;\n      newInstrumentation.transports = transports;\n      newInstrumentation.api = api;\n\n      instrumentations.push(newInstrumentation);\n\n      newInstrumentation.initialize();\n    });\n  };\n\n  const remove: Instrumentations['remove'] = (...instrumentationsToRemove) => {\n    internalLogger.debug('Removing instrumentations');\n\n    instrumentationsToRemove.forEach((instrumentationToRemove) => {\n      internalLogger.debug(`Removing \"${instrumentationToRemove.name}\" instrumentation`);\n\n      const existingInstrumentationIndex = instrumentations.reduce<number | null>(\n        (acc, existingInstrumentation, existingTransportIndex) => {\n          if (acc === null && existingInstrumentation.name === instrumentationToRemove.name) {\n            return existingTransportIndex;\n          }\n\n          return null;\n        },\n        null\n      );\n\n      if (!existingInstrumentationIndex) {\n        internalLogger.warn(`Instrumentation \"${instrumentationToRemove.name}\" is not added`);\n\n        return;\n      }\n\n      instrumentations[existingInstrumentationIndex]!.destroy?.();\n\n      instrumentations.splice(existingInstrumentationIndex, 1);\n    });\n  };\n\n  return {\n    add,\n    get instrumentations() {\n      return [...instrumentations];\n    },\n    remove,\n  };\n}\n","import type { Faro } from '../sdk';\nimport { getBundleId } from '../utils/sourceMaps';\nimport { VERSION } from '../version';\n\nimport type { Meta } from './types';\n\nexport function registerInitialMetas(faro: Faro): void {\n  const initial: Meta = {\n    sdk: {\n      version: VERSION,\n    },\n    app: {\n      bundleId: faro.config.app.name && getBundleId(faro.config.app.name),\n    },\n  };\n\n  const session = faro.config.sessionTracking?.session;\n  if (session) {\n    faro.api.setSession(session);\n  }\n\n  if (faro.config.app) {\n    initial.app = { ...faro.config.app, ...initial.app };\n  }\n\n  if (faro.config.user) {\n    initial.user = faro.config.user;\n  }\n\n  if (faro.config.view) {\n    initial.view = faro.config.view;\n  }\n\n  faro.metas.add(initial, ...(faro.config.metas ?? []));\n}\n","import { globalObject } from '../globalObject';\n\nexport function getBundleId(appName: string): string | undefined {\n  return (globalObject as any)?.[`__faroBundleId_${appName}`];\n}\n","import type { Faro } from '../sdk';\n\nexport function registerInitialTransports(faro: Faro): void {\n  faro.transports.add(...faro.config.transports);\n  faro.transports.addBeforeSendHooks(faro.config.beforeSend);\n  faro.transports.addIgnoreErrorsPatterns(faro.config.ignoreErrors);\n}\n","import type { Faro } from '../sdk';\n\nexport function registerInitialInstrumentations(faro: Faro): void {\n  faro.instrumentations.add(...faro.config.instrumentations);\n}\n","export const defaultGlobalObjectKey = 'faro';\n\nexport const defaultBatchingConfig = {\n  enabled: true,\n  sendTimeout: 250,\n  itemLimit: 50,\n};\n","import type { ExtendedError, Stacktrace } from '@grafana/faro-core';\n\nimport { getStackFramesFromError } from './getStackFramesFromError';\n\nexport function parseStacktrace(error: ExtendedError): Stacktrace {\n  return {\n    frames: getStackFramesFromError(error),\n  };\n}\n","import { UAParser } from 'ua-parser-js';\n\nimport { unknownString } from '@grafana/faro-core';\nimport type { Meta, MetaBrowser, MetaItem } from '@grafana/faro-core';\n\nexport const browserMeta: MetaItem<Pick<Meta, 'browser'>> = () => {\n  const parser = new UAParser();\n  const { name, version } = parser.getBrowser();\n  const { name: osName, version: osVersion } = parser.getOS();\n  const userAgent = parser.getUA();\n  const language = navigator.language;\n  const mobile = navigator.userAgent.includes('Mobi');\n  const brands = getBrands();\n\n  return {\n    browser: {\n      name: name ?? unknownString,\n      version: version ?? unknownString,\n      os: `${osName ?? unknownString} ${osVersion ?? unknownString}`,\n      userAgent: userAgent ?? unknownString,\n      language: language ?? unknownString,\n      mobile,\n      brands: brands ?? unknownString,\n      viewportWidth: `${window.innerWidth}`,\n      viewportHeight: `${window.innerHeight}`,\n    },\n  };\n\n  function getBrands(): MetaBrowser['brands'] | undefined {\n    if (!name || !version) {\n      return undefined;\n    }\n\n    if ('userAgentData' in navigator && navigator.userAgentData) {\n      // userAgentData in experimental (only Chrome supports it) thus TS does not ship the respective type declarations\n      return (navigator as any).userAgentData.brands;\n    }\n\n    return undefined;\n  }\n};\n","import type { MetaItem } from '@grafana/faro-core';\n\nimport { browserMeta } from './browser';\nimport { pageMeta } from './page';\n\nexport const defaultMetas: MetaItem[] = [browserMeta, pageMeta];\n","import type { Meta, MetaItem } from '@grafana/faro-core';\n\nexport const pageMeta: MetaItem<Pick<Meta, 'page'>> = () => ({\n  page: {\n    url: location.href,\n  },\n});\n","import type { Meta, MetaItem } from '@grafana/faro-core';\n\ntype K6Properties = {\n  testRunId?: string;\n};\n\nexport const k6Meta: MetaItem<Pick<Meta, 'k6'>> = () => {\n  const k6Properties: K6Properties = (window as any).k6;\n\n  return {\n    k6: {\n      // we only add the k6 meta if Faro is running inside a k6 environment, so this is always true\n      isK6Browser: true,\n      ...(k6Properties?.testRunId && { testRunId: k6Properties?.testRunId }),\n    },\n  };\n};\n","import type { Patterns } from '..';\nimport { BaseExtension } from '../extensions';\n\nimport type { Transport, TransportItem } from './types';\n\nexport abstract class BaseTransport extends BaseExtension implements Transport {\n  abstract send(items: TransportItem | TransportItem[]): void | Promise<void>;\n\n  isBatched(): boolean {\n    return false;\n  }\n\n  getIgnoreUrls(): Patterns {\n    return [];\n  }\n}\n","import type { IResourceSpans } from '@opentelemetry/otlp-transformer';\n\nimport type { EventEvent, ExceptionEvent, LogEvent, MeasurementEvent, TraceEvent } from '..';\n\nimport { TransportItemType, transportItemTypeToBodyKey } from './const';\nimport type { TransportBody, TransportItem } from './types';\n\nexport function mergeResourceSpans(traces?: TraceEvent, resourceSpans?: IResourceSpans[]): TraceEvent | undefined {\n  if (resourceSpans === undefined) {\n    return traces;\n  }\n\n  if (traces === undefined) {\n    return {\n      resourceSpans,\n    };\n  }\n\n  const currentResource = traces.resourceSpans?.[0];\n  if (currentResource === undefined) {\n    return traces;\n  }\n\n  const currentSpans = currentResource?.scopeSpans || [];\n  const newSpans = resourceSpans?.[0]?.scopeSpans || [];\n\n  return {\n    ...traces,\n    resourceSpans: [\n      {\n        ...currentResource,\n        scopeSpans: [...currentSpans, ...newSpans],\n      },\n    ],\n  };\n}\n\nexport function getTransportBody(item: TransportItem[]): TransportBody {\n  let body: TransportBody = {\n    meta: {},\n  };\n\n  if (item[0] !== undefined) {\n    body.meta = item[0].meta;\n  }\n\n  item.forEach((currentItem: TransportItem) => {\n    switch (currentItem.type) {\n      case TransportItemType.LOG:\n      case TransportItemType.EVENT:\n      case TransportItemType.EXCEPTION:\n      case TransportItemType.MEASUREMENT:\n        const bk = transportItemTypeToBodyKey[currentItem.type];\n        const signals = body[bk] as LogEvent[] | EventEvent[] | ExceptionEvent[] | MeasurementEvent[];\n\n        body = {\n          ...body,\n          [bk]: signals === undefined ? [currentItem.payload] : [...signals, currentItem.payload],\n        };\n        break;\n      case TransportItemType.TRACE:\n        body = {\n          ...body,\n          traces: mergeResourceSpans(body.traces, (currentItem.payload as TraceEvent).resourceSpans),\n        };\n        break;\n    }\n  });\n\n  return body;\n}\n","import {\n  BaseExtension,\n  BaseTransport,\n  createPromiseBuffer,\n  getTransportBody,\n  noop,\n  PromiseBuffer,\n  VERSION,\n} from '@grafana/faro-core';\nimport type { Config, Patterns, TransportItem } from '@grafana/faro-core';\n\nimport { getSessionManagerByConfig } from '../../instrumentations/session/sessionManager';\nimport { getUserSessionUpdater } from '../../instrumentations/session/sessionManager/sessionManagerUtils';\n\nimport type { FetchTransportOptions } from './types';\n\nconst DEFAULT_BUFFER_SIZE = 30;\nconst DEFAULT_CONCURRENCY = 5; // chrome supports 10 total, firefox 17\nconst DEFAULT_RATE_LIMIT_BACKOFF_MS = 5000;\n\nconst BEACON_BODY_SIZE_LIMIT = 60000;\nconst TOO_MANY_REQUESTS = 429;\nconst ACCEPTED = 202;\n\nexport class FetchTransport extends BaseTransport {\n  readonly name = '@grafana/faro-web-sdk:transport-fetch';\n  readonly version = VERSION;\n\n  promiseBuffer: PromiseBuffer<Response | void>;\n\n  private readonly rateLimitBackoffMs: number;\n  private readonly getNow: () => number;\n  private disabledUntil: Date = new Date();\n\n  constructor(private options: FetchTransportOptions) {\n    super();\n\n    this.rateLimitBackoffMs = options.defaultRateLimitBackoffMs ?? DEFAULT_RATE_LIMIT_BACKOFF_MS;\n    this.getNow = options.getNow ?? (() => Date.now());\n\n    this.promiseBuffer = createPromiseBuffer({\n      size: options.bufferSize ?? DEFAULT_BUFFER_SIZE,\n      concurrency: options.concurrency ?? DEFAULT_CONCURRENCY,\n    });\n  }\n\n  async send(items: TransportItem[]): Promise<void> {\n    try {\n      if (this.disabledUntil > new Date(this.getNow())) {\n        this.logWarn(`Dropping transport item due to too many requests. Backoff until ${this.disabledUntil}`);\n\n        return Promise.resolve();\n      }\n\n      await this.promiseBuffer.add(() => {\n        const body = JSON.stringify(getTransportBody(items));\n\n        const { url, requestOptions, apiKey } = this.options;\n\n        const { headers, ...restOfRequestOptions } = requestOptions ?? {};\n\n        let sessionId;\n        const sessionMeta = this.metas.value.session;\n        if (sessionMeta != null) {\n          sessionId = sessionMeta.id;\n        }\n\n        return fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            ...(headers ?? {}),\n            ...(apiKey ? { 'x-api-key': apiKey } : {}),\n            ...(sessionId ? { 'x-faro-session-id': sessionId } : {}),\n          },\n          body,\n          keepalive: body.length <= BEACON_BODY_SIZE_LIMIT,\n          ...(restOfRequestOptions ?? {}),\n        })\n          .then(async (response) => {\n            if (response.status === ACCEPTED) {\n              const sessionExpired = response.headers.get('X-Faro-Session-Status') === 'invalid';\n\n              if (sessionExpired) {\n                this.extendFaroSession(this.config, this.logDebug);\n              }\n            }\n\n            if (response.status === TOO_MANY_REQUESTS) {\n              this.disabledUntil = this.getRetryAfterDate(response);\n              this.logWarn(`Too many requests, backing off until ${this.disabledUntil}`);\n            }\n\n            // read the body so the connection can be closed\n            response.text().catch(noop);\n            return response;\n          })\n          .catch((err) => {\n            this.logError('Failed sending payload to the receiver\\n', JSON.parse(body), err);\n          });\n      });\n    } catch (err) {\n      this.logError(err);\n    }\n  }\n\n  override getIgnoreUrls(): Patterns {\n    return ([this.options.url] as Patterns).concat(this.config.ignoreUrls ?? []);\n  }\n\n  override isBatched(): boolean {\n    return true;\n  }\n\n  private getRetryAfterDate(response: Response): Date {\n    const now = this.getNow();\n    const retryAfterHeader = response.headers.get('Retry-After');\n\n    if (retryAfterHeader) {\n      const delay = Number(retryAfterHeader);\n\n      if (!isNaN(delay)) {\n        return new Date(delay * 1000 + now);\n      }\n\n      const date = Date.parse(retryAfterHeader);\n\n      if (!isNaN(date)) {\n        return new Date(date);\n      }\n    }\n\n    return new Date(now + this.rateLimitBackoffMs);\n  }\n\n  private extendFaroSession(config: Config, logDebug: BaseExtension['logDebug']) {\n    const SessionExpiredString = `Session expired`;\n\n    const sessionTrackingConfig = config.sessionTracking;\n\n    if (sessionTrackingConfig?.enabled) {\n      const { fetchUserSession, storeUserSession } = getSessionManagerByConfig(sessionTrackingConfig);\n\n      getUserSessionUpdater({ fetchUserSession, storeUserSession })({ forceSessionExtend: true });\n\n      logDebug(`${SessionExpiredString} created new session.`);\n    } else {\n      logDebug(`${SessionExpiredString}.`);\n    }\n  }\n}\n","export interface PromiseBufferOptions {\n  // total number of concurrent tasks\n  concurrency: number;\n  // total number of uncompleted tasks to accept\n  size: number;\n}\n\nexport type PromiseProducer<T> = () => PromiseLike<T>;\n\nexport interface PromiseBuffer<T> {\n  add(promiseProducer: PromiseProducer<T>): PromiseLike<T>;\n}\n\nexport interface BufferItem<T> {\n  producer: PromiseProducer<T>;\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n}\n\nexport function createPromiseBuffer<T>(options: PromiseBufferOptions): PromiseBuffer<T> {\n  const { size, concurrency } = options;\n\n  const buffer: Array<BufferItem<T>> = []; // pending, not-yet-started tasks\n  let inProgress = 0; // counter for tasks currently in progress\n\n  const work = () => {\n    // if there's space for a task and buffer is not empty,\n    // take one task from buffer and run it\n    if (inProgress < concurrency && buffer.length) {\n      const { producer, resolve, reject } = buffer.shift()!;\n\n      inProgress++;\n\n      producer().then(\n        (result) => {\n          inProgress--;\n\n          work();\n\n          resolve(result);\n        },\n        (reason) => {\n          inProgress--;\n\n          work();\n\n          reject(reason);\n        }\n      );\n    }\n  };\n\n  const add: PromiseBuffer<T>['add'] = (promiseProducer) => {\n    if (buffer.length + inProgress >= size) {\n      throw new Error('Task buffer full');\n    }\n\n    return new Promise<T>((resolve, reject) => {\n      buffer.push({\n        producer: promiseProducer,\n        resolve,\n        reject,\n      });\n      work();\n    });\n  };\n\n  return {\n    add,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.9.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      `@opentelemetry/api: Registration of version v${api.version} for ${type} does not match previously registered API v${VERSION}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface DiagLoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link DiagLoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: DiagLoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\nimport { Link } from './link';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  addLink(_link: Link): this {\n    return this;\n  }\n\n  addLinks(_links: Link[]): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(\n    name: string,\n    options?: SpanOptions,\n    context = contextApi.active()\n  ): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(\n      this.name,\n      this.version,\n      this.options\n    );\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/// <reference types=\"zone.js\" />\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\nimport { TargetWithEvents } from './types';\nimport { isListenerObject } from './util';\n\n/* Key name to be used to save a context reference in Zone */\nconst ZONE_CONTEXT_KEY = 'OT_ZONE_CONTEXT';\n\n/**\n * ZoneContextManager\n * This module provides an easy functionality for tracing action between asynchronous operations in web.\n * It was not possible with standard [StackContextManager]{@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-web/src/StackContextManager.ts}.\n * It heavily depends on [zone.js]{@link https://www.npmjs.com/package/zone.js}.\n * It stores the information about context in zone. Each Context will have always new Zone;\n * It also supports binding a certain Span to a target that has \"addEventListener\" and \"removeEventListener\".\n * When this happens a new zone is being created and the provided Span is being assigned to this zone.\n */\nexport class ZoneContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Helps to create a unique name for the zones - part of zone name\n   */\n  private _zoneCounter = 0;\n\n  /**\n   * Returns the active context from certain zone name\n   * @param activeZone\n   */\n  private _activeContextFromZone(activeZone: Zone | undefined): Context {\n    return (activeZone && activeZone.get(ZONE_CONTEXT_KEY)) || ROOT_CONTEXT;\n  }\n\n  /**\n   * @param context A context (span) to be executed within target function\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(context: Context, target: T): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return contextWrapper as unknown as T;\n  }\n\n  /**\n   * @param context A context (span) to be bind to target\n   * @param obj target object on which the listeners will be patched\n   */\n  private _bindListener<T>(context: Context, obj: T): T {\n    const target = obj as unknown as TargetWithEvents;\n    if (target.__ot_listeners !== undefined) {\n      return obj;\n    }\n    target.__ot_listeners = {};\n\n    if (typeof target.addEventListener === 'function') {\n      target.addEventListener = this._patchAddEventListener(\n        target,\n        target.addEventListener,\n        context\n      );\n    }\n\n    if (typeof target.removeEventListener === 'function') {\n      target.removeEventListener = this._patchRemoveEventListener(\n        target,\n        target.removeEventListener\n      );\n    }\n\n    return obj;\n  }\n\n  /**\n   * Creates a new unique zone name\n   */\n  private _createZoneName() {\n    this._zoneCounter++;\n    const random = Math.random();\n    return `${this._zoneCounter}-${random}`;\n  }\n\n  /**\n   * Creates a new zone\n   * @param zoneName zone name\n   * @param context A context (span) to be bind with Zone\n   */\n  private _createZone(zoneName: string, context: unknown): Zone {\n    return Zone.current.fork({\n      name: zoneName,\n      properties: {\n        [ZONE_CONTEXT_KEY]: context,\n      },\n    });\n  }\n\n  /**\n   * Returns the active zone\n   */\n  private _getActiveZone(): Zone | undefined {\n    return Zone.current;\n  }\n\n  /**\n   * Patches addEventListener method\n   * @param target any target that has \"addEventListener\" method\n   * @param original reference to the patched method\n   * @param [context] context to be bind to the listener\n   */\n  private _patchAddEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['addEventListener']>,\n    context: Context\n  ) {\n    const contextManager = this;\n\n    return function (this: TargetWithEvents, event, listener, opts) {\n      if (target.__ot_listeners === undefined) {\n        target.__ot_listeners = {};\n      }\n      let listeners = target.__ot_listeners[event];\n      if (listeners === undefined) {\n        listeners = new WeakMap();\n        target.__ot_listeners[event] = listeners;\n      }\n      const patchedListener = contextManager.bind(context, listener);\n      // store a weak reference of the user listener to ours\n      listeners.set(listener, patchedListener);\n      return original.call(this, event, patchedListener, opts);\n    } as TargetWithEvents['addEventListener'];\n  }\n\n  /**\n   * Patches removeEventListener method\n   * @param target any target that has \"removeEventListener\" method\n   * @param original reference to the patched method\n   */\n  private _patchRemoveEventListener(\n    target: TargetWithEvents,\n    original: NonNullable<TargetWithEvents['removeEventListener']>\n  ) {\n    return function (this: TargetWithEvents, event, listener) {\n      if (\n        target.__ot_listeners === undefined ||\n        target.__ot_listeners[event] === undefined\n      ) {\n        return original.call(this, event, listener);\n      }\n      const events = target.__ot_listeners[event];\n      const patchedListener = events.get(listener);\n      events.delete(listener);\n      return original.call(this, event, patchedListener || listener);\n    } as TargetWithEvents['removeEventListener'];\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    if (!this._enabled) {\n      return ROOT_CONTEXT;\n    }\n    const activeZone = this._getActiveZone();\n\n    const active = this._activeContextFromZone(activeZone);\n    if (active) {\n      return active;\n    }\n\n    return ROOT_CONTEXT;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T | TargetWithEvents): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    } else if (isListenerObject(target)) {\n      this._bindListener(context, target);\n    }\n    return target as unknown as T;\n  }\n\n  /**\n   * Disable the context manager (clears all the contexts)\n   */\n  disable(): this {\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    this._enabled = true;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context].\n   *     If [context] is undefined then it will use the active context.\n   *     The context will be set as active\n   * @param context A context (span) to be called with provided callback\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const zoneName = this._createZoneName();\n\n    const newZone = this._createZone(zoneName, context);\n\n    return newZone.run(fn, thisArg, args);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * check if an object has addEventListener and removeEventListener functions then it will return true.\n * Generally only called with a `TargetWithEvents` but may be called with an unknown / any.\n * @param obj - The object to check.\n */\nexport function isListenerObject(obj: any = {}): boolean {\n  return (\n    typeof obj.addEventListener === 'function' &&\n    typeof obj.removeEventListener === 'function'\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, createContextKey } from '@opentelemetry/api';\n\nconst SUPPRESS_TRACING_KEY = createContextKey(\n  'OpenTelemetry SDK Context Key SUPPRESS_TRACING'\n);\n\nexport function suppressTracing(context: Context): Context {\n  return context.setValue(SUPPRESS_TRACING_KEY, true);\n}\n\nexport function unsuppressTracing(context: Context): Context {\n  return context.deleteValue(SUPPRESS_TRACING_KEY);\n}\n\nexport function isTracingSuppressed(context: Context): boolean {\n  return context.getValue(SUPPRESS_TRACING_KEY) === true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst VALID_KEY_CHAR_RANGE = '[_0-9a-z-*/]';\nconst VALID_KEY = `[a-z]${VALID_KEY_CHAR_RANGE}{0,255}`;\nconst VALID_VENDOR_KEY = `[a-z0-9]${VALID_KEY_CHAR_RANGE}{0,240}@[a-z]${VALID_KEY_CHAR_RANGE}{0,13}`;\nconst VALID_KEY_REGEX = new RegExp(`^(?:${VALID_KEY}|${VALID_VENDOR_KEY})$`);\nconst VALID_VALUE_BASE_REGEX = /^[ -~]{0,255}[!-~]$/;\nconst INVALID_VALUE_COMMA_EQUAL_REGEX = /,|=/;\n\n/**\n * Key is opaque string up to 256 characters printable. It MUST begin with a\n * lowercase letter, and can only contain lowercase letters a-z, digits 0-9,\n * underscores _, dashes -, asterisks *, and forward slashes /.\n * For multi-tenant vendor scenarios, an at sign (@) can be used to prefix the\n * vendor name. Vendors SHOULD set the tenant ID at the beginning of the key.\n * see https://www.w3.org/TR/trace-context/#key\n */\nexport function validateKey(key: string): boolean {\n  return VALID_KEY_REGEX.test(key);\n}\n\n/**\n * Value is opaque string up to 256 characters printable ASCII RFC0020\n * characters (i.e., the range 0x20 to 0x7E) except comma , and =.\n */\nexport function validateValue(value: string): boolean {\n  return (\n    VALID_VALUE_BASE_REGEX.test(value) &&\n    !INVALID_VALUE_COMMA_EQUAL_REGEX.test(value)\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { validateKey, validateValue } from '../internal/validators';\n\nconst MAX_TRACE_STATE_ITEMS = 32;\nconst MAX_TRACE_STATE_LEN = 512;\nconst LIST_MEMBERS_SEPARATOR = ',';\nconst LIST_MEMBER_KEY_VALUE_SPLITTER = '=';\n\n/**\n * TraceState must be a class and not a simple object type because of the spec\n * requirement (https://www.w3.org/TR/trace-context/#tracestate-field).\n *\n * Here is the list of allowed mutations:\n * - New key-value pair should be added into the beginning of the list\n * - The value of any key can be updated. Modified keys MUST be moved to the\n * beginning of the list.\n */\nexport class TraceState implements api.TraceState {\n  private _internalState: Map<string, string> = new Map();\n\n  constructor(rawTraceState?: string) {\n    if (rawTraceState) this._parse(rawTraceState);\n  }\n\n  set(key: string, value: string): TraceState {\n    // TODO: Benchmark the different approaches(map vs list) and\n    // use the faster one.\n    const traceState = this._clone();\n    if (traceState._internalState.has(key)) {\n      traceState._internalState.delete(key);\n    }\n    traceState._internalState.set(key, value);\n    return traceState;\n  }\n\n  unset(key: string): TraceState {\n    const traceState = this._clone();\n    traceState._internalState.delete(key);\n    return traceState;\n  }\n\n  get(key: string): string | undefined {\n    return this._internalState.get(key);\n  }\n\n  serialize(): string {\n    return this._keys()\n      .reduce((agg: string[], key) => {\n        agg.push(key + LIST_MEMBER_KEY_VALUE_SPLITTER + this.get(key));\n        return agg;\n      }, [])\n      .join(LIST_MEMBERS_SEPARATOR);\n  }\n\n  private _parse(rawTraceState: string) {\n    if (rawTraceState.length > MAX_TRACE_STATE_LEN) return;\n    this._internalState = rawTraceState\n      .split(LIST_MEMBERS_SEPARATOR)\n      .reverse() // Store in reverse so new keys (.set(...)) will be placed at the beginning\n      .reduce((agg: Map<string, string>, part: string) => {\n        const listMember = part.trim(); // Optional Whitespace (OWS) handling\n        const i = listMember.indexOf(LIST_MEMBER_KEY_VALUE_SPLITTER);\n        if (i !== -1) {\n          const key = listMember.slice(0, i);\n          const value = listMember.slice(i + 1, part.length);\n          if (validateKey(key) && validateValue(value)) {\n            agg.set(key, value);\n          } else {\n            // TODO: Consider to add warning log\n          }\n        }\n        return agg;\n      }, new Map());\n\n    // Because of the reverse() requirement, trunc must be done after map is created\n    if (this._internalState.size > MAX_TRACE_STATE_ITEMS) {\n      this._internalState = new Map(\n        Array.from(this._internalState.entries())\n          .reverse() // Use reverse same as original tracestate parse chain\n          .slice(0, MAX_TRACE_STATE_ITEMS)\n      );\n    }\n  }\n\n  private _keys(): string[] {\n    return Array.from(this._internalState.keys()).reverse();\n  }\n\n  private _clone(): TraceState {\n    const traceState = new TraceState();\n    traceState._internalState = new Map(this._internalState);\n    return traceState;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed } from './suppress-tracing';\nimport { TraceState } from './TraceState';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`\n);\n\n/**\n * Parses information from the [traceparent] span tag and converts it into {@link SpanContext}\n * @param traceParent - A meta property that comes from server.\n *     It should be dynamically generated server side to have the server's request trace Id,\n *     a parent span Id that was set on the server's request span,\n *     and the trace flags to indicate the server's sampling decision\n *     (01 = sampled, 00 = not sampled).\n *     for example: '{version}-{traceId}-{spanId}-{sampleDecision}'\n *     For more information see {@link https://www.w3.org/TR/trace-context/}\n */\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n\n/**\n * Propagates {@link SpanContext} through Trace Context format propagation.\n *\n * Based on the Trace Context specification:\n * https://www.w3.org/TR/trace-context/\n */\nexport class W3CTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const spanContext = trace.getSpanContext(context);\n    if (\n      !spanContext ||\n      isTracingSuppressed(context) ||\n      !isSpanContextValid(spanContext)\n    )\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(\n        carrier,\n        TRACE_STATE_HEADER,\n        spanContext.traceState.serialize()\n      );\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n\n    spanContext.isRemote = true;\n\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter } from './Meter';\nimport {\n  BatchObservableCallback,\n  Counter,\n  Gauge,\n  Histogram,\n  MetricAttributes,\n  MetricOptions,\n  Observable,\n  ObservableCallback,\n  ObservableCounter,\n  ObservableGauge,\n  ObservableUpDownCounter,\n  UpDownCounter,\n} from './Metric';\n\n/**\n * NoopMeter is a noop implementation of the {@link Meter} interface. It reuses\n * constant NoopMetrics for all of its methods.\n */\nexport class NoopMeter implements Meter {\n  constructor() {}\n\n  /**\n   * @see {@link Meter.createGauge}\n   */\n  createGauge(_name: string, _options?: MetricOptions): Gauge {\n    return NOOP_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createHistogram}\n   */\n  createHistogram(_name: string, _options?: MetricOptions): Histogram {\n    return NOOP_HISTOGRAM_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createCounter}\n   */\n  createCounter(_name: string, _options?: MetricOptions): Counter {\n    return NOOP_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createUpDownCounter}\n   */\n  createUpDownCounter(_name: string, _options?: MetricOptions): UpDownCounter {\n    return NOOP_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableGauge}\n   */\n  createObservableGauge(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableGauge {\n    return NOOP_OBSERVABLE_GAUGE_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableCounter}\n   */\n  createObservableCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableCounter {\n    return NOOP_OBSERVABLE_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.createObservableUpDownCounter}\n   */\n  createObservableUpDownCounter(\n    _name: string,\n    _options?: MetricOptions\n  ): ObservableUpDownCounter {\n    return NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n  }\n\n  /**\n   * @see {@link Meter.addBatchObservableCallback}\n   */\n  addBatchObservableCallback(\n    _callback: BatchObservableCallback,\n    _observables: Observable[]\n  ): void {}\n\n  /**\n   * @see {@link Meter.removeBatchObservableCallback}\n   */\n  removeBatchObservableCallback(_callback: BatchObservableCallback): void {}\n}\n\nexport class NoopMetric {}\n\nexport class NoopCounterMetric extends NoopMetric implements Counter {\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopUpDownCounterMetric\n  extends NoopMetric\n  implements UpDownCounter\n{\n  add(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopGaugeMetric extends NoopMetric implements Gauge {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopHistogramMetric extends NoopMetric implements Histogram {\n  record(_value: number, _attributes: MetricAttributes): void {}\n}\n\nexport class NoopObservableMetric {\n  addCallback(_callback: ObservableCallback) {}\n\n  removeCallback(_callback: ObservableCallback) {}\n}\n\nexport class NoopObservableCounterMetric\n  extends NoopObservableMetric\n  implements ObservableCounter {}\n\nexport class NoopObservableGaugeMetric\n  extends NoopObservableMetric\n  implements ObservableGauge {}\n\nexport class NoopObservableUpDownCounterMetric\n  extends NoopObservableMetric\n  implements ObservableUpDownCounter {}\n\nexport const NOOP_METER = new NoopMeter();\n\n// Synchronous instruments\nexport const NOOP_COUNTER_METRIC = new NoopCounterMetric();\nexport const NOOP_GAUGE_METRIC = new NoopGaugeMetric();\nexport const NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric();\nexport const NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric();\n\n// Asynchronous instruments\nexport const NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric();\nexport const NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric();\nexport const NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC =\n  new NoopObservableUpDownCounterMetric();\n\n/**\n * Create a no-op Meter\n */\nexport function createNoopMeter(): Meter {\n  return NOOP_METER;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from './Meter';\nimport { MeterProvider } from './MeterProvider';\nimport { NOOP_METER } from './NoopMeter';\n\n/**\n * An implementation of the {@link MeterProvider} which returns an impotent Meter\n * for all calls to `getMeter`\n */\nexport class NoopMeterProvider implements MeterProvider {\n  getMeter(_name: string, _version?: string, _options?: MeterOptions): Meter {\n    return NOOP_METER;\n  }\n}\n\nexport const NOOP_METER_PROVIDER = new NoopMeterProvider();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Meter, MeterOptions } from '../metrics/Meter';\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { NOOP_METER_PROVIDER } from '../metrics/NoopMeterProvider';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'metrics';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Metrics API\n */\nexport class MetricsAPI {\n  private static _instance?: MetricsAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Metrics API */\n  public static getInstance(): MetricsAPI {\n    if (!this._instance) {\n      this._instance = new MetricsAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global meter provider.\n   * Returns true if the meter provider was successfully registered, else false.\n   */\n  public setGlobalMeterProvider(provider: MeterProvider): boolean {\n    return registerGlobal(API_NAME, provider, DiagAPI.instance());\n  }\n\n  /**\n   * Returns the global meter provider.\n   */\n  public getMeterProvider(): MeterProvider {\n    return getGlobal(API_NAME) || NOOP_METER_PROVIDER;\n  }\n\n  /**\n   * Returns a meter from the global meter provider.\n   */\n  public getMeter(\n    name: string,\n    version?: string,\n    options?: MeterOptions\n  ): Meter {\n    return this.getMeterProvider().getMeter(name, version, options);\n  }\n\n  /** Remove the global meter provider */\n  public disable(): void {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { MetricsAPI } from './api/metrics';\n/** Entrypoint for metrics API */\nexport const metrics = MetricsAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api and\n// @opentelemetry/core too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { _globalThis } from '../platform';\n\nexport const GLOBAL_LOGS_API_KEY = Symbol.for('io.opentelemetry.js.api.logs');\n\ntype Get<T> = (version: number) => T;\ntype OtelGlobal = Partial<{\n  [GLOBAL_LOGS_API_KEY]: Get<LoggerProvider>;\n}>;\n\nexport const _global = _globalThis as OtelGlobal;\n\n/**\n * Make a function which accepts a version integer and returns the instance of an API if the version\n * is compatible, or a fallback version (usually NOOP) if it is not.\n *\n * @param requiredVersion Backwards compatibility version which is required to return the instance\n * @param instance Instance which should be returned if the required version is compatible\n * @param fallback Fallback instance, usually NOOP, which will be returned if the required version is not compatible\n */\nexport function makeGetter<T>(\n  requiredVersion: number,\n  instance: T,\n  fallback: T\n): Get<T> {\n  return (version: number): T =>\n    version === requiredVersion ? instance : fallback;\n}\n\n/**\n * A number which should be incremented each time a backwards incompatible\n * change is made to the API. This number is used when an API package\n * attempts to access the global API to ensure it is getting a compatible\n * version. If the global API is not compatible with the API package\n * attempting to get it, a NOOP API implementation will be returned.\n */\nexport const API_BACKWARDS_COMPATIBILITY_VERSION = 1;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from './types/Logger';\nimport { LogRecord } from './types/LogRecord';\n\nexport class NoopLogger implements Logger {\n  emit(_logRecord: LogRecord): void {}\n}\n\nexport const NOOP_LOGGER = new NoopLogger();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LoggerProvider } from './types/LoggerProvider';\nimport { Logger } from './types/Logger';\nimport { LoggerOptions } from './types/LoggerOptions';\nimport { NoopLogger } from './NoopLogger';\n\nexport class NoopLoggerProvider implements LoggerProvider {\n  getLogger(\n    _name: string,\n    _version?: string | undefined,\n    _options?: LoggerOptions | undefined\n  ): Logger {\n    return new NoopLogger();\n  }\n}\n\nexport const NOOP_LOGGER_PROVIDER = new NoopLoggerProvider();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  API_BACKWARDS_COMPATIBILITY_VERSION,\n  GLOBAL_LOGS_API_KEY,\n  _global,\n  makeGetter,\n} from '../internal/global-utils';\nimport { LoggerProvider } from '../types/LoggerProvider';\nimport { NOOP_LOGGER_PROVIDER } from '../NoopLoggerProvider';\nimport { Logger } from '../types/Logger';\nimport { LoggerOptions } from '../types/LoggerOptions';\n\nexport class LogsAPI {\n  private static _instance?: LogsAPI;\n\n  private constructor() {}\n\n  public static getInstance(): LogsAPI {\n    if (!this._instance) {\n      this._instance = new LogsAPI();\n    }\n\n    return this._instance;\n  }\n\n  public setGlobalLoggerProvider(provider: LoggerProvider): LoggerProvider {\n    if (_global[GLOBAL_LOGS_API_KEY]) {\n      return this.getLoggerProvider();\n    }\n\n    _global[GLOBAL_LOGS_API_KEY] = makeGetter<LoggerProvider>(\n      API_BACKWARDS_COMPATIBILITY_VERSION,\n      provider,\n      NOOP_LOGGER_PROVIDER\n    );\n\n    return provider;\n  }\n\n  /**\n   * Returns the global logger provider.\n   *\n   * @returns LoggerProvider\n   */\n  public getLoggerProvider(): LoggerProvider {\n    return (\n      _global[GLOBAL_LOGS_API_KEY]?.(API_BACKWARDS_COMPATIBILITY_VERSION) ??\n      NOOP_LOGGER_PROVIDER\n    );\n  }\n\n  /**\n   * Returns a logger from the global logger provider.\n   *\n   * @returns Logger\n   */\n  public getLogger(\n    name: string,\n    version?: string,\n    options?: LoggerOptions\n  ): Logger {\n    return this.getLoggerProvider().getLogger(name, version, options);\n  }\n\n  /** Remove the global logger provider */\n  public disable(): void {\n    delete _global[GLOBAL_LOGS_API_KEY];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { Logger } from './types/Logger';\nexport { LoggerProvider } from './types/LoggerProvider';\nexport {\n  LogAttributes,\n  LogBody,\n  LogRecord,\n  SeverityNumber,\n} from './types/LogRecord';\nexport { LoggerOptions } from './types/LoggerOptions';\nexport { AnyValue, AnyValueMap } from './types/AnyValue';\nexport { NOOP_LOGGER, NoopLogger } from './NoopLogger';\nexport { NOOP_LOGGER_PROVIDER, NoopLoggerProvider } from './NoopLoggerProvider';\n\nimport { LogsAPI } from './api/logs';\nexport const logs = LogsAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticResourceAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUD_PROVIDER = 'cloud.provider';\nconst TMP_CLOUD_ACCOUNT_ID = 'cloud.account.id';\nconst TMP_CLOUD_REGION = 'cloud.region';\nconst TMP_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone';\nconst TMP_CLOUD_PLATFORM = 'cloud.platform';\nconst TMP_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn';\nconst TMP_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn';\nconst TMP_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype';\nconst TMP_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn';\nconst TMP_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family';\nconst TMP_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision';\nconst TMP_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn';\nconst TMP_AWS_LOG_GROUP_NAMES = 'aws.log.group.names';\nconst TMP_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns';\nconst TMP_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names';\nconst TMP_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns';\nconst TMP_CONTAINER_NAME = 'container.name';\nconst TMP_CONTAINER_ID = 'container.id';\nconst TMP_CONTAINER_RUNTIME = 'container.runtime';\nconst TMP_CONTAINER_IMAGE_NAME = 'container.image.name';\nconst TMP_CONTAINER_IMAGE_TAG = 'container.image.tag';\nconst TMP_DEPLOYMENT_ENVIRONMENT = 'deployment.environment';\nconst TMP_DEVICE_ID = 'device.id';\nconst TMP_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier';\nconst TMP_DEVICE_MODEL_NAME = 'device.model.name';\nconst TMP_FAAS_NAME = 'faas.name';\nconst TMP_FAAS_ID = 'faas.id';\nconst TMP_FAAS_VERSION = 'faas.version';\nconst TMP_FAAS_INSTANCE = 'faas.instance';\nconst TMP_FAAS_MAX_MEMORY = 'faas.max_memory';\nconst TMP_HOST_ID = 'host.id';\nconst TMP_HOST_NAME = 'host.name';\nconst TMP_HOST_TYPE = 'host.type';\nconst TMP_HOST_ARCH = 'host.arch';\nconst TMP_HOST_IMAGE_NAME = 'host.image.name';\nconst TMP_HOST_IMAGE_ID = 'host.image.id';\nconst TMP_HOST_IMAGE_VERSION = 'host.image.version';\nconst TMP_K8S_CLUSTER_NAME = 'k8s.cluster.name';\nconst TMP_K8S_NODE_NAME = 'k8s.node.name';\nconst TMP_K8S_NODE_UID = 'k8s.node.uid';\nconst TMP_K8S_NAMESPACE_NAME = 'k8s.namespace.name';\nconst TMP_K8S_POD_UID = 'k8s.pod.uid';\nconst TMP_K8S_POD_NAME = 'k8s.pod.name';\nconst TMP_K8S_CONTAINER_NAME = 'k8s.container.name';\nconst TMP_K8S_REPLICASET_UID = 'k8s.replicaset.uid';\nconst TMP_K8S_REPLICASET_NAME = 'k8s.replicaset.name';\nconst TMP_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid';\nconst TMP_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name';\nconst TMP_K8S_STATEFULSET_UID = 'k8s.statefulset.uid';\nconst TMP_K8S_STATEFULSET_NAME = 'k8s.statefulset.name';\nconst TMP_K8S_DAEMONSET_UID = 'k8s.daemonset.uid';\nconst TMP_K8S_DAEMONSET_NAME = 'k8s.daemonset.name';\nconst TMP_K8S_JOB_UID = 'k8s.job.uid';\nconst TMP_K8S_JOB_NAME = 'k8s.job.name';\nconst TMP_K8S_CRONJOB_UID = 'k8s.cronjob.uid';\nconst TMP_K8S_CRONJOB_NAME = 'k8s.cronjob.name';\nconst TMP_OS_TYPE = 'os.type';\nconst TMP_OS_DESCRIPTION = 'os.description';\nconst TMP_OS_NAME = 'os.name';\nconst TMP_OS_VERSION = 'os.version';\nconst TMP_PROCESS_PID = 'process.pid';\nconst TMP_PROCESS_EXECUTABLE_NAME = 'process.executable.name';\nconst TMP_PROCESS_EXECUTABLE_PATH = 'process.executable.path';\nconst TMP_PROCESS_COMMAND = 'process.command';\nconst TMP_PROCESS_COMMAND_LINE = 'process.command_line';\nconst TMP_PROCESS_COMMAND_ARGS = 'process.command_args';\nconst TMP_PROCESS_OWNER = 'process.owner';\nconst TMP_PROCESS_RUNTIME_NAME = 'process.runtime.name';\nconst TMP_PROCESS_RUNTIME_VERSION = 'process.runtime.version';\nconst TMP_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description';\nconst TMP_SERVICE_NAME = 'service.name';\nconst TMP_SERVICE_NAMESPACE = 'service.namespace';\nconst TMP_SERVICE_INSTANCE_ID = 'service.instance.id';\nconst TMP_SERVICE_VERSION = 'service.version';\nconst TMP_TELEMETRY_SDK_NAME = 'telemetry.sdk.name';\nconst TMP_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language';\nconst TMP_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version';\nconst TMP_TELEMETRY_AUTO_VERSION = 'telemetry.auto.version';\nconst TMP_WEBENGINE_NAME = 'webengine.name';\nconst TMP_WEBENGINE_VERSION = 'webengine.version';\nconst TMP_WEBENGINE_DESCRIPTION = 'webengine.description';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use ATTR_CLOUD_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PROVIDER = TMP_CLOUD_PROVIDER;\n\n/**\n * The cloud account ID the resource is assigned to.\n *\n * @deprecated Use ATTR_CLOUD_ACCOUNT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_ACCOUNT_ID = TMP_CLOUD_ACCOUNT_ID;\n\n/**\n * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n *\n * @deprecated Use ATTR_CLOUD_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_REGION = TMP_CLOUD_REGION;\n\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n *\n * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n *\n * @deprecated Use ATTR_CLOUD_AVAILABILITY_ZONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_AVAILABILITY_ZONE = TMP_CLOUD_AVAILABILITY_ZONE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use ATTR_CLOUD_PLATFORM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CLOUD_PLATFORM = TMP_CLOUD_PLATFORM;\n\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CONTAINER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CONTAINER_ARN = TMP_AWS_ECS_CONTAINER_ARN;\n\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n *\n * @deprecated Use ATTR_AWS_ECS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_CLUSTER_ARN = TMP_AWS_ECS_CLUSTER_ARN;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use ATTR_AWS_ECS_LAUNCHTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_LAUNCHTYPE = TMP_AWS_ECS_LAUNCHTYPE;\n\n/**\n * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_ARN = TMP_AWS_ECS_TASK_ARN;\n\n/**\n * The task definition family this task definition is a member of.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_FAMILY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_FAMILY = TMP_AWS_ECS_TASK_FAMILY;\n\n/**\n * The revision for this task definition.\n *\n * @deprecated Use ATTR_AWS_ECS_TASK_REVISION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_ECS_TASK_REVISION = TMP_AWS_ECS_TASK_REVISION;\n\n/**\n * The ARN of an EKS cluster.\n *\n * @deprecated Use ATTR_AWS_EKS_CLUSTER_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_EKS_CLUSTER_ARN = TMP_AWS_EKS_CLUSTER_ARN;\n\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n *\n * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_NAMES = TMP_AWS_LOG_GROUP_NAMES;\n\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n *\n * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n *\n * @deprecated Use ATTR_AWS_LOG_GROUP_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_GROUP_ARNS = TMP_AWS_LOG_GROUP_ARNS;\n\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_NAMES = TMP_AWS_LOG_STREAM_NAMES;\n\n/**\n * The ARN(s) of the AWS log stream(s).\n *\n * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n *\n * @deprecated Use ATTR_AWS_LOG_STREAM_ARNS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_AWS_LOG_STREAM_ARNS = TMP_AWS_LOG_STREAM_ARNS;\n\n/**\n * Container name.\n *\n * @deprecated Use ATTR_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_NAME = TMP_CONTAINER_NAME;\n\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n *\n * @deprecated Use ATTR_CONTAINER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_ID = TMP_CONTAINER_ID;\n\n/**\n * The container runtime managing this container.\n *\n * @deprecated Use ATTR_CONTAINER_RUNTIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_RUNTIME = TMP_CONTAINER_RUNTIME;\n\n/**\n * Name of the image the container was built on.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_NAME = TMP_CONTAINER_IMAGE_NAME;\n\n/**\n * Container image tag.\n *\n * @deprecated Use ATTR_CONTAINER_IMAGE_TAGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_CONTAINER_IMAGE_TAG = TMP_CONTAINER_IMAGE_TAG;\n\n/**\n * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n *\n * @deprecated Use ATTR_DEPLOYMENT_ENVIRONMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEPLOYMENT_ENVIRONMENT = TMP_DEPLOYMENT_ENVIRONMENT;\n\n/**\n * A unique identifier representing the device.\n *\n * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n *\n * @deprecated Use ATTR_DEVICE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_ID = TMP_DEVICE_ID;\n\n/**\n * The model identifier for the device.\n *\n * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_IDENTIFIER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_IDENTIFIER = TMP_DEVICE_MODEL_IDENTIFIER;\n\n/**\n * The marketing name for the device model.\n *\n * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n *\n * @deprecated Use ATTR_DEVICE_MODEL_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_DEVICE_MODEL_NAME = TMP_DEVICE_MODEL_NAME;\n\n/**\n * The name of the single function that this runtime instance executes.\n *\n * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n *\n * @deprecated Use ATTR_FAAS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_NAME = TMP_FAAS_NAME;\n\n/**\n* The unique ID of the single function that this runtime instance executes.\n*\n* Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n*\n* @deprecated Use ATTR_CLOUD_RESOURCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_ID = TMP_FAAS_ID;\n\n/**\n* The immutable version of the function being executed.\n*\n* Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n*\n* @deprecated Use ATTR_FAAS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMRESATTRS_FAAS_VERSION = TMP_FAAS_VERSION;\n\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n *\n * Note: * **AWS Lambda:** Use the (full) log stream name.\n *\n * @deprecated Use ATTR_FAAS_INSTANCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_INSTANCE = TMP_FAAS_INSTANCE;\n\n/**\n * The amount of memory available to the serverless function in MiB.\n *\n * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n *\n * @deprecated Use ATTR_FAAS_MAX_MEMORY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_FAAS_MAX_MEMORY = TMP_FAAS_MAX_MEMORY;\n\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n *\n * @deprecated Use ATTR_HOST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ID = TMP_HOST_ID;\n\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n *\n * @deprecated Use ATTR_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_NAME = TMP_HOST_NAME;\n\n/**\n * Type of host. For Cloud, this must be the machine type.\n *\n * @deprecated Use ATTR_HOST_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_TYPE = TMP_HOST_TYPE;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use ATTR_HOST_ARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_ARCH = TMP_HOST_ARCH;\n\n/**\n * Name of the VM image or OS install the host was instantiated from.\n *\n * @deprecated Use ATTR_HOST_IMAGE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_NAME = TMP_HOST_IMAGE_NAME;\n\n/**\n * VM image ID. For Cloud, this value is from the provider.\n *\n * @deprecated Use ATTR_HOST_IMAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_ID = TMP_HOST_IMAGE_ID;\n\n/**\n * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n *\n * @deprecated Use ATTR_HOST_IMAGE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_HOST_IMAGE_VERSION = TMP_HOST_IMAGE_VERSION;\n\n/**\n * The name of the cluster.\n *\n * @deprecated Use ATTR_K8S_CLUSTER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CLUSTER_NAME = TMP_K8S_CLUSTER_NAME;\n\n/**\n * The name of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_NAME = TMP_K8S_NODE_NAME;\n\n/**\n * The UID of the Node.\n *\n * @deprecated Use ATTR_K8S_NODE_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NODE_UID = TMP_K8S_NODE_UID;\n\n/**\n * The name of the namespace that the pod is running in.\n *\n * @deprecated Use ATTR_K8S_NAMESPACE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_NAMESPACE_NAME = TMP_K8S_NAMESPACE_NAME;\n\n/**\n * The UID of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_UID = TMP_K8S_POD_UID;\n\n/**\n * The name of the Pod.\n *\n * @deprecated Use ATTR_K8S_POD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_POD_NAME = TMP_K8S_POD_NAME;\n\n/**\n * The name of the Container in a Pod template.\n *\n * @deprecated Use ATTR_K8S_CONTAINER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CONTAINER_NAME = TMP_K8S_CONTAINER_NAME;\n\n/**\n * The UID of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_UID = TMP_K8S_REPLICASET_UID;\n\n/**\n * The name of the ReplicaSet.\n *\n * @deprecated Use ATTR_K8S_REPLICASET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_REPLICASET_NAME = TMP_K8S_REPLICASET_NAME;\n\n/**\n * The UID of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_UID = TMP_K8S_DEPLOYMENT_UID;\n\n/**\n * The name of the Deployment.\n *\n * @deprecated Use ATTR_K8S_DEPLOYMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DEPLOYMENT_NAME = TMP_K8S_DEPLOYMENT_NAME;\n\n/**\n * The UID of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_UID = TMP_K8S_STATEFULSET_UID;\n\n/**\n * The name of the StatefulSet.\n *\n * @deprecated Use ATTR_K8S_STATEFULSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_STATEFULSET_NAME = TMP_K8S_STATEFULSET_NAME;\n\n/**\n * The UID of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_UID = TMP_K8S_DAEMONSET_UID;\n\n/**\n * The name of the DaemonSet.\n *\n * @deprecated Use ATTR_K8S_DAEMONSET_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_DAEMONSET_NAME = TMP_K8S_DAEMONSET_NAME;\n\n/**\n * The UID of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_UID = TMP_K8S_JOB_UID;\n\n/**\n * The name of the Job.\n *\n * @deprecated Use ATTR_K8S_JOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_JOB_NAME = TMP_K8S_JOB_NAME;\n\n/**\n * The UID of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_UID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_UID = TMP_K8S_CRONJOB_UID;\n\n/**\n * The name of the CronJob.\n *\n * @deprecated Use ATTR_K8S_CRONJOB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_K8S_CRONJOB_NAME = TMP_K8S_CRONJOB_NAME;\n\n/**\n * The operating system type.\n *\n * @deprecated Use ATTR_OS_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_TYPE = TMP_OS_TYPE;\n\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n *\n * @deprecated Use ATTR_OS_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_DESCRIPTION = TMP_OS_DESCRIPTION;\n\n/**\n * Human readable operating system name.\n *\n * @deprecated Use ATTR_OS_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_NAME = TMP_OS_NAME;\n\n/**\n * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n *\n * @deprecated Use ATTR_OS_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_OS_VERSION = TMP_OS_VERSION;\n\n/**\n * Process identifier (PID).\n *\n * @deprecated Use ATTR_PROCESS_PID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_PID = TMP_PROCESS_PID;\n\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_NAME = TMP_PROCESS_EXECUTABLE_NAME;\n\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n *\n * @deprecated Use ATTR_PROCESS_EXECUTABLE_PATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_EXECUTABLE_PATH = TMP_PROCESS_EXECUTABLE_PATH;\n\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND = TMP_PROCESS_COMMAND;\n\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_LINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_LINE = TMP_PROCESS_COMMAND_LINE;\n\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n *\n * @deprecated Use ATTR_PROCESS_COMMAND_ARGS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_COMMAND_ARGS = TMP_PROCESS_COMMAND_ARGS;\n\n/**\n * The username of the user that owns the process.\n *\n * @deprecated Use ATTR_PROCESS_OWNER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_OWNER = TMP_PROCESS_OWNER;\n\n/**\n * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_NAME = TMP_PROCESS_RUNTIME_NAME;\n\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_VERSION = TMP_PROCESS_RUNTIME_VERSION;\n\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n *\n * @deprecated Use ATTR_PROCESS_RUNTIME_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_PROCESS_RUNTIME_DESCRIPTION =\n  TMP_PROCESS_RUNTIME_DESCRIPTION;\n\n/**\n * Logical name of the service.\n *\n * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n *\n * @deprecated Use ATTR_SERVICE_NAME.\n */\nexport const SEMRESATTRS_SERVICE_NAME = TMP_SERVICE_NAME;\n\n/**\n * A namespace for `service.name`.\n *\n * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n *\n * @deprecated Use ATTR_SERVICE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_NAMESPACE = TMP_SERVICE_NAMESPACE;\n\n/**\n * The string ID of the service instance.\n *\n * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n *\n * @deprecated Use ATTR_SERVICE_INSTANCE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_SERVICE_INSTANCE_ID = TMP_SERVICE_INSTANCE_ID;\n\n/**\n * The version string of the service API or implementation.\n *\n * @deprecated Use ATTR_SERVICE_VERSION.\n */\nexport const SEMRESATTRS_SERVICE_VERSION = TMP_SERVICE_VERSION;\n\n/**\n * The name of the telemetry SDK as defined above.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_NAME.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_NAME = TMP_TELEMETRY_SDK_NAME;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_LANGUAGE.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_LANGUAGE = TMP_TELEMETRY_SDK_LANGUAGE;\n\n/**\n * The version string of the telemetry SDK.\n *\n * @deprecated Use ATTR_TELEMETRY_SDK_VERSION.\n */\nexport const SEMRESATTRS_TELEMETRY_SDK_VERSION = TMP_TELEMETRY_SDK_VERSION;\n\n/**\n * The version string of the auto instrumentation agent, if used.\n *\n * @deprecated Use ATTR_TELEMETRY_DISTRO_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_TELEMETRY_AUTO_VERSION = TMP_TELEMETRY_AUTO_VERSION;\n\n/**\n * The name of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_NAME = TMP_WEBENGINE_NAME;\n\n/**\n * The version of the web engine.\n *\n * @deprecated Use ATTR_WEBENGINE_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_VERSION = TMP_WEBENGINE_VERSION;\n\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n *\n * @deprecated Use ATTR_WEBENGINE_DESCRIPTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMRESATTRS_WEBENGINE_DESCRIPTION = TMP_WEBENGINE_DESCRIPTION;\n\n/**\n * Definition of available values for SemanticResourceAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticResourceAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification.\n */\nexport type SemanticResourceAttributes = {\n  /**\n   * Name of the cloud provider.\n   */\n  CLOUD_PROVIDER: 'cloud.provider';\n\n  /**\n   * The cloud account ID the resource is assigned to.\n   */\n  CLOUD_ACCOUNT_ID: 'cloud.account.id';\n\n  /**\n   * The geographical region the resource is running. Refer to your provider&#39;s docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/en-us/global-infrastructure/geographies/), or [Google Cloud regions](https://cloud.google.com/about/locations).\n   */\n  CLOUD_REGION: 'cloud.region';\n\n  /**\n   * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n   *\n   * Note: Availability zones are called &#34;zones&#34; on Alibaba Cloud and Google Cloud.\n   */\n  CLOUD_AVAILABILITY_ZONE: 'cloud.availability_zone';\n\n  /**\n   * The cloud platform in use.\n   *\n   * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n   */\n  CLOUD_PLATFORM: 'cloud.platform';\n\n  /**\n   * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n   */\n  AWS_ECS_CONTAINER_ARN: 'aws.ecs.container.arn';\n\n  /**\n   * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n   */\n  AWS_ECS_CLUSTER_ARN: 'aws.ecs.cluster.arn';\n\n  /**\n   * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n   */\n  AWS_ECS_LAUNCHTYPE: 'aws.ecs.launchtype';\n\n  /**\n   * The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).\n   */\n  AWS_ECS_TASK_ARN: 'aws.ecs.task.arn';\n\n  /**\n   * The task definition family this task definition is a member of.\n   */\n  AWS_ECS_TASK_FAMILY: 'aws.ecs.task.family';\n\n  /**\n   * The revision for this task definition.\n   */\n  AWS_ECS_TASK_REVISION: 'aws.ecs.task.revision';\n\n  /**\n   * The ARN of an EKS cluster.\n   */\n  AWS_EKS_CLUSTER_ARN: 'aws.eks.cluster.arn';\n\n  /**\n   * The name(s) of the AWS log group(s) an application is writing to.\n   *\n   * Note: Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n   */\n  AWS_LOG_GROUP_NAMES: 'aws.log.group.names';\n\n  /**\n   * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n   *\n   * Note: See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n   */\n  AWS_LOG_GROUP_ARNS: 'aws.log.group.arns';\n\n  /**\n   * The name(s) of the AWS log stream(s) an application is writing to.\n   */\n  AWS_LOG_STREAM_NAMES: 'aws.log.stream.names';\n\n  /**\n   * The ARN(s) of the AWS log stream(s).\n   *\n   * Note: See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n   */\n  AWS_LOG_STREAM_ARNS: 'aws.log.stream.arns';\n\n  /**\n   * Container name.\n   */\n  CONTAINER_NAME: 'container.name';\n\n  /**\n   * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.\n   */\n  CONTAINER_ID: 'container.id';\n\n  /**\n   * The container runtime managing this container.\n   */\n  CONTAINER_RUNTIME: 'container.runtime';\n\n  /**\n   * Name of the image the container was built on.\n   */\n  CONTAINER_IMAGE_NAME: 'container.image.name';\n\n  /**\n   * Container image tag.\n   */\n  CONTAINER_IMAGE_TAG: 'container.image.tag';\n\n  /**\n   * Name of the [deployment environment](https://en.wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n   */\n  DEPLOYMENT_ENVIRONMENT: 'deployment.environment';\n\n  /**\n   * A unique identifier representing the device.\n   *\n   * Note: The device identifier MUST only be defined using the values outlined below. This value is not an advertising identifier and MUST NOT be used as such. On iOS (Swift or Objective-C), this value MUST be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value MUST be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n   */\n  DEVICE_ID: 'device.id';\n\n  /**\n   * The model identifier for the device.\n   *\n   * Note: It&#39;s recommended this value represents a machine readable version of the model identifier rather than the market or consumer-friendly name of the device.\n   */\n  DEVICE_MODEL_IDENTIFIER: 'device.model.identifier';\n\n  /**\n   * The marketing name for the device model.\n   *\n   * Note: It&#39;s recommended this value represents a human readable version of the device model rather than a machine readable alternative.\n   */\n  DEVICE_MODEL_NAME: 'device.model.name';\n\n  /**\n   * The name of the single function that this runtime instance executes.\n   *\n   * Note: This is the name of the function as configured/deployed on the FaaS platform and is usually different from the name of the callback function (which may be stored in the [`code.namespace`/`code.function`](../../trace/semantic_conventions/span-general.md#source-code-attributes) span attributes).\n   */\n  FAAS_NAME: 'faas.name';\n\n  /**\n  * The unique ID of the single function that this runtime instance executes.\n  *\n  * Note: Depending on the cloud provider, use:\n\n* **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\nTake care not to use the &#34;invoked ARN&#34; directly but replace any\n[alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html) with the resolved function version, as the same runtime instance may be invokable with multiple\ndifferent aliases.\n* **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n* **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/en-us/rest/api/resources/resources/get-by-id).\n\nOn some providers, it may not be possible to determine the full ID at startup,\nwhich is why this field cannot be made required. For example, on AWS the account ID\npart of the ARN is not available without calling another AWS API\nwhich may be deemed too slow for a short-running lambda function.\nAs an alternative, consider setting `faas.id` as a span attribute instead.\n  */\n  FAAS_ID: 'faas.id';\n\n  /**\n  * The immutable version of the function being executed.\n  *\n  * Note: Depending on the cloud provider and platform, use:\n\n* **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n  (an integer represented as a decimal string).\n* **Google Cloud Run:** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n  (i.e., the function name plus the revision suffix).\n* **Google Cloud Functions:** The value of the\n  [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n* **Azure Functions:** Not applicable. Do not set this attribute.\n  */\n  FAAS_VERSION: 'faas.version';\n\n  /**\n   * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n   *\n   * Note: * **AWS Lambda:** Use the (full) log stream name.\n   */\n  FAAS_INSTANCE: 'faas.instance';\n\n  /**\n   * The amount of memory available to the serverless function in MiB.\n   *\n   * Note: It&#39;s recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information.\n   */\n  FAAS_MAX_MEMORY: 'faas.max_memory';\n\n  /**\n   * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider.\n   */\n  HOST_ID: 'host.id';\n\n  /**\n   * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n   */\n  HOST_NAME: 'host.name';\n\n  /**\n   * Type of host. For Cloud, this must be the machine type.\n   */\n  HOST_TYPE: 'host.type';\n\n  /**\n   * The CPU architecture the host system is running on.\n   */\n  HOST_ARCH: 'host.arch';\n\n  /**\n   * Name of the VM image or OS install the host was instantiated from.\n   */\n  HOST_IMAGE_NAME: 'host.image.name';\n\n  /**\n   * VM image ID. For Cloud, this value is from the provider.\n   */\n  HOST_IMAGE_ID: 'host.image.id';\n\n  /**\n   * The version string of the VM image as defined in [Version Attributes](README.md#version-attributes).\n   */\n  HOST_IMAGE_VERSION: 'host.image.version';\n\n  /**\n   * The name of the cluster.\n   */\n  K8S_CLUSTER_NAME: 'k8s.cluster.name';\n\n  /**\n   * The name of the Node.\n   */\n  K8S_NODE_NAME: 'k8s.node.name';\n\n  /**\n   * The UID of the Node.\n   */\n  K8S_NODE_UID: 'k8s.node.uid';\n\n  /**\n   * The name of the namespace that the pod is running in.\n   */\n  K8S_NAMESPACE_NAME: 'k8s.namespace.name';\n\n  /**\n   * The UID of the Pod.\n   */\n  K8S_POD_UID: 'k8s.pod.uid';\n\n  /**\n   * The name of the Pod.\n   */\n  K8S_POD_NAME: 'k8s.pod.name';\n\n  /**\n   * The name of the Container in a Pod template.\n   */\n  K8S_CONTAINER_NAME: 'k8s.container.name';\n\n  /**\n   * The UID of the ReplicaSet.\n   */\n  K8S_REPLICASET_UID: 'k8s.replicaset.uid';\n\n  /**\n   * The name of the ReplicaSet.\n   */\n  K8S_REPLICASET_NAME: 'k8s.replicaset.name';\n\n  /**\n   * The UID of the Deployment.\n   */\n  K8S_DEPLOYMENT_UID: 'k8s.deployment.uid';\n\n  /**\n   * The name of the Deployment.\n   */\n  K8S_DEPLOYMENT_NAME: 'k8s.deployment.name';\n\n  /**\n   * The UID of the StatefulSet.\n   */\n  K8S_STATEFULSET_UID: 'k8s.statefulset.uid';\n\n  /**\n   * The name of the StatefulSet.\n   */\n  K8S_STATEFULSET_NAME: 'k8s.statefulset.name';\n\n  /**\n   * The UID of the DaemonSet.\n   */\n  K8S_DAEMONSET_UID: 'k8s.daemonset.uid';\n\n  /**\n   * The name of the DaemonSet.\n   */\n  K8S_DAEMONSET_NAME: 'k8s.daemonset.name';\n\n  /**\n   * The UID of the Job.\n   */\n  K8S_JOB_UID: 'k8s.job.uid';\n\n  /**\n   * The name of the Job.\n   */\n  K8S_JOB_NAME: 'k8s.job.name';\n\n  /**\n   * The UID of the CronJob.\n   */\n  K8S_CRONJOB_UID: 'k8s.cronjob.uid';\n\n  /**\n   * The name of the CronJob.\n   */\n  K8S_CRONJOB_NAME: 'k8s.cronjob.name';\n\n  /**\n   * The operating system type.\n   */\n  OS_TYPE: 'os.type';\n\n  /**\n   * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n   */\n  OS_DESCRIPTION: 'os.description';\n\n  /**\n   * Human readable operating system name.\n   */\n  OS_NAME: 'os.name';\n\n  /**\n   * The version string of the operating system as defined in [Version Attributes](../../resource/semantic_conventions/README.md#version-attributes).\n   */\n  OS_VERSION: 'os.version';\n\n  /**\n   * Process identifier (PID).\n   */\n  PROCESS_PID: 'process.pid';\n\n  /**\n   * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_NAME: 'process.executable.name';\n\n  /**\n   * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n   */\n  PROCESS_EXECUTABLE_PATH: 'process.executable.path';\n\n  /**\n   * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n   */\n  PROCESS_COMMAND: 'process.command';\n\n  /**\n   * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n   */\n  PROCESS_COMMAND_LINE: 'process.command_line';\n\n  /**\n   * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n   */\n  PROCESS_COMMAND_ARGS: 'process.command_args';\n\n  /**\n   * The username of the user that owns the process.\n   */\n  PROCESS_OWNER: 'process.owner';\n\n  /**\n   * The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.\n   */\n  PROCESS_RUNTIME_NAME: 'process.runtime.name';\n\n  /**\n   * The version of the runtime of this process, as returned by the runtime without modification.\n   */\n  PROCESS_RUNTIME_VERSION: 'process.runtime.version';\n\n  /**\n   * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n   */\n  PROCESS_RUNTIME_DESCRIPTION: 'process.runtime.description';\n\n  /**\n   * Logical name of the service.\n   *\n   * Note: MUST be the same for all instances of horizontally scaled services. If the value was not specified, SDKs MUST fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md#process), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value MUST be set to `unknown_service`.\n   */\n  SERVICE_NAME: 'service.name';\n\n  /**\n   * A namespace for `service.name`.\n   *\n   * Note: A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n   */\n  SERVICE_NAMESPACE: 'service.namespace';\n\n  /**\n   * The string ID of the service instance.\n   *\n   * Note: MUST be unique for each instance of the same `service.namespace,service.name` pair (in other words `service.namespace,service.name,service.instance.id` triplet MUST be globally unique). The ID helps to distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled service). It is preferable for the ID to be persistent and stay the same for the lifetime of the service instance, however it is acceptable that the ID is ephemeral and changes during important lifetime events for the service (e.g. service restarts). If the service has no inherent unique ID that can be used as the value of this attribute it is recommended to generate a random Version 1 or Version 4 RFC 4122 UUID (services aiming for reproducible UUIDs may also use Version 5, see RFC 4122 for more recommendations).\n   */\n  SERVICE_INSTANCE_ID: 'service.instance.id';\n\n  /**\n   * The version string of the service API or implementation.\n   */\n  SERVICE_VERSION: 'service.version';\n\n  /**\n   * The name of the telemetry SDK as defined above.\n   */\n  TELEMETRY_SDK_NAME: 'telemetry.sdk.name';\n\n  /**\n   * The language of the telemetry SDK.\n   */\n  TELEMETRY_SDK_LANGUAGE: 'telemetry.sdk.language';\n\n  /**\n   * The version string of the telemetry SDK.\n   */\n  TELEMETRY_SDK_VERSION: 'telemetry.sdk.version';\n\n  /**\n   * The version string of the auto instrumentation agent, if used.\n   */\n  TELEMETRY_AUTO_VERSION: 'telemetry.auto.version';\n\n  /**\n   * The name of the web engine.\n   */\n  WEBENGINE_NAME: 'webengine.name';\n\n  /**\n   * The version of the web engine.\n   */\n  WEBENGINE_VERSION: 'webengine.version';\n\n  /**\n   * Additional description of the web engine (e.g. detailed version and edition information).\n   */\n  WEBENGINE_DESCRIPTION: 'webengine.description';\n};\n\n/**\n * Create exported Value Map for SemanticResourceAttributes values\n * @deprecated Use the SEMRESATTRS_XXXXX constants rather than the SemanticResourceAttributes.XXXXX for bundle minification\n */\nexport const SemanticResourceAttributes: SemanticResourceAttributes =\n  /*#__PURE__*/ createConstMap<SemanticResourceAttributes>([\n    TMP_CLOUD_PROVIDER,\n    TMP_CLOUD_ACCOUNT_ID,\n    TMP_CLOUD_REGION,\n    TMP_CLOUD_AVAILABILITY_ZONE,\n    TMP_CLOUD_PLATFORM,\n    TMP_AWS_ECS_CONTAINER_ARN,\n    TMP_AWS_ECS_CLUSTER_ARN,\n    TMP_AWS_ECS_LAUNCHTYPE,\n    TMP_AWS_ECS_TASK_ARN,\n    TMP_AWS_ECS_TASK_FAMILY,\n    TMP_AWS_ECS_TASK_REVISION,\n    TMP_AWS_EKS_CLUSTER_ARN,\n    TMP_AWS_LOG_GROUP_NAMES,\n    TMP_AWS_LOG_GROUP_ARNS,\n    TMP_AWS_LOG_STREAM_NAMES,\n    TMP_AWS_LOG_STREAM_ARNS,\n    TMP_CONTAINER_NAME,\n    TMP_CONTAINER_ID,\n    TMP_CONTAINER_RUNTIME,\n    TMP_CONTAINER_IMAGE_NAME,\n    TMP_CONTAINER_IMAGE_TAG,\n    TMP_DEPLOYMENT_ENVIRONMENT,\n    TMP_DEVICE_ID,\n    TMP_DEVICE_MODEL_IDENTIFIER,\n    TMP_DEVICE_MODEL_NAME,\n    TMP_FAAS_NAME,\n    TMP_FAAS_ID,\n    TMP_FAAS_VERSION,\n    TMP_FAAS_INSTANCE,\n    TMP_FAAS_MAX_MEMORY,\n    TMP_HOST_ID,\n    TMP_HOST_NAME,\n    TMP_HOST_TYPE,\n    TMP_HOST_ARCH,\n    TMP_HOST_IMAGE_NAME,\n    TMP_HOST_IMAGE_ID,\n    TMP_HOST_IMAGE_VERSION,\n    TMP_K8S_CLUSTER_NAME,\n    TMP_K8S_NODE_NAME,\n    TMP_K8S_NODE_UID,\n    TMP_K8S_NAMESPACE_NAME,\n    TMP_K8S_POD_UID,\n    TMP_K8S_POD_NAME,\n    TMP_K8S_CONTAINER_NAME,\n    TMP_K8S_REPLICASET_UID,\n    TMP_K8S_REPLICASET_NAME,\n    TMP_K8S_DEPLOYMENT_UID,\n    TMP_K8S_DEPLOYMENT_NAME,\n    TMP_K8S_STATEFULSET_UID,\n    TMP_K8S_STATEFULSET_NAME,\n    TMP_K8S_DAEMONSET_UID,\n    TMP_K8S_DAEMONSET_NAME,\n    TMP_K8S_JOB_UID,\n    TMP_K8S_JOB_NAME,\n    TMP_K8S_CRONJOB_UID,\n    TMP_K8S_CRONJOB_NAME,\n    TMP_OS_TYPE,\n    TMP_OS_DESCRIPTION,\n    TMP_OS_NAME,\n    TMP_OS_VERSION,\n    TMP_PROCESS_PID,\n    TMP_PROCESS_EXECUTABLE_NAME,\n    TMP_PROCESS_EXECUTABLE_PATH,\n    TMP_PROCESS_COMMAND,\n    TMP_PROCESS_COMMAND_LINE,\n    TMP_PROCESS_COMMAND_ARGS,\n    TMP_PROCESS_OWNER,\n    TMP_PROCESS_RUNTIME_NAME,\n    TMP_PROCESS_RUNTIME_VERSION,\n    TMP_PROCESS_RUNTIME_DESCRIPTION,\n    TMP_SERVICE_NAME,\n    TMP_SERVICE_NAMESPACE,\n    TMP_SERVICE_INSTANCE_ID,\n    TMP_SERVICE_VERSION,\n    TMP_TELEMETRY_SDK_NAME,\n    TMP_TELEMETRY_SDK_LANGUAGE,\n    TMP_TELEMETRY_SDK_VERSION,\n    TMP_TELEMETRY_AUTO_VERSION,\n    TMP_WEBENGINE_NAME,\n    TMP_WEBENGINE_VERSION,\n    TMP_WEBENGINE_DESCRIPTION,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_CLOUDPROVIDERVALUES_AWS = 'aws';\nconst TMP_CLOUDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_CLOUDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AWS = TMP_CLOUDPROVIDERVALUES_AWS;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_AZURE = TMP_CLOUDPROVIDERVALUES_AZURE;\n\n/**\n * Name of the cloud provider.\n *\n * @deprecated Use CLOUD_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPROVIDERVALUES_GCP = TMP_CLOUDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for CloudProviderValues enum definition\n *\n * Name of the cloud provider.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport type CloudProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for CloudProviderValues.\n * @deprecated Use the CLOUDPROVIDERVALUES_XXXXX constants rather than the CloudProviderValues.XXXXX for bundle minification.\n */\nexport const CloudProviderValues: CloudProviderValues =\n  /*#__PURE__*/ createConstMap<CloudProviderValues>([\n    TMP_CLOUDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_CLOUDPROVIDERVALUES_AWS,\n    TMP_CLOUDPROVIDERVALUES_AZURE,\n    TMP_CLOUDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS = 'alibaba_cloud_ecs';\nconst TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC = 'alibaba_cloud_fc';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EC2 = 'aws_ec2';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ECS = 'aws_ecs';\nconst TMP_CLOUDPLATFORMVALUES_AWS_EKS = 'aws_eks';\nconst TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA = 'aws_lambda';\nconst TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK = 'aws_elastic_beanstalk';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_VM = 'azure_vm';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  'azure_container_instances';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_AKS = 'azure_aks';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS = 'azure_functions';\nconst TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE = 'azure_app_service';\nconst TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE = 'gcp_compute_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN = 'gcp_cloud_run';\nconst TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE = 'gcp_kubernetes_engine';\nconst TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS = 'gcp_cloud_functions';\nconst TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE = 'gcp_app_engine';\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC =\n  TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EC2 = TMP_CLOUDPLATFORMVALUES_AWS_EC2;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ECS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ECS = TMP_CLOUDPLATFORMVALUES_AWS_ECS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_EKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_EKS = TMP_CLOUDPLATFORMVALUES_AWS_EKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_LAMBDA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_LAMBDA =\n  TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK =\n  TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_VM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_VM = TMP_CLOUDPLATFORMVALUES_AZURE_VM;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES =\n  TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_AKS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_AKS = TMP_CLOUDPLATFORMVALUES_AZURE_AKS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_AZURE_APP_SERVICE =\n  TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_RUN =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS =\n  TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS;\n\n/**\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n *\n * @deprecated Use CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const CLOUDPLATFORMVALUES_GCP_APP_ENGINE =\n  TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE;\n\n/**\n * Identifies the Values for CloudPlatformValues enum definition\n *\n * The cloud platform in use.\n *\n * Note: The prefix of the service SHOULD match the one specified in `cloud.provider`.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport type CloudPlatformValues = {\n  /** Alibaba Cloud Elastic Compute Service. */\n  ALIBABA_CLOUD_ECS: 'alibaba_cloud_ecs';\n\n  /** Alibaba Cloud Function Compute. */\n  ALIBABA_CLOUD_FC: 'alibaba_cloud_fc';\n\n  /** AWS Elastic Compute Cloud. */\n  AWS_EC2: 'aws_ec2';\n\n  /** AWS Elastic Container Service. */\n  AWS_ECS: 'aws_ecs';\n\n  /** AWS Elastic Kubernetes Service. */\n  AWS_EKS: 'aws_eks';\n\n  /** AWS Lambda. */\n  AWS_LAMBDA: 'aws_lambda';\n\n  /** AWS Elastic Beanstalk. */\n  AWS_ELASTIC_BEANSTALK: 'aws_elastic_beanstalk';\n\n  /** Azure Virtual Machines. */\n  AZURE_VM: 'azure_vm';\n\n  /** Azure Container Instances. */\n  AZURE_CONTAINER_INSTANCES: 'azure_container_instances';\n\n  /** Azure Kubernetes Service. */\n  AZURE_AKS: 'azure_aks';\n\n  /** Azure Functions. */\n  AZURE_FUNCTIONS: 'azure_functions';\n\n  /** Azure App Service. */\n  AZURE_APP_SERVICE: 'azure_app_service';\n\n  /** Google Cloud Compute Engine (GCE). */\n  GCP_COMPUTE_ENGINE: 'gcp_compute_engine';\n\n  /** Google Cloud Run. */\n  GCP_CLOUD_RUN: 'gcp_cloud_run';\n\n  /** Google Cloud Kubernetes Engine (GKE). */\n  GCP_KUBERNETES_ENGINE: 'gcp_kubernetes_engine';\n\n  /** Google Cloud Functions (GCF). */\n  GCP_CLOUD_FUNCTIONS: 'gcp_cloud_functions';\n\n  /** Google Cloud App Engine (GAE). */\n  GCP_APP_ENGINE: 'gcp_app_engine';\n};\n\n/**\n * The constant map of values for CloudPlatformValues.\n * @deprecated Use the CLOUDPLATFORMVALUES_XXXXX constants rather than the CloudPlatformValues.XXXXX for bundle minification.\n */\nexport const CloudPlatformValues: CloudPlatformValues =\n  /*#__PURE__*/ createConstMap<CloudPlatformValues>([\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_ECS,\n    TMP_CLOUDPLATFORMVALUES_ALIBABA_CLOUD_FC,\n    TMP_CLOUDPLATFORMVALUES_AWS_EC2,\n    TMP_CLOUDPLATFORMVALUES_AWS_ECS,\n    TMP_CLOUDPLATFORMVALUES_AWS_EKS,\n    TMP_CLOUDPLATFORMVALUES_AWS_LAMBDA,\n    TMP_CLOUDPLATFORMVALUES_AWS_ELASTIC_BEANSTALK,\n    TMP_CLOUDPLATFORMVALUES_AZURE_VM,\n    TMP_CLOUDPLATFORMVALUES_AZURE_CONTAINER_INSTANCES,\n    TMP_CLOUDPLATFORMVALUES_AZURE_AKS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_AZURE_APP_SERVICE,\n    TMP_CLOUDPLATFORMVALUES_GCP_COMPUTE_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_RUN,\n    TMP_CLOUDPLATFORMVALUES_GCP_KUBERNETES_ENGINE,\n    TMP_CLOUDPLATFORMVALUES_GCP_CLOUD_FUNCTIONS,\n    TMP_CLOUDPLATFORMVALUES_GCP_APP_ENGINE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWSECSLAUNCHTYPEVALUES_EC2 = 'ec2';\nconst TMP_AWSECSLAUNCHTYPEVALUES_FARGATE = 'fargate';\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_EC2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_EC2 = TMP_AWSECSLAUNCHTYPEVALUES_EC2;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n *\n * @deprecated Use AWS_ECS_LAUNCHTYPE_VALUE_FARGATE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const AWSECSLAUNCHTYPEVALUES_FARGATE =\n  TMP_AWSECSLAUNCHTYPEVALUES_FARGATE;\n\n/**\n * Identifies the Values for AwsEcsLaunchtypeValues enum definition\n *\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport type AwsEcsLaunchtypeValues = {\n  /** ec2. */\n  EC2: 'ec2';\n\n  /** fargate. */\n  FARGATE: 'fargate';\n};\n\n/**\n * The constant map of values for AwsEcsLaunchtypeValues.\n * @deprecated Use the AWSECSLAUNCHTYPEVALUES_XXXXX constants rather than the AwsEcsLaunchtypeValues.XXXXX for bundle minification.\n */\nexport const AwsEcsLaunchtypeValues: AwsEcsLaunchtypeValues =\n  /*#__PURE__*/ createConstMap<AwsEcsLaunchtypeValues>([\n    TMP_AWSECSLAUNCHTYPEVALUES_EC2,\n    TMP_AWSECSLAUNCHTYPEVALUES_FARGATE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HOSTARCHVALUES_AMD64 = 'amd64';\nconst TMP_HOSTARCHVALUES_ARM32 = 'arm32';\nconst TMP_HOSTARCHVALUES_ARM64 = 'arm64';\nconst TMP_HOSTARCHVALUES_IA64 = 'ia64';\nconst TMP_HOSTARCHVALUES_PPC32 = 'ppc32';\nconst TMP_HOSTARCHVALUES_PPC64 = 'ppc64';\nconst TMP_HOSTARCHVALUES_X86 = 'x86';\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_AMD64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_AMD64 = TMP_HOSTARCHVALUES_AMD64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM32 = TMP_HOSTARCHVALUES_ARM32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_ARM64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_ARM64 = TMP_HOSTARCHVALUES_ARM64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_IA64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_IA64 = TMP_HOSTARCHVALUES_IA64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC32 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC32 = TMP_HOSTARCHVALUES_PPC32;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_PPC64 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_PPC64 = TMP_HOSTARCHVALUES_PPC64;\n\n/**\n * The CPU architecture the host system is running on.\n *\n * @deprecated Use HOST_ARCH_VALUE_X86 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HOSTARCHVALUES_X86 = TMP_HOSTARCHVALUES_X86;\n\n/**\n * Identifies the Values for HostArchValues enum definition\n *\n * The CPU architecture the host system is running on.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport type HostArchValues = {\n  /** AMD64. */\n  AMD64: 'amd64';\n\n  /** ARM32. */\n  ARM32: 'arm32';\n\n  /** ARM64. */\n  ARM64: 'arm64';\n\n  /** Itanium. */\n  IA64: 'ia64';\n\n  /** 32-bit PowerPC. */\n  PPC32: 'ppc32';\n\n  /** 64-bit PowerPC. */\n  PPC64: 'ppc64';\n\n  /** 32-bit x86. */\n  X86: 'x86';\n};\n\n/**\n * The constant map of values for HostArchValues.\n * @deprecated Use the HOSTARCHVALUES_XXXXX constants rather than the HostArchValues.XXXXX for bundle minification.\n */\nexport const HostArchValues: HostArchValues =\n  /*#__PURE__*/ createConstMap<HostArchValues>([\n    TMP_HOSTARCHVALUES_AMD64,\n    TMP_HOSTARCHVALUES_ARM32,\n    TMP_HOSTARCHVALUES_ARM64,\n    TMP_HOSTARCHVALUES_IA64,\n    TMP_HOSTARCHVALUES_PPC32,\n    TMP_HOSTARCHVALUES_PPC64,\n    TMP_HOSTARCHVALUES_X86,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for OsTypeValues enum definition\n *\n * The operating system type.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_OSTYPEVALUES_WINDOWS = 'windows';\nconst TMP_OSTYPEVALUES_LINUX = 'linux';\nconst TMP_OSTYPEVALUES_DARWIN = 'darwin';\nconst TMP_OSTYPEVALUES_FREEBSD = 'freebsd';\nconst TMP_OSTYPEVALUES_NETBSD = 'netbsd';\nconst TMP_OSTYPEVALUES_OPENBSD = 'openbsd';\nconst TMP_OSTYPEVALUES_DRAGONFLYBSD = 'dragonflybsd';\nconst TMP_OSTYPEVALUES_HPUX = 'hpux';\nconst TMP_OSTYPEVALUES_AIX = 'aix';\nconst TMP_OSTYPEVALUES_SOLARIS = 'solaris';\nconst TMP_OSTYPEVALUES_Z_OS = 'z_os';\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_WINDOWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_WINDOWS = TMP_OSTYPEVALUES_WINDOWS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_LINUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_LINUX = TMP_OSTYPEVALUES_LINUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DARWIN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DARWIN = TMP_OSTYPEVALUES_DARWIN;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_FREEBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_FREEBSD = TMP_OSTYPEVALUES_FREEBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_NETBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_NETBSD = TMP_OSTYPEVALUES_NETBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_OPENBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_OPENBSD = TMP_OSTYPEVALUES_OPENBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_DRAGONFLYBSD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_DRAGONFLYBSD = TMP_OSTYPEVALUES_DRAGONFLYBSD;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_HPUX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_HPUX = TMP_OSTYPEVALUES_HPUX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_AIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_AIX = TMP_OSTYPEVALUES_AIX;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_SOLARIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_SOLARIS = TMP_OSTYPEVALUES_SOLARIS;\n\n/**\n * The operating system type.\n *\n * @deprecated Use OS_TYPE_VALUE_Z_OS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const OSTYPEVALUES_Z_OS = TMP_OSTYPEVALUES_Z_OS;\n\n/**\n * Identifies the Values for OsTypeValues enum definition\n *\n * The operating system type.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport type OsTypeValues = {\n  /** Microsoft Windows. */\n  WINDOWS: 'windows';\n\n  /** Linux. */\n  LINUX: 'linux';\n\n  /** Apple Darwin. */\n  DARWIN: 'darwin';\n\n  /** FreeBSD. */\n  FREEBSD: 'freebsd';\n\n  /** NetBSD. */\n  NETBSD: 'netbsd';\n\n  /** OpenBSD. */\n  OPENBSD: 'openbsd';\n\n  /** DragonFly BSD. */\n  DRAGONFLYBSD: 'dragonflybsd';\n\n  /** HP-UX (Hewlett Packard Unix). */\n  HPUX: 'hpux';\n\n  /** AIX (Advanced Interactive eXecutive). */\n  AIX: 'aix';\n\n  /** Oracle Solaris. */\n  SOLARIS: 'solaris';\n\n  /** IBM z/OS. */\n  Z_OS: 'z_os';\n};\n\n/**\n * The constant map of values for OsTypeValues.\n * @deprecated Use the OSTYPEVALUES_XXXXX constants rather than the OsTypeValues.XXXXX for bundle minification.\n */\nexport const OsTypeValues: OsTypeValues =\n  /*#__PURE__*/ createConstMap<OsTypeValues>([\n    TMP_OSTYPEVALUES_WINDOWS,\n    TMP_OSTYPEVALUES_LINUX,\n    TMP_OSTYPEVALUES_DARWIN,\n    TMP_OSTYPEVALUES_FREEBSD,\n    TMP_OSTYPEVALUES_NETBSD,\n    TMP_OSTYPEVALUES_OPENBSD,\n    TMP_OSTYPEVALUES_DRAGONFLYBSD,\n    TMP_OSTYPEVALUES_HPUX,\n    TMP_OSTYPEVALUES_AIX,\n    TMP_OSTYPEVALUES_SOLARIS,\n    TMP_OSTYPEVALUES_Z_OS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_CPP = 'cpp';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET = 'dotnet';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG = 'erlang';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_GO = 'go';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA = 'java';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS = 'nodejs';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PHP = 'php';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON = 'python';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY = 'ruby';\nconst TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS = 'webjs';\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_CPP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_CPP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_CPP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_DOTNET =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_ERLANG =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_GO.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_GO = TMP_TELEMETRYSDKLANGUAGEVALUES_GO;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_JAVA.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_JAVA =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_NODEJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PHP.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PHP =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PHP;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_PYTHON =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_RUBY.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_RUBY =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY;\n\n/**\n * The language of the telemetry SDK.\n *\n * @deprecated Use TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS.\n */\nexport const TELEMETRYSDKLANGUAGEVALUES_WEBJS =\n  TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS;\n\n/**\n * Identifies the Values for TelemetrySdkLanguageValues enum definition\n *\n * The language of the telemetry SDK.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport type TelemetrySdkLanguageValues = {\n  /** cpp. */\n  CPP: 'cpp';\n\n  /** dotnet. */\n  DOTNET: 'dotnet';\n\n  /** erlang. */\n  ERLANG: 'erlang';\n\n  /** go. */\n  GO: 'go';\n\n  /** java. */\n  JAVA: 'java';\n\n  /** nodejs. */\n  NODEJS: 'nodejs';\n\n  /** php. */\n  PHP: 'php';\n\n  /** python. */\n  PYTHON: 'python';\n\n  /** ruby. */\n  RUBY: 'ruby';\n\n  /** webjs. */\n  WEBJS: 'webjs';\n};\n\n/**\n * The constant map of values for TelemetrySdkLanguageValues.\n * @deprecated Use the TELEMETRYSDKLANGUAGEVALUES_XXXXX constants rather than the TelemetrySdkLanguageValues.XXXXX for bundle minification.\n */\nexport const TelemetrySdkLanguageValues: TelemetrySdkLanguageValues =\n  /*#__PURE__*/ createConstMap<TelemetrySdkLanguageValues>([\n    TMP_TELEMETRYSDKLANGUAGEVALUES_CPP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_DOTNET,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_ERLANG,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_GO,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_JAVA,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_NODEJS,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PHP,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_PYTHON,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_RUBY,\n    TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  ]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../../version';\nimport {\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_PROCESS_RUNTIME_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\n\n/** Constants describing the SDK in use */\nexport const SDK_INFO = {\n  [SEMRESATTRS_TELEMETRY_SDK_NAME]: 'opentelemetry',\n  [SEMRESATTRS_PROCESS_RUNTIME_NAME]: 'browser',\n  [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]: TELEMETRYSDKLANGUAGEVALUES_WEBJS,\n  [SEMRESATTRS_TELEMETRY_SDK_VERSION]: VERSION,\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.30.1';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport {\n  SEMRESATTRS_SERVICE_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_LANGUAGE,\n  SEMRESATTRS_TELEMETRY_SDK_NAME,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n} from '@opentelemetry/semantic-conventions';\nimport { SDK_INFO } from '@opentelemetry/core';\nimport { ResourceAttributes } from './types';\nimport { defaultServiceName } from './platform';\nimport { IResource } from './IResource';\n\n/**\n * A Resource describes the entity for which a signals (metrics or trace) are\n * collected.\n */\nexport class Resource implements IResource {\n  static readonly EMPTY = new Resource({});\n  private _syncAttributes?: ResourceAttributes;\n  private _asyncAttributesPromise?: Promise<ResourceAttributes>;\n  private _attributes?: ResourceAttributes;\n\n  /**\n   * Check if async attributes have resolved. This is useful to avoid awaiting\n   * waitForAsyncAttributes (which will introduce asynchronous behavior) when not necessary.\n   *\n   * @returns true if the resource \"attributes\" property is not yet settled to its final value\n   */\n  public asyncAttributesPending?: boolean;\n\n  /**\n   * Returns an empty Resource\n   */\n  static empty(): IResource {\n    return Resource.EMPTY;\n  }\n\n  /**\n   * Returns a Resource that identifies the SDK in use.\n   */\n  static default(): IResource {\n    return new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: defaultServiceName(),\n      [SEMRESATTRS_TELEMETRY_SDK_LANGUAGE]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_LANGUAGE],\n      [SEMRESATTRS_TELEMETRY_SDK_NAME]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_NAME],\n      [SEMRESATTRS_TELEMETRY_SDK_VERSION]:\n        SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION],\n    });\n  }\n\n  constructor(\n    /**\n     * A dictionary of attributes with string keys and values that provide\n     * information about the entity as numbers, strings or booleans\n     * TODO: Consider to add check/validation on attributes.\n     */\n    attributes: ResourceAttributes,\n    asyncAttributesPromise?: Promise<ResourceAttributes>\n  ) {\n    this._attributes = attributes;\n    this.asyncAttributesPending = asyncAttributesPromise != null;\n    this._syncAttributes = this._attributes ?? {};\n    this._asyncAttributesPromise = asyncAttributesPromise?.then(\n      asyncAttributes => {\n        this._attributes = Object.assign({}, this._attributes, asyncAttributes);\n        this.asyncAttributesPending = false;\n        return asyncAttributes;\n      },\n      err => {\n        diag.debug(\"a resource's async attributes promise rejected: %s\", err);\n        this.asyncAttributesPending = false;\n        return {};\n      }\n    );\n  }\n\n  get attributes(): ResourceAttributes {\n    if (this.asyncAttributesPending) {\n      diag.error(\n        'Accessing resource attributes before async attributes settled'\n      );\n    }\n\n    return this._attributes ?? {};\n  }\n\n  /**\n   * Returns a promise that will never be rejected. Resolves when all async attributes have finished being added to\n   * this Resource's attributes. This is useful in exporters to block until resource detection\n   * has finished.\n   */\n  async waitForAsyncAttributes?(): Promise<void> {\n    if (this.asyncAttributesPending) {\n      await this._asyncAttributesPromise;\n    }\n  }\n\n  /**\n   * Returns a new, merged {@link Resource} by merging the current Resource\n   * with the other Resource. In case of a collision, other Resource takes\n   * precedence.\n   *\n   * @param other the Resource that will be merged with this.\n   * @returns the newly merged Resource.\n   */\n  merge(other: IResource | null): IResource {\n    if (!other) return this;\n\n    // SpanAttributes from other resource overwrite attributes from this resource.\n    const mergedSyncAttributes = {\n      ...this._syncAttributes,\n      //Support for old resource implementation where _syncAttributes is not defined\n      ...((other as Resource)._syncAttributes ?? other.attributes),\n    };\n\n    if (\n      !this._asyncAttributesPromise &&\n      !(other as Resource)._asyncAttributesPromise\n    ) {\n      return new Resource(mergedSyncAttributes);\n    }\n\n    const mergedAttributesPromise = Promise.all([\n      this._asyncAttributesPromise,\n      (other as Resource)._asyncAttributesPromise,\n    ]).then(([thisAsyncAttributes, otherAsyncAttributes]) => {\n      return {\n        ...this._syncAttributes,\n        ...thisAsyncAttributes,\n        //Support for old resource implementation where _syncAttributes is not defined\n        ...((other as Resource)._syncAttributes ?? other.attributes),\n        ...otherAsyncAttributes,\n      };\n    });\n\n    return new Resource(mergedSyncAttributes, mergedAttributesPromise);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function defaultServiceName(): string {\n  return 'unknown_service';\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { TextMapPropagator } from './TextMapPropagator';\n\n/**\n * No-op implementations of {@link TextMapPropagator}.\n */\nexport class NoopTextMapPropagator implements TextMapPropagator {\n  /** Noop inject function does nothing */\n  inject(_context: Context, _carrier: unknown): void {}\n  /** Noop extract function does nothing and returns the input context */\n  extract(context: Context, _carrier: unknown): Context {\n    return context;\n  }\n  fields(): string[] {\n    return [];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\n\n/**\n * Injects `Context` into and extracts it from carriers that travel\n * in-band across process boundaries. Encoding is expected to conform to the\n * HTTP Header Field semantics. Values are often encoded as RPC/HTTP request\n * headers.\n *\n * The carrier of propagated data on both the client (injector) and server\n * (extractor) side is usually an object such as http headers. Propagation is\n * usually implemented via library-specific request interceptors, where the\n * client-side injects values and the server-side extracts them.\n */\nexport interface TextMapPropagator<Carrier = any> {\n  /**\n   * Injects values from a given `Context` into a carrier.\n   *\n   * OpenTelemetry defines a common set of format values (TextMapPropagator),\n   * and each has an expected `carrier` type.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param setter an optional {@link TextMapSetter}. If undefined, values will be\n   *     set by direct object assignment.\n   */\n  inject(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier>\n  ): void;\n\n  /**\n   * Given a `Context` and a carrier, extract context values from a\n   * carrier and return a new context, created from the old context, with the\n   * extracted values.\n   *\n   * @param context the Context from which to extract values to transmit over\n   *     the wire.\n   * @param carrier the carrier of propagation fields, such as http request\n   *     headers.\n   * @param getter an optional {@link TextMapGetter}. If undefined, keys will be all\n   *     own properties, and keys will be accessed by direct object access.\n   */\n  extract(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier>\n  ): Context;\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  fields(): string[];\n}\n\n/**\n * A setter is specified by the caller to define a specific method\n * to set key/value pairs on the carrier within a propagator.\n */\nexport interface TextMapSetter<Carrier = any> {\n  /**\n   * Callback used to set a key/value pair on an object.\n   *\n   * Should be called by the propagator each time a key/value pair\n   * should be set, and should set that key/value pair on the propagator.\n   *\n   * @param carrier object or class which carries key/value pairs\n   * @param key string key to modify\n   * @param value value to be set to the key on the carrier\n   */\n  set(carrier: Carrier, key: string, value: string): void;\n}\n\n/**\n * A getter is specified by the caller to define a specific method\n * to get the value of a key from a carrier.\n */\nexport interface TextMapGetter<Carrier = any> {\n  /**\n   * Get a list of all keys available on the carrier.\n   *\n   * @param carrier\n   */\n  keys(carrier: Carrier): string[];\n\n  /**\n   * Get the value of a specific key from the carrier.\n   *\n   * @param carrier\n   * @param key\n   */\n  get(carrier: Carrier, key: string): undefined | string | string[];\n}\n\nexport const defaultTextMapGetter: TextMapGetter = {\n  get(carrier, key) {\n    if (carrier == null) {\n      return undefined;\n    }\n    return carrier[key];\n  },\n\n  keys(carrier) {\n    if (carrier == null) {\n      return [];\n    }\n    return Object.keys(carrier);\n  },\n};\n\nexport const defaultTextMapSetter: TextMapSetter = {\n  set(carrier, key, value) {\n    if (carrier == null) {\n      return;\n    }\n\n    carrier[key] = value;\n  },\n};\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Baggage } from './types';\n\n/**\n * Baggage key\n */\nconst BAGGAGE_KEY = createContextKey('OpenTelemetry Baggage Key');\n\n/**\n * Retrieve the current baggage from the given context\n *\n * @param {Context} Context that manage all context values\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getBaggage(context: Context): Baggage | undefined {\n  return (context.getValue(BAGGAGE_KEY) as Baggage) || undefined;\n}\n\n/**\n * Retrieve the current baggage from the active/current context\n *\n * @returns {Baggage} Extracted baggage from the context\n */\nexport function getActiveBaggage(): Baggage | undefined {\n  return getBaggage(ContextAPI.getInstance().active());\n}\n\n/**\n * Store a baggage in the given context\n *\n * @param {Context} Context that manage all context values\n * @param {Baggage} baggage that will be set in the actual context\n */\nexport function setBaggage(context: Context, baggage: Baggage): Context {\n  return context.setValue(BAGGAGE_KEY, baggage);\n}\n\n/**\n * Delete the baggage stored in the given context\n *\n * @param {Context} Context that manage all context values\n */\nexport function deleteBaggage(context: Context): Context {\n  return context.deleteValue(BAGGAGE_KEY);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Baggage, BaggageEntry } from '../types';\n\nexport class BaggageImpl implements Baggage {\n  private _entries: Map<string, BaggageEntry>;\n\n  constructor(entries?: Map<string, BaggageEntry>) {\n    this._entries = entries ? new Map(entries) : new Map();\n  }\n\n  getEntry(key: string): BaggageEntry | undefined {\n    const entry = this._entries.get(key);\n    if (!entry) {\n      return undefined;\n    }\n\n    return Object.assign({}, entry);\n  }\n\n  getAllEntries(): [string, BaggageEntry][] {\n    return Array.from(this._entries.entries()).map(([k, v]) => [k, v]);\n  }\n\n  setEntry(key: string, entry: BaggageEntry): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.set(key, entry);\n    return newBaggage;\n  }\n\n  removeEntry(key: string): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    newBaggage._entries.delete(key);\n    return newBaggage;\n  }\n\n  removeEntries(...keys: string[]): BaggageImpl {\n    const newBaggage = new BaggageImpl(this._entries);\n    for (const key of keys) {\n      newBaggage._entries.delete(key);\n    }\n    return newBaggage;\n  }\n\n  clear(): BaggageImpl {\n    return new BaggageImpl();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Symbol used to make BaggageEntryMetadata an opaque type\n */\nexport const baggageEntryMetadataSymbol = Symbol('BaggageEntryMetadata');\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagAPI } from '../api/diag';\nimport { BaggageImpl } from './internal/baggage-impl';\nimport { baggageEntryMetadataSymbol } from './internal/symbol';\nimport { Baggage, BaggageEntry, BaggageEntryMetadata } from './types';\n\nconst diag = DiagAPI.instance();\n\n/**\n * Create a new Baggage with optional entries\n *\n * @param entries An array of baggage entries the new baggage should contain\n */\nexport function createBaggage(\n  entries: Record<string, BaggageEntry> = {}\n): Baggage {\n  return new BaggageImpl(new Map(Object.entries(entries)));\n}\n\n/**\n * Create a serializable BaggageEntryMetadata object from a string.\n *\n * @param str string metadata. Format is currently not defined by the spec and has no special meaning.\n *\n */\nexport function baggageEntryMetadataFromString(\n  str: string\n): BaggageEntryMetadata {\n  if (typeof str !== 'string') {\n    diag.error(\n      `Cannot create baggage metadata from unknown type: ${typeof str}`\n    );\n    str = '';\n  }\n\n  return {\n    __TYPE__: baggageEntryMetadataSymbol,\n    toString() {\n      return str;\n    },\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { NoopTextMapPropagator } from '../propagation/NoopTextMapPropagator';\nimport {\n  defaultTextMapGetter,\n  defaultTextMapSetter,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '../propagation/TextMapPropagator';\nimport {\n  getBaggage,\n  getActiveBaggage,\n  setBaggage,\n  deleteBaggage,\n} from '../baggage/context-helpers';\nimport { createBaggage } from '../baggage/utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'propagation';\nconst NOOP_TEXT_MAP_PROPAGATOR = new NoopTextMapPropagator();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Propagation API\n */\nexport class PropagationAPI {\n  private static _instance?: PropagationAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Propagator API */\n  public static getInstance(): PropagationAPI {\n    if (!this._instance) {\n      this._instance = new PropagationAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current propagator.\n   *\n   * @returns true if the propagator was successfully registered, else false\n   */\n  public setGlobalPropagator(propagator: TextMapPropagator): boolean {\n    return registerGlobal(API_NAME, propagator, DiagAPI.instance());\n  }\n\n  /**\n   * Inject context into a carrier to be propagated inter-process\n   *\n   * @param context Context carrying tracing data to inject\n   * @param carrier carrier to inject context into\n   * @param setter Function used to set values on the carrier\n   */\n  public inject<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    setter: TextMapSetter<Carrier> = defaultTextMapSetter\n  ): void {\n    return this._getGlobalPropagator().inject(context, carrier, setter);\n  }\n\n  /**\n   * Extract context from a carrier\n   *\n   * @param context Context which the newly created context will inherit from\n   * @param carrier Carrier to extract context from\n   * @param getter Function used to extract keys from a carrier\n   */\n  public extract<Carrier>(\n    context: Context,\n    carrier: Carrier,\n    getter: TextMapGetter<Carrier> = defaultTextMapGetter\n  ): Context {\n    return this._getGlobalPropagator().extract(context, carrier, getter);\n  }\n\n  /**\n   * Return a list of all fields which may be used by the propagator.\n   */\n  public fields(): string[] {\n    return this._getGlobalPropagator().fields();\n  }\n\n  /** Remove the global propagator */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n\n  public createBaggage = createBaggage;\n\n  public getBaggage = getBaggage;\n\n  public getActiveBaggage = getActiveBaggage;\n\n  public setBaggage = setBaggage;\n\n  public deleteBaggage = deleteBaggage;\n\n  private _getGlobalPropagator(): TextMapPropagator {\n    return getGlobal(API_NAME) || NOOP_TEXT_MAP_PROPAGATOR;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * based on lodash in order to support esm builds without esModuleInterop.\n * lodash is using MIT License.\n **/\n\nconst objectTag = '[object Object]';\nconst nullTag = '[object Null]';\nconst undefinedTag = '[object Undefined]';\nconst funcProto = Function.prototype;\nconst funcToString = funcProto.toString;\nconst objectCtorString = funcToString.call(Object);\nconst getPrototype = overArg(Object.getPrototypeOf, Object);\nconst objectProto = Object.prototype;\nconst hasOwnProperty = objectProto.hasOwnProperty;\nconst symToStringTag = Symbol ? Symbol.toStringTag : undefined;\nconst nativeObjectToString = objectProto.toString;\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func: Function, transform: any): any {\n  return function (arg: any) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nexport function isPlainObject(value: any) {\n  if (!isObjectLike(value) || baseGetTag(value) !== objectTag) {\n    return false;\n  }\n  const proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (\n    typeof Ctor == 'function' &&\n    Ctor instanceof Ctor &&\n    funcToString.call(Ctor) === objectCtorString\n  );\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value: any) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value: any) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value)\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value: any) {\n  const isOwn = hasOwnProperty.call(value, symToStringTag as any),\n    tag = value[symToStringTag as any];\n  let unmasked = false;\n\n  try {\n    value[symToStringTag as any] = undefined;\n    unmasked = true;\n  } catch (e) {\n    // silence\n  }\n\n  const result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag as any] = tag;\n    } else {\n      delete value[symToStringTag as any];\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value: any) {\n  return nativeObjectToString.call(value);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { PropagationAPI } from './api/propagation';\n/** Entrypoint for propagation API */\nexport const propagation = PropagationAPI.getInstance();\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { isPlainObject } from './lodash.merge';\n\nconst MAX_LEVEL = 20;\n\ninterface ObjectInto {\n  obj: any;\n  key: string;\n}\n\n/**\n * Merges objects together\n * @param args - objects / values to be merged\n */\nexport function merge(...args: any[]): any {\n  let result: any = args.shift();\n  const objects: WeakMap<any, ObjectInto[]> | undefined = new WeakMap<\n    any,\n    ObjectInto[]\n  >();\n  while (args.length > 0) {\n    result = mergeTwoObjects(result, args.shift(), 0, objects);\n  }\n\n  return result;\n}\n\nfunction takeValue(value: any): any {\n  if (isArray(value)) {\n    return value.slice();\n  }\n  return value;\n}\n\n/**\n * Merges two objects\n * @param one - first object\n * @param two - second object\n * @param level - current deep level\n * @param objects - objects holder that has been already referenced - to prevent\n * cyclic dependency\n */\nfunction mergeTwoObjects(\n  one: any,\n  two: any,\n  level = 0,\n  objects: WeakMap<any, ObjectInto[]>\n): any {\n  let result: any;\n  if (level > MAX_LEVEL) {\n    return undefined;\n  }\n  level++;\n  if (isPrimitive(one) || isPrimitive(two) || isFunction(two)) {\n    result = takeValue(two);\n  } else if (isArray(one)) {\n    result = one.slice();\n    if (isArray(two)) {\n      for (let i = 0, j = two.length; i < j; i++) {\n        result.push(takeValue(two[i]));\n      }\n    } else if (isObject(two)) {\n      const keys = Object.keys(two);\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        result[key] = takeValue(two[key]);\n      }\n    }\n  } else if (isObject(one)) {\n    if (isObject(two)) {\n      if (!shouldMerge(one, two)) {\n        return two;\n      }\n      result = Object.assign({}, one);\n      const keys = Object.keys(two);\n\n      for (let i = 0, j = keys.length; i < j; i++) {\n        const key = keys[i];\n        const twoValue = two[key];\n\n        if (isPrimitive(twoValue)) {\n          if (typeof twoValue === 'undefined') {\n            delete result[key];\n          } else {\n            // result[key] = takeValue(twoValue);\n            result[key] = twoValue;\n          }\n        } else {\n          const obj1 = result[key];\n          const obj2 = twoValue;\n\n          if (\n            wasObjectReferenced(one, key, objects) ||\n            wasObjectReferenced(two, key, objects)\n          ) {\n            delete result[key];\n          } else {\n            if (isObject(obj1) && isObject(obj2)) {\n              const arr1 = objects.get(obj1) || [];\n              const arr2 = objects.get(obj2) || [];\n              arr1.push({ obj: one, key });\n              arr2.push({ obj: two, key });\n              objects.set(obj1, arr1);\n              objects.set(obj2, arr2);\n            }\n\n            result[key] = mergeTwoObjects(\n              result[key],\n              twoValue,\n              level,\n              objects\n            );\n          }\n        }\n      }\n    } else {\n      result = two;\n    }\n  }\n\n  return result;\n}\n\n/**\n * Function to check if object has been already reference\n * @param obj\n * @param key\n * @param objects\n */\nfunction wasObjectReferenced(\n  obj: any,\n  key: string,\n  objects: WeakMap<any, ObjectInto[]>\n): boolean {\n  const arr = objects.get(obj[key]) || [];\n  for (let i = 0, j = arr.length; i < j; i++) {\n    const info = arr[i];\n    if (info.key === key && info.obj === obj) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction isArray(value: any): boolean {\n  return Array.isArray(value);\n}\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\nfunction isObject(value: any): boolean {\n  return (\n    !isPrimitive(value) &&\n    !isArray(value) &&\n    !isFunction(value) &&\n    typeof value === 'object'\n  );\n}\n\nfunction isPrimitive(value: any): boolean {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean' ||\n    typeof value === 'undefined' ||\n    value instanceof Date ||\n    value instanceof RegExp ||\n    value === null\n  );\n}\n\nfunction shouldMerge(one: any, two: any): boolean {\n  if (!isPlainObject(one) || !isPlainObject(two)) {\n    return false;\n  }\n\n  return true;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum TracesSamplerValues {\n  AlwaysOff = 'always_off',\n  AlwaysOn = 'always_on',\n  ParentBasedAlwaysOff = 'parentbased_always_off',\n  ParentBasedAlwaysOn = 'parentbased_always_on',\n  ParentBasedTraceIdRatio = 'parentbased_traceidratio',\n  TraceIdRatio = 'traceidratio',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogLevel } from '@opentelemetry/api';\nimport { TracesSamplerValues } from './sampling';\n\nconst DEFAULT_LIST_SEPARATOR = ',';\n\n/**\n * Environment interface to define all names\n */\n\nconst ENVIRONMENT_BOOLEAN_KEYS = ['OTEL_SDK_DISABLED'] as const;\n\ntype ENVIRONMENT_BOOLEANS = {\n  [K in (typeof ENVIRONMENT_BOOLEAN_KEYS)[number]]?: boolean;\n};\n\nfunction isEnvVarABoolean(key: unknown): key is keyof ENVIRONMENT_BOOLEANS {\n  return (\n    ENVIRONMENT_BOOLEAN_KEYS.indexOf(key as keyof ENVIRONMENT_BOOLEANS) > -1\n  );\n}\n\nconst ENVIRONMENT_NUMBERS_KEYS = [\n  'OTEL_BSP_EXPORT_TIMEOUT',\n  'OTEL_BSP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BSP_MAX_QUEUE_SIZE',\n  'OTEL_BSP_SCHEDULE_DELAY',\n  'OTEL_BLRP_EXPORT_TIMEOUT',\n  'OTEL_BLRP_MAX_EXPORT_BATCH_SIZE',\n  'OTEL_BLRP_MAX_QUEUE_SIZE',\n  'OTEL_BLRP_SCHEDULE_DELAY',\n  'OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT',\n  'OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT',\n  'OTEL_SPAN_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_LINK_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT',\n  'OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT',\n  'OTEL_EXPORTER_OTLP_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_TRACES_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_METRICS_TIMEOUT',\n  'OTEL_EXPORTER_OTLP_LOGS_TIMEOUT',\n  'OTEL_EXPORTER_JAEGER_AGENT_PORT',\n] as const;\n\ntype ENVIRONMENT_NUMBERS = {\n  [K in (typeof ENVIRONMENT_NUMBERS_KEYS)[number]]?: number;\n};\n\nfunction isEnvVarANumber(key: unknown): key is keyof ENVIRONMENT_NUMBERS {\n  return (\n    ENVIRONMENT_NUMBERS_KEYS.indexOf(key as keyof ENVIRONMENT_NUMBERS) > -1\n  );\n}\n\nconst ENVIRONMENT_LISTS_KEYS = [\n  'OTEL_NO_PATCH_MODULES',\n  'OTEL_PROPAGATORS',\n  'OTEL_SEMCONV_STABILITY_OPT_IN',\n] as const;\n\ntype ENVIRONMENT_LISTS = {\n  [K in (typeof ENVIRONMENT_LISTS_KEYS)[number]]?: string[];\n};\n\nfunction isEnvVarAList(key: unknown): key is keyof ENVIRONMENT_LISTS {\n  return ENVIRONMENT_LISTS_KEYS.indexOf(key as keyof ENVIRONMENT_LISTS) > -1;\n}\n\nexport type ENVIRONMENT = {\n  CONTAINER_NAME?: string;\n  ECS_CONTAINER_METADATA_URI_V4?: string;\n  ECS_CONTAINER_METADATA_URI?: string;\n  HOSTNAME?: string;\n  KUBERNETES_SERVICE_HOST?: string;\n  NAMESPACE?: string;\n  OTEL_EXPORTER_JAEGER_AGENT_HOST?: string;\n  OTEL_EXPORTER_JAEGER_ENDPOINT?: string;\n  OTEL_EXPORTER_JAEGER_PASSWORD?: string;\n  OTEL_EXPORTER_JAEGER_USER?: string;\n  OTEL_EXPORTER_OTLP_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT?: string;\n  OTEL_EXPORTER_OTLP_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS?: string;\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS?: string;\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT?: string;\n  OTEL_LOG_LEVEL?: DiagLogLevel;\n  OTEL_RESOURCE_ATTRIBUTES?: string;\n  OTEL_SERVICE_NAME?: string;\n  OTEL_TRACES_EXPORTER?: string;\n  OTEL_TRACES_SAMPLER_ARG?: string;\n  OTEL_TRACES_SAMPLER?: string;\n  OTEL_LOGS_EXPORTER?: string;\n  OTEL_EXPORTER_OTLP_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE?: string;\n  OTEL_EXPORTER_OTLP_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY?: string;\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE?: string;\n  OTEL_EXPORTER_OTLP_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL?: string;\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE?: string;\n} & ENVIRONMENT_BOOLEANS &\n  ENVIRONMENT_NUMBERS &\n  ENVIRONMENT_LISTS;\n\nexport type RAW_ENVIRONMENT = {\n  [key: string]: string | number | undefined | string[];\n};\n\nexport const DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT = Infinity;\n\nexport const DEFAULT_ATTRIBUTE_COUNT_LIMIT = 128;\n\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT = 128;\nexport const DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT = 128;\n\n/**\n * Default environment variables\n */\nexport const DEFAULT_ENVIRONMENT: Required<ENVIRONMENT> = {\n  OTEL_SDK_DISABLED: false,\n  CONTAINER_NAME: '',\n  ECS_CONTAINER_METADATA_URI_V4: '',\n  ECS_CONTAINER_METADATA_URI: '',\n  HOSTNAME: '',\n  KUBERNETES_SERVICE_HOST: '',\n  NAMESPACE: '',\n  OTEL_BSP_EXPORT_TIMEOUT: 30000,\n  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BSP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BSP_SCHEDULE_DELAY: 5000,\n  OTEL_BLRP_EXPORT_TIMEOUT: 30000,\n  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,\n  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,\n  OTEL_BLRP_SCHEDULE_DELAY: 5000,\n  OTEL_EXPORTER_JAEGER_AGENT_HOST: '',\n  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,\n  OTEL_EXPORTER_JAEGER_ENDPOINT: '',\n  OTEL_EXPORTER_JAEGER_PASSWORD: '',\n  OTEL_EXPORTER_JAEGER_USER: '',\n  OTEL_EXPORTER_OTLP_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: '',\n  OTEL_EXPORTER_OTLP_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TRACES_HEADERS: '',\n  OTEL_EXPORTER_OTLP_METRICS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_LOGS_HEADERS: '',\n  OTEL_EXPORTER_OTLP_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 10000,\n  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 10000,\n  OTEL_EXPORTER_ZIPKIN_ENDPOINT: 'http://localhost:9411/api/v2/spans',\n  OTEL_LOG_LEVEL: DiagLogLevel.INFO,\n  OTEL_NO_PATCH_MODULES: [],\n  OTEL_PROPAGATORS: ['tracecontext', 'baggage'],\n  OTEL_RESOURCE_ATTRIBUTES: '',\n  OTEL_SERVICE_NAME: '',\n  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT:\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,\n  OTEL_SPAN_LINK_COUNT_LIMIT: 128,\n  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT:\n    DEFAULT_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n  OTEL_TRACES_EXPORTER: '',\n  OTEL_TRACES_SAMPLER: TracesSamplerValues.ParentBasedAlwaysOn,\n  OTEL_TRACES_SAMPLER_ARG: '',\n  OTEL_LOGS_EXPORTER: '',\n  OTEL_EXPORTER_OTLP_INSECURE: '',\n  OTEL_EXPORTER_OTLP_TRACES_INSECURE: '',\n  OTEL_EXPORTER_OTLP_METRICS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_LOGS_INSECURE: '',\n  OTEL_EXPORTER_OTLP_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: '',\n  OTEL_EXPORTER_OTLP_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: '',\n  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: '',\n  OTEL_EXPORTER_OTLP_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: 'http/protobuf',\n  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: 'cumulative',\n  OTEL_SEMCONV_STABILITY_OPT_IN: [],\n};\n\n/**\n * @param key\n * @param environment\n * @param values\n */\nfunction parseBoolean(\n  key: keyof ENVIRONMENT_BOOLEANS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  if (typeof values[key] === 'undefined') {\n    return;\n  }\n\n  const value = String(values[key]);\n  // support case-insensitive \"true\"\n  environment[key] = value.toLowerCase() === 'true';\n}\n\n/**\n * Parses a variable as number with number validation\n * @param name\n * @param environment\n * @param values\n * @param min\n * @param max\n */\nfunction parseNumber(\n  name: keyof ENVIRONMENT_NUMBERS,\n  environment: ENVIRONMENT,\n  values: RAW_ENVIRONMENT,\n  min = -Infinity,\n  max = Infinity\n) {\n  if (typeof values[name] !== 'undefined') {\n    const value = Number(values[name] as string);\n    if (!isNaN(value)) {\n      if (value < min) {\n        environment[name] = min;\n      } else if (value > max) {\n        environment[name] = max;\n      } else {\n        environment[name] = value;\n      }\n    }\n  }\n}\n\n/**\n * Parses list-like strings from input into output.\n * @param name\n * @param environment\n * @param values\n * @param separator\n */\nfunction parseStringList(\n  name: keyof ENVIRONMENT_LISTS,\n  output: ENVIRONMENT,\n  input: RAW_ENVIRONMENT,\n  separator = DEFAULT_LIST_SEPARATOR\n) {\n  const givenValue = input[name];\n  if (typeof givenValue === 'string') {\n    output[name] = givenValue.split(separator).map(v => v.trim());\n  }\n}\n\n// The support string -> DiagLogLevel mappings\nconst logLevelMap: { [key: string]: DiagLogLevel } = {\n  ALL: DiagLogLevel.ALL,\n  VERBOSE: DiagLogLevel.VERBOSE,\n  DEBUG: DiagLogLevel.DEBUG,\n  INFO: DiagLogLevel.INFO,\n  WARN: DiagLogLevel.WARN,\n  ERROR: DiagLogLevel.ERROR,\n  NONE: DiagLogLevel.NONE,\n};\n\n/**\n * Environmentally sets log level if valid log level string is provided\n * @param key\n * @param environment\n * @param values\n */\nfunction setLogLevelFromEnv(\n  key: keyof ENVIRONMENT,\n  environment: RAW_ENVIRONMENT | ENVIRONMENT,\n  values: RAW_ENVIRONMENT\n) {\n  const value = values[key];\n  if (typeof value === 'string') {\n    const theLevel = logLevelMap[value.toUpperCase()];\n    if (theLevel != null) {\n      environment[key] = theLevel;\n    }\n  }\n}\n\n/**\n * Parses environment values\n * @param values\n */\nexport function parseEnvironment(values: RAW_ENVIRONMENT): ENVIRONMENT {\n  const environment: ENVIRONMENT = {};\n\n  for (const env in DEFAULT_ENVIRONMENT) {\n    const key = env as keyof ENVIRONMENT;\n\n    switch (key) {\n      case 'OTEL_LOG_LEVEL':\n        setLogLevelFromEnv(key, environment, values);\n        break;\n\n      default:\n        if (isEnvVarABoolean(key)) {\n          parseBoolean(key, environment, values);\n        } else if (isEnvVarANumber(key)) {\n          parseNumber(key, environment, values);\n        } else if (isEnvVarAList(key)) {\n          parseStringList(key, environment, values);\n        } else {\n          const value = values[key];\n          if (typeof value !== 'undefined' && value !== null) {\n            environment[key] = String(value);\n          }\n        }\n    }\n  }\n\n  return environment;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n      ? self\n      : typeof window === 'object'\n        ? window\n        : typeof global === 'object'\n          ? global\n          : ({} as typeof globalThis);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_ENVIRONMENT,\n  ENVIRONMENT,\n  RAW_ENVIRONMENT,\n  parseEnvironment,\n} from '../../utils/environment';\nimport { _globalThis } from './globalThis';\n\n/**\n * Gets the environment variables\n */\nexport function getEnv(): Required<ENVIRONMENT> {\n  const globalEnv = parseEnvironment(\n    _globalThis as typeof globalThis & RAW_ENVIRONMENT\n  );\n  return Object.assign({}, DEFAULT_ENVIRONMENT, globalEnv);\n}\n\nexport function getEnvWithoutDefaults(): ENVIRONMENT {\n  return parseEnvironment(_globalThis as typeof globalThis & RAW_ENVIRONMENT);\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  TextMapGetter,\n  TextMapPropagator,\n  diag,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\n/** Configuration object for composite propagator */\nexport interface CompositePropagatorConfig {\n  /**\n   * List of propagators to run. Propagators run in the\n   * list order. If a propagator later in the list writes the same context\n   * key as a propagator earlier in the list, the later on will \"win\".\n   */\n  propagators?: TextMapPropagator[];\n}\n\n/** Combines multiple propagators into a single propagator. */\nexport class CompositePropagator implements TextMapPropagator {\n  private readonly _propagators: TextMapPropagator[];\n  private readonly _fields: string[];\n\n  /**\n   * Construct a composite propagator from a list of propagators.\n   *\n   * @param [config] Configuration object for composite propagator\n   */\n  constructor(config: CompositePropagatorConfig = {}) {\n    this._propagators = config.propagators ?? [];\n\n    this._fields = Array.from(\n      new Set(\n        this._propagators\n          // older propagators may not have fields function, null check to be sure\n          .map(p => (typeof p.fields === 'function' ? p.fields() : []))\n          .reduce((x, y) => x.concat(y), [])\n      )\n    );\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same carrier key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to inject\n   * @param carrier Carrier into which context will be injected\n   */\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    for (const propagator of this._propagators) {\n      try {\n        propagator.inject(context, carrier, setter);\n      } catch (err) {\n        diag.warn(\n          `Failed to inject with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Run each of the configured propagators with the given context and carrier.\n   * Propagators are run in the order they are configured, so if multiple\n   * propagators write the same context key, the propagator later in the list\n   * will \"win\".\n   *\n   * @param context Context to add values to\n   * @param carrier Carrier from which to extract context\n   */\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    return this._propagators.reduce((ctx, propagator) => {\n      try {\n        return propagator.extract(ctx, carrier, getter);\n      } catch (err) {\n        diag.warn(\n          `Failed to extract with ${propagator.constructor.name}. Err: ${err.message}`\n        );\n      }\n      return ctx;\n    }, context);\n  }\n\n  fields(): string[] {\n    // return a new array so our fields cannot be modified\n    return this._fields.slice();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const BAGGAGE_KEY_PAIR_SEPARATOR = '=';\nexport const BAGGAGE_PROPERTIES_SEPARATOR = ';';\nexport const BAGGAGE_ITEMS_SEPARATOR = ',';\n\n// Name of the http header used to propagate the baggage\nexport const BAGGAGE_HEADER = 'baggage';\n// Maximum number of name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_NAME_VALUE_PAIRS = 180;\n// Maximum number of bytes per a single name-value pair allowed by w3c spec\nexport const BAGGAGE_MAX_PER_NAME_VALUE_PAIRS = 4096;\n// Maximum total length of all name-value pairs allowed by w3c spec\nexport const BAGGAGE_MAX_TOTAL_LENGTH = 8192;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  Baggage,\n  BaggageEntryMetadata,\n  baggageEntryMetadataFromString,\n} from '@opentelemetry/api';\nimport {\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_PROPERTIES_SEPARATOR,\n  BAGGAGE_KEY_PAIR_SEPARATOR,\n  BAGGAGE_MAX_TOTAL_LENGTH,\n} from './constants';\n\ntype ParsedBaggageKeyValue = {\n  key: string;\n  value: string;\n  metadata: BaggageEntryMetadata | undefined;\n};\n\nexport function serializeKeyPairs(keyPairs: string[]): string {\n  return keyPairs.reduce((hValue: string, current: string) => {\n    const value = `${hValue}${\n      hValue !== '' ? BAGGAGE_ITEMS_SEPARATOR : ''\n    }${current}`;\n    return value.length > BAGGAGE_MAX_TOTAL_LENGTH ? hValue : value;\n  }, '');\n}\n\nexport function getKeyPairs(baggage: Baggage): string[] {\n  return baggage.getAllEntries().map(([key, value]) => {\n    let entry = `${encodeURIComponent(key)}=${encodeURIComponent(value.value)}`;\n\n    // include opaque metadata if provided\n    // NOTE: we intentionally don't URI-encode the metadata - that responsibility falls on the metadata implementation\n    if (value.metadata !== undefined) {\n      entry += BAGGAGE_PROPERTIES_SEPARATOR + value.metadata.toString();\n    }\n\n    return entry;\n  });\n}\n\nexport function parsePairKeyValue(\n  entry: string\n): ParsedBaggageKeyValue | undefined {\n  const valueProps = entry.split(BAGGAGE_PROPERTIES_SEPARATOR);\n  if (valueProps.length <= 0) return;\n  const keyPairPart = valueProps.shift();\n  if (!keyPairPart) return;\n  const separatorIndex = keyPairPart.indexOf(BAGGAGE_KEY_PAIR_SEPARATOR);\n  if (separatorIndex <= 0) return;\n  const key = decodeURIComponent(\n    keyPairPart.substring(0, separatorIndex).trim()\n  );\n  const value = decodeURIComponent(\n    keyPairPart.substring(separatorIndex + 1).trim()\n  );\n  let metadata;\n  if (valueProps.length > 0) {\n    metadata = baggageEntryMetadataFromString(\n      valueProps.join(BAGGAGE_PROPERTIES_SEPARATOR)\n    );\n  }\n  return { key, value, metadata };\n}\n\n/**\n * Parse a string serialized in the baggage HTTP Format (without metadata):\n * https://github.com/w3c/baggage/blob/master/baggage/HTTP_HEADER_FORMAT.md\n */\nexport function parseKeyPairsIntoRecord(\n  value?: string\n): Record<string, string> {\n  if (typeof value !== 'string' || value.length === 0) return {};\n  return value\n    .split(BAGGAGE_ITEMS_SEPARATOR)\n    .map(entry => {\n      return parsePairKeyValue(entry);\n    })\n    .filter(keyPair => keyPair !== undefined && keyPair.value.length > 0)\n    .reduce<Record<string, string>>((headers, keyPair) => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      headers[keyPair!.key] = keyPair!.value;\n      return headers;\n    }, {});\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaggageEntry,\n  Context,\n  propagation,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n} from '@opentelemetry/api';\n\nimport { isTracingSuppressed } from '../../trace/suppress-tracing';\nimport {\n  BAGGAGE_HEADER,\n  BAGGAGE_ITEMS_SEPARATOR,\n  BAGGAGE_MAX_NAME_VALUE_PAIRS,\n  BAGGAGE_MAX_PER_NAME_VALUE_PAIRS,\n} from '../constants';\nimport { getKeyPairs, parsePairKeyValue, serializeKeyPairs } from '../utils';\n\n/**\n * Propagates {@link Baggage} through Context format propagation.\n *\n * Based on the Baggage specification:\n * https://w3c.github.io/baggage/\n */\nexport class W3CBaggagePropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    const baggage = propagation.getBaggage(context);\n    if (!baggage || isTracingSuppressed(context)) return;\n    const keyPairs = getKeyPairs(baggage)\n      .filter((pair: string) => {\n        return pair.length <= BAGGAGE_MAX_PER_NAME_VALUE_PAIRS;\n      })\n      .slice(0, BAGGAGE_MAX_NAME_VALUE_PAIRS);\n    const headerValue = serializeKeyPairs(keyPairs);\n    if (headerValue.length > 0) {\n      setter.set(carrier, BAGGAGE_HEADER, headerValue);\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const headerValue = getter.get(carrier, BAGGAGE_HEADER);\n    const baggageString = Array.isArray(headerValue)\n      ? headerValue.join(BAGGAGE_ITEMS_SEPARATOR)\n      : headerValue;\n    if (!baggageString) return context;\n    const baggage: Record<string, BaggageEntry> = {};\n    if (baggageString.length === 0) {\n      return context;\n    }\n    const pairs = baggageString.split(BAGGAGE_ITEMS_SEPARATOR);\n    pairs.forEach(entry => {\n      const keyPair = parsePairKeyValue(entry);\n      if (keyPair) {\n        const baggageEntry: BaggageEntry = { value: keyPair.value };\n        if (keyPair.metadata) {\n          baggageEntry.metadata = keyPair.metadata;\n        }\n        baggage[keyPair.key] = baggageEntry;\n      }\n    });\n    if (Object.entries(baggage).length === 0) {\n      return context;\n    }\n    return propagation.setBaggage(context, propagation.createBaggage(baggage));\n  }\n\n  fields(): string[] {\n    return [BAGGAGE_HEADER];\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanAttributes } from './attributes';\nimport { TraceState } from './trace_state';\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * @deprecated use the one declared in @opentelemetry/sdk-trace-base instead.\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substring(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nconst TMP_DB_SYSTEM = 'db.system';\nconst TMP_DB_CONNECTION_STRING = 'db.connection_string';\nconst TMP_DB_USER = 'db.user';\nconst TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nconst TMP_DB_NAME = 'db.name';\nconst TMP_DB_STATEMENT = 'db.statement';\nconst TMP_DB_OPERATION = 'db.operation';\nconst TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nconst TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nconst TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nconst TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nconst TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nconst TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nconst TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  'db.cassandra.speculative_execution_count';\nconst TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nconst TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nconst TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nconst TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nconst TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nconst TMP_DB_SQL_TABLE = 'db.sql.table';\nconst TMP_EXCEPTION_TYPE = 'exception.type';\nconst TMP_EXCEPTION_MESSAGE = 'exception.message';\nconst TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nconst TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nconst TMP_FAAS_TRIGGER = 'faas.trigger';\nconst TMP_FAAS_EXECUTION = 'faas.execution';\nconst TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nconst TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nconst TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nconst TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nconst TMP_FAAS_TIME = 'faas.time';\nconst TMP_FAAS_CRON = 'faas.cron';\nconst TMP_FAAS_COLDSTART = 'faas.coldstart';\nconst TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nconst TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nconst TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nconst TMP_NET_TRANSPORT = 'net.transport';\nconst TMP_NET_PEER_IP = 'net.peer.ip';\nconst TMP_NET_PEER_PORT = 'net.peer.port';\nconst TMP_NET_PEER_NAME = 'net.peer.name';\nconst TMP_NET_HOST_IP = 'net.host.ip';\nconst TMP_NET_HOST_PORT = 'net.host.port';\nconst TMP_NET_HOST_NAME = 'net.host.name';\nconst TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nconst TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nconst TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nconst TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nconst TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nconst TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nconst TMP_PEER_SERVICE = 'peer.service';\nconst TMP_ENDUSER_ID = 'enduser.id';\nconst TMP_ENDUSER_ROLE = 'enduser.role';\nconst TMP_ENDUSER_SCOPE = 'enduser.scope';\nconst TMP_THREAD_ID = 'thread.id';\nconst TMP_THREAD_NAME = 'thread.name';\nconst TMP_CODE_FUNCTION = 'code.function';\nconst TMP_CODE_NAMESPACE = 'code.namespace';\nconst TMP_CODE_FILEPATH = 'code.filepath';\nconst TMP_CODE_LINENO = 'code.lineno';\nconst TMP_HTTP_METHOD = 'http.method';\nconst TMP_HTTP_URL = 'http.url';\nconst TMP_HTTP_TARGET = 'http.target';\nconst TMP_HTTP_HOST = 'http.host';\nconst TMP_HTTP_SCHEME = 'http.scheme';\nconst TMP_HTTP_STATUS_CODE = 'http.status_code';\nconst TMP_HTTP_FLAVOR = 'http.flavor';\nconst TMP_HTTP_USER_AGENT = 'http.user_agent';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.request_content_length_uncompressed';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.response_content_length_uncompressed';\nconst TMP_HTTP_SERVER_NAME = 'http.server_name';\nconst TMP_HTTP_ROUTE = 'http.route';\nconst TMP_HTTP_CLIENT_IP = 'http.client_ip';\nconst TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nconst TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nconst TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  'aws.dynamodb.item_collection_metrics';\nconst TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  'aws.dynamodb.provisioned_read_capacity';\nconst TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  'aws.dynamodb.provisioned_write_capacity';\nconst TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nconst TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nconst TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nconst TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nconst TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nconst TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  'aws.dynamodb.global_secondary_indexes';\nconst TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  'aws.dynamodb.local_secondary_indexes';\nconst TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  'aws.dynamodb.exclusive_start_table';\nconst TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nconst TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nconst TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nconst TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nconst TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nconst TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nconst TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  'aws.dynamodb.attribute_definitions';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  'aws.dynamodb.global_secondary_index_updates';\nconst TMP_MESSAGING_SYSTEM = 'messaging.system';\nconst TMP_MESSAGING_DESTINATION = 'messaging.destination';\nconst TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nconst TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nconst TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nconst TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nconst TMP_MESSAGING_URL = 'messaging.url';\nconst TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nconst TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  'messaging.message_payload_size_bytes';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  'messaging.message_payload_compressed_size_bytes';\nconst TMP_MESSAGING_OPERATION = 'messaging.operation';\nconst TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nconst TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nconst TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nconst TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nconst TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nconst TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nconst TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nconst TMP_RPC_SYSTEM = 'rpc.system';\nconst TMP_RPC_SERVICE = 'rpc.service';\nconst TMP_RPC_METHOD = 'rpc.method';\nconst TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nconst TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nconst TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nconst TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nconst TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nconst TMP_MESSAGE_TYPE = 'message.type';\nconst TMP_MESSAGE_ID = 'message.id';\nconst TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nconst TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated Use ATTR_AWS_LAMBDA_INVOKED_ARN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use ATTR_DB_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated Use ATTR_DB_CONNECTION_STRING in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n\n/**\n * Username for accessing the database.\n *\n * @deprecated Use ATTR_DB_USER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_USER = TMP_DB_USER;\n\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated Use ATTR_DB_JDBC_DRIVER_CLASSNAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_NAME = TMP_DB_NAME;\n\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated Use ATTR_DB_STATEMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated Use ATTR_DB_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated Use ATTR_DB_MSSQL_INSTANCE_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_PAGE_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL =\n  TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_IDEMPOTENCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID =\n  TMP_DB_CASSANDRA_COORDINATOR_ID;\n\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated Use ATTR_DB_CASSANDRA_COORDINATOR_DC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC =\n  TMP_DB_CASSANDRA_COORDINATOR_DC;\n\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated Use ATTR_DB_REDIS_DATABASE_INDEX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated Use ATTR_DB_MONGODB_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated Use ATTR_DB_SQL_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated Use ATTR_EXCEPTION_TYPE.\n */\nexport const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n\n/**\n * The exception message.\n *\n * @deprecated Use ATTR_EXCEPTION_MESSAGE.\n */\nexport const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated Use ATTR_EXCEPTION_STACKTRACE.\n */\nexport const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated Use ATTR_EXCEPTION_ESCAPED.\n*/\nexport const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use ATTR_FAAS_TRIGGER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated Use ATTR_FAAS_INVOCATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_COLLECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated Use ATTR_FAAS_DOCUMENT_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated Use ATTR_FAAS_TIME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated Use ATTR_FAAS_CRON in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated Use ATTR_FAAS_COLDSTART in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_PROVIDER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated Use ATTR_FAAS_INVOKED_REGION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use ATTR_NET_TRANSPORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated Use ATTR_NET_PEER_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n\n/**\n * Remote port number.\n *\n * @deprecated Use ATTR_NET_PEER_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_PEER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated Use ATTR_NET_HOST_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated Use ATTR_NET_HOST_PORT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated Use ATTR_NET_HOST_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use ATTR_NETWORK_CONNECTION_SUBTYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE =\n  TMP_NET_HOST_CONNECTION_SUBTYPE;\n\n/**\n * The name of the mobile carrier.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n\n/**\n * The mobile carrier country code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MCC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n\n/**\n * The mobile carrier network code.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_MNC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated Use ATTR_NETWORK_CARRIER_ICC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated Use ATTR_PEER_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated Use ATTR_ENDUSER_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated Use ATTR_ENDUSER_ROLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated Use ATTR_ENDUSER_SCOPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated Use ATTR_THREAD_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n\n/**\n * Current thread name.\n *\n * @deprecated Use ATTR_THREAD_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated Use ATTR_CODE_FUNCTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated Use ATTR_CODE_NAMESPACE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated Use ATTR_CODE_FILEPATH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated Use ATTR_CODE_LINENO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n\n/**\n * HTTP request method.\n *\n * @deprecated Use ATTR_HTTP_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated Use ATTR_HTTP_URL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated Use ATTR_HTTP_TARGET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated Use ATTR_HTTP_HOST in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated Use ATTR_HTTP_SCHEME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated Use ATTR_HTTP_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use ATTR_HTTP_FLAVOR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated Use ATTR_HTTP_USER_AGENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated Use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated Use ATTR_HTTP_SERVER_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n\n/**\n * The matched route (path template).\n *\n * @deprecated Use ATTR_HTTP_ROUTE.\n */\nexport const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated Use ATTR_HTTP_CLIENT_IP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n*/\nexport const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_NAMES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY =\n  TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_CONSISTENT_READ in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ =\n  TMP_AWS_DYNAMODB_CONSISTENT_READ;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_PROJECTION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LIMIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET =\n  TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_INDEX_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SELECT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TABLE_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCAN_FORWARD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SEGMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS =\n  TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_SCANNED_COUNT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT =\n  TMP_AWS_DYNAMODB_SCANNED_COUNT;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated Use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n\n/**\n * A string identifying the messaging system.\n *\n * @deprecated Use ATTR_MESSAGING_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_NAME in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const SEMATTRS_MESSAGING_DESTINATION_KIND =\n  TMP_MESSAGING_DESTINATION_KIND;\n\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated Use ATTR_MESSAGING_DESTINATION_TEMPORARY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_TEMP_DESTINATION =\n  TMP_MESSAGING_TEMP_DESTINATION;\n\n/**\n * The name of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_NAME.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n\n/**\n * The version of the transport protocol.\n *\n * @deprecated Use ATTR_NETWORK_PROTOCOL_VERSION.\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL_VERSION =\n  TMP_MESSAGING_PROTOCOL_VERSION;\n\n/**\n * Connection string.\n *\n * @deprecated Removed in semconv v1.17.0.\n */\nexport const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_CONVERSATION_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated Use ATTR_MESSAGING_MESSAGE_BODY_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated Removed in semconv v1.22.0.\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use ATTR_MESSAGING_OPERATION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated Removed in semconv v1.21.0.\n */\nexport const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated Use ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY =\n  TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_KEY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY =\n  TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP =\n  TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated Use ATTR_MESSAGING_CLIENT_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n\n/**\n * Partition the message is sent to.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated Use ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n\n/**\n * A string identifying the remoting system.\n *\n * @deprecated Use ATTR_RPC_SYSTEM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated Use ATTR_RPC_SERVICE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated Use ATTR_RPC_METHOD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use ATTR_RPC_GRPC_STATUS_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_VERSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_REQUEST_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_CODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated Use ATTR_RPC_JSONRPC_ERROR_MESSAGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use ATTR_MESSAGE_TYPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated Use ATTR_MESSAGE_ID in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_COMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated Use ATTR_MESSAGE_UNCOMPRESSED_SIZE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n\n/**\n * Definition of available values for SemanticAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification.\n */\nexport type SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn';\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system';\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string';\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user';\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname';\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name';\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement';\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation';\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name';\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace';\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size';\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table';\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence';\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count';\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id';\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc';\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace';\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index';\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table';\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type';\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message';\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace';\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped';\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger';\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution';\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection';\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation';\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time';\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name';\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time';\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron';\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart';\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name';\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider';\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region';\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport';\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip';\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port';\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name';\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip';\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port';\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name';\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type';\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype';\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name';\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc';\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc';\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc';\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service';\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id';\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role';\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope';\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id';\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name';\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function';\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace';\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath';\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno';\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method';\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url';\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target';\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host';\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme';\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code';\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor';\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent';\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length';\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed';\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length';\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed';\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name';\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route';\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip';\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names';\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity';\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics';\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity';\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity';\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read';\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection';\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit';\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get';\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name';\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select';\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes';\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes';\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table';\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count';\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward';\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment';\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments';\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count';\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count';\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions';\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates';\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system';\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination';\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind';\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination';\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol';\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version';\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url';\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id';\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id';\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes';\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes';\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation';\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id';\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key';\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key';\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group';\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id';\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition';\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone';\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system';\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service';\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method';\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code';\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version';\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id';\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code';\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message';\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type';\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id';\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size';\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size';\n};\n\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport const SemanticAttributes: SemanticAttributes =\n  /*#__PURE__*/ createConstMap<SemanticAttributes>([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nconst TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nconst TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nconst TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nconst TMP_DBSYSTEMVALUES_DB2 = 'db2';\nconst TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nconst TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nconst TMP_DBSYSTEMVALUES_HIVE = 'hive';\nconst TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nconst TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nconst TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nconst TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nconst TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nconst TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nconst TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nconst TMP_DBSYSTEMVALUES_EDB = 'edb';\nconst TMP_DBSYSTEMVALUES_CACHE = 'cache';\nconst TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nconst TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nconst TMP_DBSYSTEMVALUES_DERBY = 'derby';\nconst TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nconst TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nconst TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nconst TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nconst TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nconst TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nconst TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nconst TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nconst TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nconst TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nconst TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nconst TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nconst TMP_DBSYSTEMVALUES_H2 = 'h2';\nconst TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nconst TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nconst TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nconst TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nconst TMP_DBSYSTEMVALUES_REDIS = 'redis';\nconst TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nconst TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nconst TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nconst TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nconst TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nconst TMP_DBSYSTEMVALUES_GEODE = 'geode';\nconst TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nconst TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nconst TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n\n/**\n * Identifies the Values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport type DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql';\n\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql';\n\n  /** MySQL. */\n  MYSQL: 'mysql';\n\n  /** Oracle Database. */\n  ORACLE: 'oracle';\n\n  /** IBM Db2. */\n  DB2: 'db2';\n\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql';\n\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift';\n\n  /** Apache Hive. */\n  HIVE: 'hive';\n\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape';\n\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb';\n\n  /** Progress Database. */\n  PROGRESS: 'progress';\n\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb';\n\n  /** SAP HANA. */\n  HANADB: 'hanadb';\n\n  /** Ingres. */\n  INGRES: 'ingres';\n\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql';\n\n  /** EnterpriseDB. */\n  EDB: 'edb';\n\n  /** InterSystems Caché. */\n  CACHE: 'cache';\n\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas';\n\n  /** Firebird. */\n  FIREBIRD: 'firebird';\n\n  /** Apache Derby. */\n  DERBY: 'derby';\n\n  /** FileMaker. */\n  FILEMAKER: 'filemaker';\n\n  /** Informix. */\n  INFORMIX: 'informix';\n\n  /** InstantDB. */\n  INSTANTDB: 'instantdb';\n\n  /** InterBase. */\n  INTERBASE: 'interbase';\n\n  /** MariaDB. */\n  MARIADB: 'mariadb';\n\n  /** Netezza. */\n  NETEZZA: 'netezza';\n\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive';\n\n  /** PointBase. */\n  POINTBASE: 'pointbase';\n\n  /** SQLite. */\n  SQLITE: 'sqlite';\n\n  /** Sybase. */\n  SYBASE: 'sybase';\n\n  /** Teradata. */\n  TERADATA: 'teradata';\n\n  /** Vertica. */\n  VERTICA: 'vertica';\n\n  /** H2. */\n  H2: 'h2';\n\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion';\n\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra';\n\n  /** Apache HBase. */\n  HBASE: 'hbase';\n\n  /** MongoDB. */\n  MONGODB: 'mongodb';\n\n  /** Redis. */\n  REDIS: 'redis';\n\n  /** Couchbase. */\n  COUCHBASE: 'couchbase';\n\n  /** CouchDB. */\n  COUCHDB: 'couchdb';\n\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb';\n\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb';\n\n  /** Neo4j. */\n  NEO4J: 'neo4j';\n\n  /** Apache Geode. */\n  GEODE: 'geode';\n\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch';\n\n  /** Memcached. */\n  MEMCACHED: 'memcached';\n\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb';\n};\n\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport const DbSystemValues: DbSystemValues =\n  /*#__PURE__*/ createConstMap<DbSystemValues>([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ALL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_TWO =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_THREE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ANY =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n\n/**\n * Identifies the Values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport type DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all';\n\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum';\n\n  /** quorum. */\n  QUORUM: 'quorum';\n\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum';\n\n  /** one. */\n  ONE: 'one';\n\n  /** two. */\n  TWO: 'two';\n\n  /** three. */\n  THREE: 'three';\n\n  /** local_one. */\n  LOCAL_ONE: 'local_one';\n\n  /** any. */\n  ANY: 'any';\n\n  /** serial. */\n  SERIAL: 'serial';\n\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial';\n};\n\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport const DbCassandraConsistencyLevelValues: DbCassandraConsistencyLevelValues =\n  /*#__PURE__*/ createConstMap<DbCassandraConsistencyLevelValues>([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nconst TMP_FAASTRIGGERVALUES_HTTP = 'http';\nconst TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nconst TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nconst TMP_FAASTRIGGERVALUES_OTHER = 'other';\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n\n/**\n * Identifies the Values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport type FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource';\n\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http';\n\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub';\n\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer';\n\n  /** If none of the others apply. */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport const FaasTriggerValues: FaasTriggerValues =\n  /*#__PURE__*/ createConstMap<FaasTriggerValues>([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_INSERT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_EDIT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASDOCUMENTOPERATIONVALUES_DELETE =\n  TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n\n/**\n * Identifies the Values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport type FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert';\n\n  /** When an object is modified. */\n  EDIT: 'edit';\n\n  /** When an object is deleted. */\n  DELETE: 'delete';\n};\n\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport const FaasDocumentOperationValues: FaasDocumentOperationValues =\n  /*#__PURE__*/ createConstMap<FaasDocumentOperationValues>([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_AZURE =\n  TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport type FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport const FaasInvokedProviderValues: FaasInvokedProviderValues =\n  /*#__PURE__*/ createConstMap<FaasInvokedProviderValues>([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nconst TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nconst TMP_NETTRANSPORTVALUES_IP = 'ip';\nconst TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nconst TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nconst TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nconst TMP_NETTRANSPORTVALUES_OTHER = 'other';\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Removed in v1.21.0.\n */\nexport const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n\n/**\n * Identifies the Values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport type NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp';\n\n  /** ip_udp. */\n  IP_UDP: 'ip_udp';\n\n  /** Another IP-based protocol. */\n  IP: 'ip';\n\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix';\n\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe';\n\n  /** In-process communication. */\n  INPROC: 'inproc';\n\n  /** Something else (non IP-based). */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport const NetTransportValues: NetTransportValues =\n  /*#__PURE__*/ createConstMap<NetTransportValues>([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIFI in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIFI =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_WIRED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIRED =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_CELL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_CELL =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n\n/**\n * Identifies the Values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi';\n\n  /** wired. */\n  WIRED: 'wired';\n\n  /** cell. */\n  CELL: 'cell';\n\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable';\n\n  /** unknown. */\n  UNKNOWN: 'unknown';\n};\n\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionTypeValues: NetHostConnectionTypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionTypeValues>([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_GSM in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GSM =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NR in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NR =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n\n/**\n * Identifies the Values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs';\n\n  /** EDGE. */\n  EDGE: 'edge';\n\n  /** UMTS. */\n  UMTS: 'umts';\n\n  /** CDMA. */\n  CDMA: 'cdma';\n\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0';\n\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a';\n\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt';\n\n  /** HSDPA. */\n  HSDPA: 'hsdpa';\n\n  /** HSUPA. */\n  HSUPA: 'hsupa';\n\n  /** HSPA. */\n  HSPA: 'hspa';\n\n  /** IDEN. */\n  IDEN: 'iden';\n\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b';\n\n  /** LTE. */\n  LTE: 'lte';\n\n  /** EHRPD. */\n  EHRPD: 'ehrpd';\n\n  /** HSPAP. */\n  HSPAP: 'hspap';\n\n  /** GSM. */\n  GSM: 'gsm';\n\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma';\n\n  /** IWLAN. */\n  IWLAN: 'iwlan';\n\n  /** 5G NR (New Radio). */\n  NR: 'nr';\n\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa';\n\n  /** LTE CA. */\n  LTE_CA: 'lte_ca';\n};\n\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionSubtypeValues: NetHostConnectionSubtypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionSubtypeValues>([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nconst TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nconst TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nconst TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nconst TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0 in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n\n/**\n * Identifies the Values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport type HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0';\n\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1';\n\n  /** HTTP 2. */\n  HTTP_2_0: '2.0';\n\n  /** SPDY protocol. */\n  SPDY: 'SPDY';\n\n  /** QUIC protocol. */\n  QUIC: 'QUIC';\n};\n\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport const HttpFlavorValues: HttpFlavorValues = {\n  HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n  HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n  HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n  SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n  QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_QUEUE =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Removed in semconv v1.20.0.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_TOPIC =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n\n/**\n * Identifies the Values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport type MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue';\n\n  /** A message sent to a topic. */\n  TOPIC: 'topic';\n};\n\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport const MessagingDestinationKindValues: MessagingDestinationKindValues =\n  /*#__PURE__*/ createConstMap<MessagingDestinationKindValues>([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nconst TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_RECEIVE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_RECEIVE =\n  TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_TYPE_VALUE_PROCESS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGINGOPERATIONVALUES_PROCESS =\n  TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n\n/**\n * Identifies the Values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport type MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive';\n\n  /** process. */\n  PROCESS: 'process';\n};\n\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport const MessagingOperationValues: MessagingOperationValues =\n  /*#__PURE__*/ createConstMap<MessagingOperationValues>([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nconst TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nconst TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nconst TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nconst TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nconst TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nconst TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_CANCELLED =\n  TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNKNOWN =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT =\n  TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED =\n  TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_NOT_FOUND =\n  TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS =\n  TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED =\n  TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION =\n  TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_ABORTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE =\n  TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_INTERNAL =\n  TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_DATA_LOSS =\n  TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n\n/**\n * Identifies the Values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport type RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0;\n\n  /** CANCELLED. */\n  CANCELLED: 1;\n\n  /** UNKNOWN. */\n  UNKNOWN: 2;\n\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3;\n\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4;\n\n  /** NOT_FOUND. */\n  NOT_FOUND: 5;\n\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6;\n\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7;\n\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8;\n\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9;\n\n  /** ABORTED. */\n  ABORTED: 10;\n\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11;\n\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12;\n\n  /** INTERNAL. */\n  INTERNAL: 13;\n\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14;\n\n  /** DATA_LOSS. */\n  DATA_LOSS: 15;\n\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16;\n};\n\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport const RpcGrpcStatusCodeValues: RpcGrpcStatusCodeValues = {\n  OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n  CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n  UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n  INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n  NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n  ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n  PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n  ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n  OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n  UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n  INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n  UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n  DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n  UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nconst TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED in [incubating entry-point]({@link https://github.com/open-telemetry/opentelemetry-js/blob/main/semantic-conventions/README.md#unstable-semconv}).\n */\nexport const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n\n/**\n * Identifies the Values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport type MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT';\n\n  /** received. */\n  RECEIVED: 'RECEIVED';\n};\n\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport const MessageTypeValues: MessageTypeValues =\n  /*#__PURE__*/ createConstMap<MessageTypeValues>([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n  ]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceState,\n} from '@opentelemetry/api';\n\n/**\n * A sampling decision that determines how a {@link Span} will be recorded\n * and collected.\n */\nexport enum SamplingDecision {\n  /**\n   * `Span.isRecording() === false`, span will not be recorded and all events\n   * and attributes will be dropped.\n   */\n  NOT_RECORD,\n  /**\n   * `Span.isRecording() === true`, but `Sampled` flag in {@link TraceFlags}\n   * MUST NOT be set.\n   */\n  RECORD,\n  /**\n   * `Span.isRecording() === true` AND `Sampled` flag in {@link TraceFlags}\n   * MUST be set.\n   */\n  RECORD_AND_SAMPLED,\n}\n\n/**\n * A sampling result contains a decision for a {@link Span} and additional\n * attributes the sampler would like to added to the Span.\n */\nexport interface SamplingResult {\n  /**\n   * A sampling decision, refer to {@link SamplingDecision} for details.\n   */\n  decision: SamplingDecision;\n  /**\n   * The list of attributes returned by SamplingResult MUST be immutable.\n   * Caller may call {@link Sampler}.shouldSample any number of times and\n   * can safely cache the returned value.\n   */\n  attributes?: Readonly<SpanAttributes>;\n  /**\n   * A {@link TraceState} that will be associated with the {@link Span} through\n   * the new {@link SpanContext}. Samplers SHOULD return the TraceState from\n   * the passed-in {@link Context} if they do not intend to change it. Leaving\n   * the value undefined will also leave the TraceState unchanged.\n   */\n  traceState?: TraceState;\n}\n\n/**\n * This interface represent a sampler. Sampling is a mechanism to control the\n * noise and overhead introduced by OpenTelemetry by reducing the number of\n * samples of traces collected and sent to the backend.\n */\nexport interface Sampler {\n  /**\n   * Checks whether span needs to be created and tracked.\n   *\n   * @param context Parent Context which may contain a span.\n   * @param traceId of the span to be created. It can be different from the\n   *     traceId in the {@link SpanContext}. Typically in situations when the\n   *     span to be created starts a new trace.\n   * @param spanName of the span to be created.\n   * @param spanKind of the span to be created.\n   * @param attributes Initial set of SpanAttributes for the Span being constructed.\n   * @param links Collection of links that will be associated with the Span to\n   *     be created. Typically useful for batch operations.\n   * @returns a {@link SamplingResult}.\n   */\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult;\n\n  /** Returns the sampler name or short description with the configuration. */\n  toString(): string;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  diag,\n  Exception,\n  HrTime,\n  Link,\n  Span as APISpan,\n  SpanAttributes,\n  SpanAttributeValue,\n  SpanContext,\n  SpanKind,\n  SpanStatus,\n  SpanStatusCode,\n  TimeInput,\n} from '@opentelemetry/api';\nimport {\n  addHrTimes,\n  millisToHrTime,\n  getTimeOrigin,\n  hrTime,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isAttributeValue,\n  isTimeInput,\n  isTimeInputHrTime,\n  otperformance,\n  sanitizeAttributes,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport {\n  SEMATTRS_EXCEPTION_MESSAGE,\n  SEMATTRS_EXCEPTION_STACKTRACE,\n  SEMATTRS_EXCEPTION_TYPE,\n} from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { SpanProcessor } from './SpanProcessor';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanLimits } from './types';\n\n/**\n * This class represents a span.\n */\nexport class Span implements APISpan, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: SpanContext;\n  readonly kind: SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: SpanAttributes = {};\n  readonly links: Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: HrTime;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  private _droppedAttributesCount = 0;\n  private _droppedEventsCount: number = 0;\n  private _droppedLinksCount: number = 0;\n\n  name: string;\n  status: SpanStatus = {\n    code: SpanStatusCode.UNSET,\n  };\n  endTime: HrTime = [0, 0];\n  private _ended = false;\n  private _duration: HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n\n  private readonly _performanceStartTime: number;\n  private readonly _performanceOffset: number;\n  private readonly _startTimeProvided: boolean;\n\n  /**\n   * Constructs a new Span instance.\n   *\n   * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n   * */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: SpanContext,\n    kind: SpanKind,\n    parentSpanId?: string,\n    links: Link[] = [],\n    startTime?: TimeInput,\n    _deprecatedClock?: unknown, // keeping this argument even though it is unused to ensure backwards compatibility\n    attributes?: SpanAttributes\n  ) {\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n\n    const now = Date.now();\n    this._performanceStartTime = otperformance.now();\n    this._performanceOffset =\n      now - (this._performanceStartTime + getTimeOrigin());\n    this._startTimeProvided = startTime != null;\n\n    this.startTime = this._getTime(startTime ?? now);\n\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._attributeValueLengthLimit =\n      this._spanLimits.attributeValueLengthLimit || 0;\n\n    if (attributes != null) {\n      this.setAttributes(attributes);\n    }\n\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n  }\n\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n        this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      this._droppedAttributesCount++;\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [timeStamp] Specified time stamp for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: SpanAttributes | TimeInput,\n    timeStamp?: TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      diag.warn('No events allowed.');\n      this._droppedEventsCount++;\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      if (this._droppedEventsCount === 0) {\n        diag.debug('Dropping extra events.');\n      }\n      this.events.shift();\n      this._droppedEventsCount++;\n    }\n\n    if (isTimeInput(attributesOrStartTime)) {\n      if (!isTimeInput(timeStamp)) {\n        timeStamp = attributesOrStartTime;\n      }\n      attributesOrStartTime = undefined;\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n\n    this.events.push({\n      name,\n      attributes,\n      time: this._getTime(timeStamp),\n      droppedAttributesCount: 0,\n    });\n    return this;\n  }\n\n  addLink(link: Link): this {\n    this.links.push(link);\n    return this;\n  }\n\n  addLinks(links: Link[]): this {\n    this.links.push(...links);\n    return this;\n  }\n\n  setStatus(status: SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = { ...status };\n\n    // When using try-catch, the caught \"error\" is of type `any`. When then assigning `any` to `status.message`,\n    // TypeScript will not error. While this can happen during use of any API, it is more common on Span#setStatus()\n    // as it's likely used in a catch-block. Therefore, we validate if `status.message` is actually a string, null, or\n    // undefined to avoid an incorrect type causing issues downstream.\n    if (this.status.message != null && typeof status.message !== 'string') {\n      diag.warn(\n        `Dropping invalid status.message of type '${typeof status.message}', expected 'string'`\n      );\n      delete this.status.message;\n    }\n\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime?: TimeInput): void {\n    if (this._isSpanEnded()) {\n      diag.error(\n        `${this.name} ${this._spanContext.traceId}-${this._spanContext.spanId} - You can only call end() on a span once.`\n      );\n      return;\n    }\n    this._ended = true;\n\n    this.endTime = this._getTime(endTime);\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n\n    if (this._duration[0] < 0) {\n      diag.warn(\n        'Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.',\n        this.startTime,\n        this.endTime\n      );\n      this.endTime = this.startTime.slice() as HrTime;\n      this._duration = [0, 0];\n    }\n\n    if (this._droppedEventsCount > 0) {\n      diag.warn(\n        `Dropped ${this._droppedEventsCount} events because eventCountLimit reached`\n      );\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  private _getTime(inp?: TimeInput): HrTime {\n    if (typeof inp === 'number' && inp <= otperformance.now()) {\n      // must be a performance timestamp\n      // apply correction and convert to hrtime\n      return hrTime(inp + this._performanceOffset);\n    }\n\n    if (typeof inp === 'number') {\n      return millisToHrTime(inp);\n    }\n\n    if (inp instanceof Date) {\n      return millisToHrTime(inp.getTime());\n    }\n\n    if (isTimeInputHrTime(inp)) {\n      return inp;\n    }\n\n    if (this._startTimeProvided) {\n      // if user provided a time for the start manually\n      // we can't use duration to calculate event/end times\n      return millisToHrTime(Date.now());\n    }\n\n    const msDuration = otperformance.now() - this._performanceStartTime;\n    return addHrTimes(this.startTime, millisToHrTime(msDuration));\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: Exception, time?: TimeInput): void {\n    const attributes: SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SEMATTRS_EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SEMATTRS_EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SEMATTRS_EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SEMATTRS_EXCEPTION_TYPE] ||\n      attributes[SEMATTRS_EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  get droppedAttributesCount(): number {\n    return this._droppedAttributesCount;\n  }\n\n  get droppedEventsCount(): number {\n    return this._droppedEventsCount;\n  }\n\n  get droppedLinksCount(): number {\n    return this._droppedLinksCount;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      diag.warn(\n        `Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`\n      );\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substring(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with truncated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val =>\n        typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val\n      );\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples no traces. */\nexport class AlwaysOffSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOffSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples all traces. */\nexport class AlwaysOnSampler implements Sampler {\n  shouldSample(): SamplingResult {\n    return {\n      decision: SamplingDecision.RECORD_AND_SAMPLED,\n    };\n  }\n\n  toString(): string {\n    return 'AlwaysOnSampler';\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '@opentelemetry/api';\nimport { loggingErrorHandler } from './logging-error-handler';\nimport { ErrorHandler } from './types';\n\n/** The global error handler delegate */\nlet delegateHandler = loggingErrorHandler();\n\n/**\n * Set the global error handler\n * @param {ErrorHandler} handler\n */\nexport function setGlobalErrorHandler(handler: ErrorHandler): void {\n  delegateHandler = handler;\n}\n\n/**\n * Return the global error handler\n * @param {Exception} ex\n */\nexport function globalErrorHandler(ex: Exception): void {\n  try {\n    delegateHandler(ex);\n  } catch {} // eslint-disable-line no-empty\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, Exception } from '@opentelemetry/api';\nimport { ErrorHandler } from './types';\n\n/**\n * Returns a function that logs an error using the provided logger, or a\n * console logger if one was not provided.\n */\nexport function loggingErrorHandler(): ErrorHandler {\n  return (ex: Exception) => {\n    diag.error(stringifyException(ex));\n  };\n}\n\n/**\n * Converts an exception into a string representation\n * @param {Exception} ex\n */\nfunction stringifyException(ex: Exception | string): string {\n  if (typeof ex === 'string') {\n    return ex;\n  } else {\n    return JSON.stringify(flattenException(ex));\n  }\n}\n\n/**\n * Flattens an exception into key-value pairs by traversing the prototype chain\n * and coercing values to strings. Duplicate properties will not be overwritten;\n * the first insert wins.\n */\nfunction flattenException(ex: Exception): Record<string, string> {\n  const result = {} as Record<string, string>;\n  let current = ex;\n\n  while (current !== null) {\n    Object.getOwnPropertyNames(current).forEach(propertyName => {\n      if (result[propertyName]) return;\n      const value = current[propertyName as keyof typeof current];\n      if (value) {\n        result[propertyName] = String(value);\n      }\n    });\n    current = Object.getPrototypeOf(current);\n  }\n\n  return result;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Context,\n  isSpanContextValid,\n  Link,\n  SpanAttributes,\n  SpanKind,\n  TraceFlags,\n  trace,\n} from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { AlwaysOffSampler } from './AlwaysOffSampler';\nimport { AlwaysOnSampler } from './AlwaysOnSampler';\nimport { Sampler, SamplingResult } from '../Sampler';\n\n/**\n * A composite sampler that either respects the parent span's sampling decision\n * or delegates to `delegateSampler` for root spans.\n */\nexport class ParentBasedSampler implements Sampler {\n  private _root: Sampler;\n  private _remoteParentSampled: Sampler;\n  private _remoteParentNotSampled: Sampler;\n  private _localParentSampled: Sampler;\n  private _localParentNotSampled: Sampler;\n\n  constructor(config: ParentBasedSamplerConfig) {\n    this._root = config.root;\n\n    if (!this._root) {\n      globalErrorHandler(\n        new Error('ParentBasedSampler must have a root sampler configured')\n      );\n      this._root = new AlwaysOnSampler();\n    }\n\n    this._remoteParentSampled =\n      config.remoteParentSampled ?? new AlwaysOnSampler();\n    this._remoteParentNotSampled =\n      config.remoteParentNotSampled ?? new AlwaysOffSampler();\n    this._localParentSampled =\n      config.localParentSampled ?? new AlwaysOnSampler();\n    this._localParentNotSampled =\n      config.localParentNotSampled ?? new AlwaysOffSampler();\n  }\n\n  shouldSample(\n    context: Context,\n    traceId: string,\n    spanName: string,\n    spanKind: SpanKind,\n    attributes: SpanAttributes,\n    links: Link[]\n  ): SamplingResult {\n    const parentContext = trace.getSpanContext(context);\n\n    if (!parentContext || !isSpanContextValid(parentContext)) {\n      return this._root.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.isRemote) {\n      if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n        return this._remoteParentSampled.shouldSample(\n          context,\n          traceId,\n          spanName,\n          spanKind,\n          attributes,\n          links\n        );\n      }\n      return this._remoteParentNotSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    if (parentContext.traceFlags & TraceFlags.SAMPLED) {\n      return this._localParentSampled.shouldSample(\n        context,\n        traceId,\n        spanName,\n        spanKind,\n        attributes,\n        links\n      );\n    }\n\n    return this._localParentNotSampled.shouldSample(\n      context,\n      traceId,\n      spanName,\n      spanKind,\n      attributes,\n      links\n    );\n  }\n\n  toString(): string {\n    return `ParentBased{root=${this._root.toString()}, remoteParentSampled=${this._remoteParentSampled.toString()}, remoteParentNotSampled=${this._remoteParentNotSampled.toString()}, localParentSampled=${this._localParentSampled.toString()}, localParentNotSampled=${this._localParentNotSampled.toString()}}`;\n  }\n}\n\ninterface ParentBasedSamplerConfig {\n  /** Sampler called for spans with no parent */\n  root: Sampler;\n  /** Sampler called for spans with a remote parent which was sampled. Default AlwaysOn */\n  remoteParentSampled?: Sampler;\n  /** Sampler called for spans with a remote parent which was not sampled. Default AlwaysOff */\n  remoteParentNotSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was sampled. Default AlwaysOn */\n  localParentSampled?: Sampler;\n  /** Sampler called for spans with a local parent which was not sampled. Default AlwaysOff */\n  localParentNotSampled?: Sampler;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isValidTraceId } from '@opentelemetry/api';\nimport { Sampler, SamplingDecision, SamplingResult } from '../Sampler';\n\n/** Sampler that samples a given fraction of traces based of trace id deterministically. */\nexport class TraceIdRatioBasedSampler implements Sampler {\n  private _upperBound: number;\n\n  constructor(private readonly _ratio: number = 0) {\n    this._ratio = this._normalize(_ratio);\n    this._upperBound = Math.floor(this._ratio * 0xffffffff);\n  }\n\n  shouldSample(context: unknown, traceId: string): SamplingResult {\n    return {\n      decision:\n        isValidTraceId(traceId) && this._accumulate(traceId) < this._upperBound\n          ? SamplingDecision.RECORD_AND_SAMPLED\n          : SamplingDecision.NOT_RECORD,\n    };\n  }\n\n  toString(): string {\n    return `TraceIdRatioBased{${this._ratio}}`;\n  }\n\n  private _normalize(ratio: number): number {\n    if (typeof ratio !== 'number' || isNaN(ratio)) return 0;\n    return ratio >= 1 ? 1 : ratio <= 0 ? 0 : ratio;\n  }\n\n  private _accumulate(traceId: string): number {\n    let accumulation = 0;\n    for (let i = 0; i < traceId.length / 8; i++) {\n      const pos = i * 8;\n      const part = parseInt(traceId.slice(pos, pos + 8), 16);\n      accumulation = (accumulation ^ part) >>> 0;\n    }\n    return accumulation;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag } from '@opentelemetry/api';\nimport { getEnv, TracesSamplerValues, ENVIRONMENT } from '@opentelemetry/core';\nimport { Sampler } from './Sampler';\nimport { AlwaysOffSampler } from './sampler/AlwaysOffSampler';\nimport { AlwaysOnSampler } from './sampler/AlwaysOnSampler';\nimport { ParentBasedSampler } from './sampler/ParentBasedSampler';\nimport { TraceIdRatioBasedSampler } from './sampler/TraceIdRatioBasedSampler';\n\nconst FALLBACK_OTEL_TRACES_SAMPLER = TracesSamplerValues.AlwaysOn;\nconst DEFAULT_RATIO = 1;\n\n/**\n * Load default configuration. For fields with primitive values, any user-provided\n * value will override the corresponding default value. For fields with\n * non-primitive values (like `spanLimits`), the user-provided value will be\n * used to extend the default value.\n */\n\n// object needs to be wrapped in this function and called when needed otherwise\n// envs are parsed before tests are ran - causes tests using these envs to fail\nexport function loadDefaultConfig() {\n  const env = getEnv();\n\n  return {\n    sampler: buildSamplerFromEnv(env),\n    forceFlushTimeoutMillis: 30000,\n    generalLimits: {\n      attributeValueLengthLimit: env.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: env.OTEL_ATTRIBUTE_COUNT_LIMIT,\n    },\n    spanLimits: {\n      attributeValueLengthLimit: env.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n      attributeCountLimit: env.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,\n      linkCountLimit: env.OTEL_SPAN_LINK_COUNT_LIMIT,\n      eventCountLimit: env.OTEL_SPAN_EVENT_COUNT_LIMIT,\n      attributePerEventCountLimit:\n        env.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,\n      attributePerLinkCountLimit: env.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT,\n    },\n    mergeResourceWithDefaults: true,\n  };\n}\n\n/**\n * Based on environment, builds a sampler, complies with specification.\n * @param environment optional, by default uses getEnv(), but allows passing a value to reuse parsed environment\n */\nexport function buildSamplerFromEnv(\n  environment: Required<ENVIRONMENT> = getEnv()\n): Sampler {\n  switch (environment.OTEL_TRACES_SAMPLER) {\n    case TracesSamplerValues.AlwaysOn:\n      return new AlwaysOnSampler();\n    case TracesSamplerValues.AlwaysOff:\n      return new AlwaysOffSampler();\n    case TracesSamplerValues.ParentBasedAlwaysOn:\n      return new ParentBasedSampler({\n        root: new AlwaysOnSampler(),\n      });\n    case TracesSamplerValues.ParentBasedAlwaysOff:\n      return new ParentBasedSampler({\n        root: new AlwaysOffSampler(),\n      });\n    case TracesSamplerValues.TraceIdRatio:\n      return new TraceIdRatioBasedSampler(\n        getSamplerProbabilityFromEnv(environment)\n      );\n    case TracesSamplerValues.ParentBasedTraceIdRatio:\n      return new ParentBasedSampler({\n        root: new TraceIdRatioBasedSampler(\n          getSamplerProbabilityFromEnv(environment)\n        ),\n      });\n    default:\n      diag.error(\n        `OTEL_TRACES_SAMPLER value \"${environment.OTEL_TRACES_SAMPLER} invalid, defaulting to ${FALLBACK_OTEL_TRACES_SAMPLER}\".`\n      );\n      return new AlwaysOnSampler();\n  }\n}\n\nfunction getSamplerProbabilityFromEnv(\n  environment: Required<ENVIRONMENT>\n): number | undefined {\n  if (\n    environment.OTEL_TRACES_SAMPLER_ARG === undefined ||\n    environment.OTEL_TRACES_SAMPLER_ARG === ''\n  ) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG is blank, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  const probability = Number(environment.OTEL_TRACES_SAMPLER_ARG);\n\n  if (isNaN(probability)) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is invalid, defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  if (probability < 0 || probability > 1) {\n    diag.error(\n      `OTEL_TRACES_SAMPLER_ARG=${environment.OTEL_TRACES_SAMPLER_ARG} was given, but it is out of range ([0..1]), defaulting to ${DEFAULT_RATIO}.`\n    );\n    return DEFAULT_RATIO;\n  }\n\n  return probability;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { buildSamplerFromEnv, loadDefaultConfig } from './config';\nimport { Sampler } from './Sampler';\nimport { SpanLimits, TracerConfig, GeneralLimits } from './types';\nimport {\n  DEFAULT_ATTRIBUTE_COUNT_LIMIT,\n  DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT,\n  getEnvWithoutDefaults,\n} from '@opentelemetry/core';\n\n/**\n * Function to merge Default configuration (as specified in './config') with\n * user provided configurations.\n */\nexport function mergeConfig(userConfig: TracerConfig): TracerConfig & {\n  sampler: Sampler;\n  spanLimits: SpanLimits;\n  generalLimits: GeneralLimits;\n} {\n  const perInstanceDefaults: Partial<TracerConfig> = {\n    sampler: buildSamplerFromEnv(),\n  };\n\n  const DEFAULT_CONFIG = loadDefaultConfig();\n\n  const target = Object.assign(\n    {},\n    DEFAULT_CONFIG,\n    perInstanceDefaults,\n    userConfig\n  );\n\n  target.generalLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.generalLimits,\n    userConfig.generalLimits || {}\n  );\n\n  target.spanLimits = Object.assign(\n    {},\n    DEFAULT_CONFIG.spanLimits,\n    userConfig.spanLimits || {}\n  );\n\n  return target;\n}\n\n/**\n * When general limits are provided and model specific limits are not,\n * configures the model specific limits by using the values from the general ones.\n * @param userConfig User provided tracer configuration\n */\nexport function reconfigureLimits(userConfig: TracerConfig): TracerConfig {\n  const spanLimits = Object.assign({}, userConfig.spanLimits);\n\n  const parsedEnvConfig = getEnvWithoutDefaults();\n\n  /**\n   * Reassign span attribute count limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeCountLimit =\n    userConfig.spanLimits?.attributeCountLimit ??\n    userConfig.generalLimits?.attributeCountLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_COUNT_LIMIT ??\n    DEFAULT_ATTRIBUTE_COUNT_LIMIT;\n\n  /**\n   * Reassign span attribute value length limit to use first non null value defined by user or use default value\n   */\n  spanLimits.attributeValueLengthLimit =\n    userConfig.spanLimits?.attributeValueLengthLimit ??\n    userConfig.generalLimits?.attributeValueLengthLimit ??\n    parsedEnvConfig.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    parsedEnvConfig.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT ??\n    DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT;\n\n  return Object.assign({}, userConfig, { spanLimits });\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IdGenerator } from '../../IdGenerator';\n\nconst SPAN_ID_BYTES = 8;\nconst TRACE_ID_BYTES = 16;\n\nexport class RandomIdGenerator implements IdGenerator {\n  /**\n   * Returns a random 16-byte trace ID formatted/encoded as a 32 lowercase hex\n   * characters corresponding to 128 bits.\n   */\n  generateTraceId = getIdGenerator(TRACE_ID_BYTES);\n\n  /**\n   * Returns a random 8-byte span ID formatted/encoded as a 16 lowercase hex\n   * characters corresponding to 64 bits.\n   */\n  generateSpanId = getIdGenerator(SPAN_ID_BYTES);\n}\n\nconst SHARED_CHAR_CODES_ARRAY = Array(32);\nfunction getIdGenerator(bytes: number): () => string {\n  return function generateId() {\n    for (let i = 0; i < bytes * 2; i++) {\n      SHARED_CHAR_CODES_ARRAY[i] = Math.floor(Math.random() * 16) + 48;\n      // valid hex characters in the range 48-57 and 97-102\n      if (SHARED_CHAR_CODES_ARRAY[i] >= 58) {\n        SHARED_CHAR_CODES_ARRAY[i] += 39;\n      }\n    }\n    return String.fromCharCode.apply(\n      null,\n      SHARED_CHAR_CODES_ARRAY.slice(0, bytes * 2)\n    );\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationLibrary,\n  sanitizeAttributes,\n  isTracingSuppressed,\n} from '@opentelemetry/core';\nimport { IResource } from '@opentelemetry/resources';\nimport { BasicTracerProvider } from './BasicTracerProvider';\nimport { Span } from './Span';\nimport { GeneralLimits, SpanLimits, TracerConfig } from './types';\nimport { mergeConfig } from './utility';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Sampler } from './Sampler';\nimport { IdGenerator } from './IdGenerator';\nimport { RandomIdGenerator } from './platform';\n\n/**\n * This class represents a basic tracer.\n */\nexport class Tracer implements api.Tracer {\n  private readonly _sampler: Sampler;\n  private readonly _generalLimits: GeneralLimits;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _idGenerator: IdGenerator;\n  readonly resource: IResource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n\n  /**\n   * Constructs a new Tracer instance.\n   */\n  constructor(\n    instrumentationLibrary: InstrumentationLibrary,\n    config: TracerConfig,\n    private _tracerProvider: BasicTracerProvider\n  ) {\n    const localConfig = mergeConfig(config);\n    this._sampler = localConfig.sampler;\n    this._generalLimits = localConfig.generalLimits;\n    this._spanLimits = localConfig.spanLimits;\n    this._idGenerator = config.idGenerator || new RandomIdGenerator();\n    this.resource = _tracerProvider.resource;\n    this.instrumentationLibrary = instrumentationLibrary;\n  }\n\n  /**\n   * Starts a new Span or returns the default NoopSpan based on the sampling\n   * decision.\n   */\n  startSpan(\n    name: string,\n    options: api.SpanOptions = {},\n    context = api.context.active()\n  ): api.Span {\n    // remove span from context in case a root span is requested via options\n    if (options.root) {\n      context = api.trace.deleteSpan(context);\n    }\n    const parentSpan = api.trace.getSpan(context);\n\n    if (isTracingSuppressed(context)) {\n      api.diag.debug('Instrumentation suppressed, returning Noop Span');\n      const nonRecordingSpan = api.trace.wrapSpanContext(\n        api.INVALID_SPAN_CONTEXT\n      );\n      return nonRecordingSpan;\n    }\n\n    const parentSpanContext = parentSpan?.spanContext();\n    const spanId = this._idGenerator.generateSpanId();\n    let traceId;\n    let traceState;\n    let parentSpanId;\n    if (\n      !parentSpanContext ||\n      !api.trace.isSpanContextValid(parentSpanContext)\n    ) {\n      // New root span.\n      traceId = this._idGenerator.generateTraceId();\n    } else {\n      // New child span.\n      traceId = parentSpanContext.traceId;\n      traceState = parentSpanContext.traceState;\n      parentSpanId = parentSpanContext.spanId;\n    }\n\n    const spanKind = options.kind ?? api.SpanKind.INTERNAL;\n    const links = (options.links ?? []).map(link => {\n      return {\n        context: link.context,\n        attributes: sanitizeAttributes(link.attributes),\n      };\n    });\n    const attributes = sanitizeAttributes(options.attributes);\n    // make sampling decision\n    const samplingResult = this._sampler.shouldSample(\n      context,\n      traceId,\n      name,\n      spanKind,\n      attributes,\n      links\n    );\n\n    traceState = samplingResult.traceState ?? traceState;\n\n    const traceFlags =\n      samplingResult.decision === api.SamplingDecision.RECORD_AND_SAMPLED\n        ? api.TraceFlags.SAMPLED\n        : api.TraceFlags.NONE;\n    const spanContext = { traceId, spanId, traceFlags, traceState };\n    if (samplingResult.decision === api.SamplingDecision.NOT_RECORD) {\n      api.diag.debug(\n        'Recording is off, propagating context in a non-recording span'\n      );\n      const nonRecordingSpan = api.trace.wrapSpanContext(spanContext);\n      return nonRecordingSpan;\n    }\n\n    // Set initial span attributes. The attributes object may have been mutated\n    // by the sampler, so we sanitize the merged attributes before setting them.\n    const initAttributes = sanitizeAttributes(\n      Object.assign(attributes, samplingResult.attributes)\n    );\n\n    const span = new Span(\n      this,\n      context,\n      name,\n      spanContext,\n      spanKind,\n      parentSpanId,\n      links,\n      options.startTime,\n      undefined,\n      initAttributes\n    );\n    return span;\n  }\n\n  /**\n   * Starts a new {@link Span} and calls the given function passing it the\n   * created span as first argument.\n   * Additionally the new span gets set in context and this context is activated\n   * for the duration of the function call.\n   *\n   * @param name The name of the span\n   * @param [options] SpanOptions used for span creation\n   * @param [context] Context to use to extract parent\n   * @param fn function called in the context of the span and receives the newly created span as an argument\n   * @returns return value of fn\n   * @example\n   *   const something = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       span.setStatus({code: SpanStatusCode.OK});\n   *       return something;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     } finally {\n   *       span.end();\n   *     }\n   *   });\n   * @example\n   *   const span = tracer.startActiveSpan('op', span => {\n   *     try {\n   *       do some work\n   *       return span;\n   *     } catch (err) {\n   *       span.setStatus({\n   *         code: SpanStatusCode.ERROR,\n   *         message: err.message,\n   *       });\n   *       throw err;\n   *     }\n   *   });\n   *   do some more work\n   *   span.end();\n   */\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    opts: api.SpanOptions,\n    ctx: api.Context,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: api.Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | api.SpanOptions,\n    arg3?: F | api.Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: api.SpanOptions | undefined;\n    let ctx: api.Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as api.SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as api.SpanOptions | undefined;\n      ctx = arg3 as api.Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? api.context.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = api.trace.setSpan(parentContext, span);\n\n    return api.context.with(contextWithSpanSet, fn, undefined, span);\n  }\n\n  /** Returns the active {@link GeneralLimits}. */\n  getGeneralLimits(): GeneralLimits {\n    return this._generalLimits;\n  }\n\n  /** Returns the active {@link SpanLimits}. */\n  getSpanLimits(): SpanLimits {\n    return this._spanLimits;\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this._tracerProvider.getActiveSpanProcessor();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface ExportResult {\n  code: ExportResultCode;\n  error?: Error;\n}\n\nexport enum ExportResultCode {\n  SUCCESS,\n  FAILED,\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { globalErrorHandler } from '@opentelemetry/core';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { Span } from './Span';\nimport { SpanProcessor } from './SpanProcessor';\n\n/**\n * Implementation of the {@link SpanProcessor} that simply forwards all\n * received events to a list of {@link SpanProcessor}s.\n */\nexport class MultiSpanProcessor implements SpanProcessor {\n  constructor(private readonly _spanProcessors: SpanProcessor[]) {}\n\n  forceFlush(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.forceFlush());\n    }\n    return new Promise(resolve => {\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(error => {\n          globalErrorHandler(\n            error || new Error('MultiSpanProcessor: forceFlush failed')\n          );\n          resolve();\n        });\n    });\n  }\n\n  onStart(span: Span, context: Context): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onStart(span, context);\n    }\n  }\n\n  onEnd(span: ReadableSpan): void {\n    for (const spanProcessor of this._spanProcessors) {\n      spanProcessor.onEnd(span);\n    }\n  }\n\n  shutdown(): Promise<void> {\n    const promises: Promise<void>[] = [];\n\n    for (const spanProcessor of this._spanProcessors) {\n      promises.push(spanProcessor.shutdown());\n    }\n    return new Promise((resolve, reject) => {\n      Promise.all(promises).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '@opentelemetry/api';\nimport { ReadableSpan } from './ReadableSpan';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\n\n/** No-op implementation of SpanProcessor */\nexport class NoopSpanProcessor implements SpanProcessor {\n  onStart(_span: Span, _context: Context): void {}\n  onEnd(_span: ReadableSpan): void {}\n  shutdown(): Promise<void> {\n    return Promise.resolve();\n  }\n  forceFlush(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<T> {\n  private _promise: Promise<T>;\n  private _resolve!: (val: T) => void;\n  private _reject!: (error: unknown) => void;\n  constructor() {\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  resolve(val: T) {\n    this._resolve(val);\n  }\n\n  reject(err: unknown) {\n    this._reject(err);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './promise';\n\n/**\n * Bind the callback and only invoke the callback once regardless how many times `BindOnceFuture.call` is invoked.\n */\nexport class BindOnceFuture<\n  R,\n  This = unknown,\n  T extends (this: This, ...args: unknown[]) => R = () => R,\n> {\n  private _isCalled = false;\n  private _deferred = new Deferred<R>();\n  constructor(\n    private _callback: T,\n    private _that: This\n  ) {}\n\n  get isCalled() {\n    return this._isCalled;\n  }\n\n  get promise() {\n    return this._deferred.promise;\n  }\n\n  call(...args: Parameters<T>): Promise<R> {\n    if (!this._isCalled) {\n      this._isCalled = true;\n      try {\n        Promise.resolve(this._callback.call(this._that, ...args)).then(\n          val => this._deferred.resolve(val),\n          err => this._deferred.reject(err)\n        );\n      } catch (err) {\n        this._deferred.reject(err);\n      }\n    }\n    return this._deferred.promise;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, Context, diag, TraceFlags } from '@opentelemetry/api';\nimport {\n  BindOnceFuture,\n  ExportResultCode,\n  getEnv,\n  globalErrorHandler,\n  suppressTracing,\n  unrefTimer,\n} from '@opentelemetry/core';\nimport { Span } from '../Span';\nimport { SpanProcessor } from '../SpanProcessor';\nimport { BufferConfig } from '../types';\nimport { ReadableSpan } from './ReadableSpan';\nimport { SpanExporter } from './SpanExporter';\n\n/**\n * Implementation of the {@link SpanProcessor} that batches spans exported by\n * the SDK then pushes them to the exporter pipeline.\n */\nexport abstract class BatchSpanProcessorBase<T extends BufferConfig>\n  implements SpanProcessor\n{\n  private readonly _maxExportBatchSize: number;\n  private readonly _maxQueueSize: number;\n  private readonly _scheduledDelayMillis: number;\n  private readonly _exportTimeoutMillis: number;\n\n  private _isExporting = false;\n  private _finishedSpans: ReadableSpan[] = [];\n  private _timer: NodeJS.Timeout | undefined;\n  private _shutdownOnce: BindOnceFuture<void>;\n  private _droppedSpansCount: number = 0;\n\n  constructor(\n    private readonly _exporter: SpanExporter,\n    config?: T\n  ) {\n    const env = getEnv();\n    this._maxExportBatchSize =\n      typeof config?.maxExportBatchSize === 'number'\n        ? config.maxExportBatchSize\n        : env.OTEL_BSP_MAX_EXPORT_BATCH_SIZE;\n    this._maxQueueSize =\n      typeof config?.maxQueueSize === 'number'\n        ? config.maxQueueSize\n        : env.OTEL_BSP_MAX_QUEUE_SIZE;\n    this._scheduledDelayMillis =\n      typeof config?.scheduledDelayMillis === 'number'\n        ? config.scheduledDelayMillis\n        : env.OTEL_BSP_SCHEDULE_DELAY;\n    this._exportTimeoutMillis =\n      typeof config?.exportTimeoutMillis === 'number'\n        ? config.exportTimeoutMillis\n        : env.OTEL_BSP_EXPORT_TIMEOUT;\n\n    this._shutdownOnce = new BindOnceFuture(this._shutdown, this);\n\n    if (this._maxExportBatchSize > this._maxQueueSize) {\n      diag.warn(\n        'BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize'\n      );\n      this._maxExportBatchSize = this._maxQueueSize;\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    if (this._shutdownOnce.isCalled) {\n      return this._shutdownOnce.promise;\n    }\n    return this._flushAll();\n  }\n\n  // does nothing.\n  onStart(_span: Span, _parentContext: Context): void {}\n\n  onEnd(span: ReadableSpan): void {\n    if (this._shutdownOnce.isCalled) {\n      return;\n    }\n\n    if ((span.spanContext().traceFlags & TraceFlags.SAMPLED) === 0) {\n      return;\n    }\n\n    this._addToBuffer(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this._shutdownOnce.call();\n  }\n\n  private _shutdown() {\n    return Promise.resolve()\n      .then(() => {\n        return this.onShutdown();\n      })\n      .then(() => {\n        return this._flushAll();\n      })\n      .then(() => {\n        return this._exporter.shutdown();\n      });\n  }\n\n  /** Add a span in the buffer. */\n  private _addToBuffer(span: ReadableSpan) {\n    if (this._finishedSpans.length >= this._maxQueueSize) {\n      // limit reached, drop span\n\n      if (this._droppedSpansCount === 0) {\n        diag.debug('maxQueueSize reached, dropping spans');\n      }\n      this._droppedSpansCount++;\n\n      return;\n    }\n\n    if (this._droppedSpansCount > 0) {\n      // some spans were dropped, log once with count of spans dropped\n      diag.warn(\n        `Dropped ${this._droppedSpansCount} spans because maxQueueSize reached`\n      );\n      this._droppedSpansCount = 0;\n    }\n\n    this._finishedSpans.push(span);\n    this._maybeStartTimer();\n  }\n\n  /**\n   * Send all spans to the exporter respecting the batch size limit\n   * This function is used only on forceFlush or shutdown,\n   * for all other cases _flush should be used\n   * */\n  private _flushAll(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const promises = [];\n      // calculate number of batches\n      const count = Math.ceil(\n        this._finishedSpans.length / this._maxExportBatchSize\n      );\n      for (let i = 0, j = count; i < j; i++) {\n        promises.push(this._flushOneBatch());\n      }\n      Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n\n  private _flushOneBatch(): Promise<void> {\n    this._clearTimer();\n    if (this._finishedSpans.length === 0) {\n      return Promise.resolve();\n    }\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        // don't wait anymore for export, this way the next batch can start\n        reject(new Error('Timeout'));\n      }, this._exportTimeoutMillis);\n      // prevent downstream exporter calls from generating spans\n      context.with(suppressTracing(context.active()), () => {\n        // Reset the finished spans buffer here because the next invocations of the _flush method\n        // could pass the same finished spans to the exporter if the buffer is cleared\n        // outside the execution of this callback.\n        let spans: ReadableSpan[];\n        if (this._finishedSpans.length <= this._maxExportBatchSize) {\n          spans = this._finishedSpans;\n          this._finishedSpans = [];\n        } else {\n          spans = this._finishedSpans.splice(0, this._maxExportBatchSize);\n        }\n\n        const doExport = () =>\n          this._exporter.export(spans, result => {\n            clearTimeout(timer);\n            if (result.code === ExportResultCode.SUCCESS) {\n              resolve();\n            } else {\n              reject(\n                result.error ??\n                  new Error('BatchSpanProcessor: span export failed')\n              );\n            }\n          });\n\n        let pendingResources: Array<Promise<void>> | null = null;\n        for (let i = 0, len = spans.length; i < len; i++) {\n          const span = spans[i];\n          if (\n            span.resource.asyncAttributesPending &&\n            span.resource.waitForAsyncAttributes\n          ) {\n            pendingResources ??= [];\n            pendingResources.push(span.resource.waitForAsyncAttributes());\n          }\n        }\n\n        // Avoid scheduling a promise to make the behavior more predictable and easier to test\n        if (pendingResources === null) {\n          doExport();\n        } else {\n          Promise.all(pendingResources).then(doExport, err => {\n            globalErrorHandler(err);\n            reject(err);\n          });\n        }\n      });\n    });\n  }\n\n  private _maybeStartTimer() {\n    if (this._isExporting) return;\n    const flush = () => {\n      this._isExporting = true;\n      this._flushOneBatch()\n        .finally(() => {\n          this._isExporting = false;\n          if (this._finishedSpans.length > 0) {\n            this._clearTimer();\n            this._maybeStartTimer();\n          }\n        })\n        .catch(e => {\n          this._isExporting = false;\n          globalErrorHandler(e);\n        });\n    };\n    // we only wait if the queue doesn't have enough elements yet\n    if (this._finishedSpans.length >= this._maxExportBatchSize) {\n      return flush();\n    }\n    if (this._timer !== undefined) return;\n    this._timer = setTimeout(() => flush(), this._scheduledDelayMillis);\n    unrefTimer(this._timer);\n  }\n\n  private _clearTimer() {\n    if (this._timer !== undefined) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n  }\n\n  protected abstract onShutdown(): void;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  context,\n  diag,\n  propagation,\n  TextMapPropagator,\n  trace,\n  TracerProvider,\n} from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  W3CBaggagePropagator,\n  W3CTraceContextPropagator,\n  getEnv,\n  merge,\n} from '@opentelemetry/core';\nimport { IResource, Resource } from '@opentelemetry/resources';\nimport { SpanProcessor } from './SpanProcessor';\nimport { Tracer } from './Tracer';\nimport { loadDefaultConfig } from './config';\nimport { MultiSpanProcessor } from './MultiSpanProcessor';\nimport { NoopSpanProcessor } from './export/NoopSpanProcessor';\nimport { SDKRegistrationConfig, TracerConfig } from './types';\nimport { SpanExporter } from './export/SpanExporter';\nimport { BatchSpanProcessor } from './platform';\nimport { reconfigureLimits } from './utility';\n\nexport type PROPAGATOR_FACTORY = () => TextMapPropagator;\nexport type EXPORTER_FACTORY = () => SpanExporter;\n\nexport enum ForceFlushState {\n  'resolved',\n  'timeout',\n  'error',\n  'unresolved',\n}\n\n/**\n * This class represents a basic tracer provider which platform libraries can extend\n */\nexport class BasicTracerProvider implements TracerProvider {\n  protected static readonly _registeredPropagators = new Map<\n    string,\n    PROPAGATOR_FACTORY\n  >([\n    ['tracecontext', () => new W3CTraceContextPropagator()],\n    ['baggage', () => new W3CBaggagePropagator()],\n  ]);\n\n  protected static readonly _registeredExporters = new Map<\n    string,\n    EXPORTER_FACTORY\n  >();\n\n  private readonly _config: TracerConfig;\n  private readonly _registeredSpanProcessors: SpanProcessor[] = [];\n  private readonly _tracers: Map<string, Tracer> = new Map();\n\n  activeSpanProcessor: SpanProcessor;\n  readonly resource: IResource;\n\n  constructor(config: TracerConfig = {}) {\n    const mergedConfig = merge(\n      {},\n      loadDefaultConfig(),\n      reconfigureLimits(config)\n    );\n    this.resource = mergedConfig.resource ?? Resource.empty();\n\n    if (mergedConfig.mergeResourceWithDefaults) {\n      this.resource = Resource.default().merge(this.resource);\n    }\n\n    this._config = Object.assign({}, mergedConfig, {\n      resource: this.resource,\n    });\n\n    if (config.spanProcessors?.length) {\n      this._registeredSpanProcessors = [...config.spanProcessors];\n      this.activeSpanProcessor = new MultiSpanProcessor(\n        this._registeredSpanProcessors\n      );\n    } else {\n      const defaultExporter = this._buildExporterFromEnv();\n      if (defaultExporter !== undefined) {\n        const batchProcessor = new BatchSpanProcessor(defaultExporter);\n        this.activeSpanProcessor = batchProcessor;\n      } else {\n        this.activeSpanProcessor = new NoopSpanProcessor();\n      }\n    }\n  }\n\n  getTracer(\n    name: string,\n    version?: string,\n    options?: { schemaUrl?: string }\n  ): Tracer {\n    const key = `${name}@${version || ''}:${options?.schemaUrl || ''}`;\n    if (!this._tracers.has(key)) {\n      this._tracers.set(\n        key,\n        new Tracer(\n          { name, version, schemaUrl: options?.schemaUrl },\n          this._config,\n          this\n        )\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this._tracers.get(key)!;\n  }\n\n  /**\n   * @deprecated please use {@link TracerConfig} spanProcessors property\n   * Adds a new {@link SpanProcessor} to this tracer.\n   * @param spanProcessor the new SpanProcessor to be added.\n   */\n  addSpanProcessor(spanProcessor: SpanProcessor): void {\n    if (this._registeredSpanProcessors.length === 0) {\n      // since we might have enabled by default a batchProcessor, we disable it\n      // before adding the new one\n      this.activeSpanProcessor\n        .shutdown()\n        .catch(err =>\n          diag.error(\n            'Error while trying to shutdown current span processor',\n            err\n          )\n        );\n    }\n    this._registeredSpanProcessors.push(spanProcessor);\n    this.activeSpanProcessor = new MultiSpanProcessor(\n      this._registeredSpanProcessors\n    );\n  }\n\n  getActiveSpanProcessor(): SpanProcessor {\n    return this.activeSpanProcessor;\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  register(config: SDKRegistrationConfig = {}): void {\n    trace.setGlobalTracerProvider(this);\n    if (config.propagator === undefined) {\n      config.propagator = this._buildPropagatorFromEnv();\n    }\n\n    if (config.contextManager) {\n      context.setGlobalContextManager(config.contextManager);\n    }\n\n    if (config.propagator) {\n      propagation.setGlobalPropagator(config.propagator);\n    }\n  }\n\n  forceFlush(): Promise<void> {\n    const timeout = this._config.forceFlushTimeoutMillis;\n    const promises = this._registeredSpanProcessors.map(\n      (spanProcessor: SpanProcessor) => {\n        return new Promise(resolve => {\n          let state: ForceFlushState;\n          const timeoutInterval = setTimeout(() => {\n            resolve(\n              new Error(\n                `Span processor did not completed within timeout period of ${timeout} ms`\n              )\n            );\n            state = ForceFlushState.timeout;\n          }, timeout);\n\n          spanProcessor\n            .forceFlush()\n            .then(() => {\n              clearTimeout(timeoutInterval);\n              if (state !== ForceFlushState.timeout) {\n                state = ForceFlushState.resolved;\n                resolve(state);\n              }\n            })\n            .catch(error => {\n              clearTimeout(timeoutInterval);\n              state = ForceFlushState.error;\n              resolve(error);\n            });\n        });\n      }\n    );\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all(promises)\n        .then(results => {\n          const errors = results.filter(\n            result => result !== ForceFlushState.resolved\n          );\n          if (errors.length > 0) {\n            reject(errors);\n          } else {\n            resolve();\n          }\n        })\n        .catch(error => reject([error]));\n    });\n  }\n\n  shutdown(): Promise<void> {\n    return this.activeSpanProcessor.shutdown();\n  }\n\n  /**\n   * TS cannot yet infer the type of this.constructor:\n   * https://github.com/Microsoft/TypeScript/issues/3841#issuecomment-337560146\n   * There is no need to override either of the getters in your child class.\n   * The type of the registered component maps should be the same across all\n   * classes in the inheritance tree.\n   */\n  protected _getPropagator(name: string): TextMapPropagator | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredPropagators.get(name)?.();\n  }\n\n  protected _getSpanExporter(name: string): SpanExporter | undefined {\n    return (\n      this.constructor as typeof BasicTracerProvider\n    )._registeredExporters.get(name)?.();\n  }\n\n  protected _buildPropagatorFromEnv(): TextMapPropagator | undefined {\n    // per spec, propagators from env must be deduplicated\n    const uniquePropagatorNames = Array.from(\n      new Set(getEnv().OTEL_PROPAGATORS)\n    );\n\n    const propagators = uniquePropagatorNames.map(name => {\n      const propagator = this._getPropagator(name);\n      if (!propagator) {\n        diag.warn(\n          `Propagator \"${name}\" requested through environment variable is unavailable.`\n        );\n      }\n\n      return propagator;\n    });\n    const validPropagators = propagators.reduce<TextMapPropagator[]>(\n      (list, item) => {\n        if (item) {\n          list.push(item);\n        }\n        return list;\n      },\n      []\n    );\n\n    if (validPropagators.length === 0) {\n      return;\n    } else if (uniquePropagatorNames.length === 1) {\n      return validPropagators[0];\n    } else {\n      return new CompositePropagator({\n        propagators: validPropagators,\n      });\n    }\n  }\n\n  protected _buildExporterFromEnv(): SpanExporter | undefined {\n    const exporterName = getEnv().OTEL_TRACES_EXPORTER;\n    if (exporterName === 'none' || exporterName === '') return;\n    const exporter = this._getSpanExporter(exporterName);\n    if (!exporter) {\n      diag.error(\n        `Exporter \"${exporterName}\" requested through environment variable is unavailable.`\n      );\n    }\n    return exporter;\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BatchSpanProcessorBase } from '../../../export/BatchSpanProcessorBase';\nimport { SpanExporter } from '../../../export/SpanExporter';\nimport { BatchSpanProcessorBrowserConfig } from '../../../types';\nimport { globalErrorHandler } from '@opentelemetry/core';\n\nexport class BatchSpanProcessor extends BatchSpanProcessorBase<BatchSpanProcessorBrowserConfig> {\n  private _visibilityChangeListener?: () => void;\n  private _pageHideListener?: () => void;\n\n  constructor(\n    _exporter: SpanExporter,\n    config?: BatchSpanProcessorBrowserConfig\n  ) {\n    super(_exporter, config);\n    this.onInit(config);\n  }\n\n  private onInit(config?: BatchSpanProcessorBrowserConfig): void {\n    if (\n      config?.disableAutoFlushOnDocumentHide !== true &&\n      typeof document !== 'undefined'\n    ) {\n      this._visibilityChangeListener = () => {\n        if (document.visibilityState === 'hidden') {\n          this.forceFlush().catch(error => {\n            globalErrorHandler(error);\n          });\n        }\n      };\n      this._pageHideListener = () => {\n        this.forceFlush().catch(error => {\n          globalErrorHandler(error);\n        });\n      };\n      document.addEventListener(\n        'visibilitychange',\n        this._visibilityChangeListener\n      );\n\n      // use 'pagehide' event as a fallback for Safari; see https://bugs.webkit.org/show_bug.cgi?id=116769\n      document.addEventListener('pagehide', this._pageHideListener);\n    }\n  }\n\n  protected onShutdown(): void {\n    if (typeof document !== 'undefined') {\n      if (this._visibilityChangeListener) {\n        document.removeEventListener(\n          'visibilitychange',\n          this._visibilityChangeListener\n        );\n      }\n      if (this._pageHideListener) {\n        document.removeEventListener('pagehide', this._pageHideListener);\n      }\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context, ContextManager, ROOT_CONTEXT } from '@opentelemetry/api';\n\n/**\n * Stack Context Manager for managing the state in web\n * it doesn't fully support the async calls though\n */\nexport class StackContextManager implements ContextManager {\n  /**\n   * whether the context manager is enabled or not\n   */\n  private _enabled = false;\n\n  /**\n   * Keeps the reference to current context\n   */\n  public _currentContext = ROOT_CONTEXT;\n\n  /**\n   *\n   * @param context\n   * @param target Function to be executed within the context\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _bindFunction<T extends Function>(\n    context = ROOT_CONTEXT,\n    target: T\n  ): T {\n    const manager = this;\n    const contextWrapper = function (this: unknown, ...args: unknown[]) {\n      return manager.with(context, () => target.apply(this, args));\n    };\n    Object.defineProperty(contextWrapper, 'length', {\n      enumerable: false,\n      configurable: true,\n      writable: false,\n      value: target.length,\n    });\n    return contextWrapper as unknown as T;\n  }\n\n  /**\n   * Returns the active context\n   */\n  active(): Context {\n    return this._currentContext;\n  }\n\n  /**\n   * Binds a the certain context or the active one to the target function and then returns the target\n   * @param context A context (span) to be bind to target\n   * @param target a function or event emitter. When target or one of its callbacks is called,\n   *  the provided context will be used as the active context for the duration of the call.\n   */\n  bind<T>(context: Context, target: T): T {\n    // if no specific context to propagate is given, we use the current one\n    if (context === undefined) {\n      context = this.active();\n    }\n    if (typeof target === 'function') {\n      return this._bindFunction(context, target);\n    }\n    return target;\n  }\n\n  /**\n   * Disable the context manager (clears the current context)\n   */\n  disable(): this {\n    this._currentContext = ROOT_CONTEXT;\n    this._enabled = false;\n    return this;\n  }\n\n  /**\n   * Enables the context manager and creates a default(root) context\n   */\n  enable(): this {\n    if (this._enabled) {\n      return this;\n    }\n    this._enabled = true;\n    this._currentContext = ROOT_CONTEXT;\n    return this;\n  }\n\n  /**\n   * Calls the callback function [fn] with the provided [context]. If [context] is undefined then it will use the window.\n   * The context will be set as active\n   * @param context\n   * @param fn Callback function\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context | null,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    const previousContext = this._currentContext;\n    this._currentContext = context || ROOT_CONTEXT;\n\n    try {\n      return fn.call(thisArg, ...args);\n    } finally {\n      this._currentContext = previousContext;\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BasicTracerProvider,\n  SDKRegistrationConfig,\n  TracerConfig,\n} from '@opentelemetry/sdk-trace-base';\nimport { StackContextManager } from './StackContextManager';\n\n/**\n * WebTracerConfig provides an interface for configuring a Web Tracer.\n */\nexport type WebTracerConfig = TracerConfig;\n\n/**\n * This class represents a web tracer with {@link StackContextManager}\n */\nexport class WebTracerProvider extends BasicTracerProvider {\n  /**\n   * Constructs a new Tracer instance.\n   * @param config Web Tracer config\n   */\n  constructor(config: WebTracerConfig = {}) {\n    super(config);\n\n    if ((config as SDKRegistrationConfig).contextManager) {\n      throw (\n        'contextManager should be defined in register method not in' +\n        ' constructor'\n      );\n    }\n    if ((config as SDKRegistrationConfig).propagator) {\n      throw 'propagator should be defined in register method not in constructor';\n    }\n  }\n\n  /**\n   * Register this TracerProvider for use with the OpenTelemetry API.\n   * Undefined values may be replaced with defaults, and\n   * null values will be skipped.\n   *\n   * @param config Configuration object for SDK registration\n   */\n  override register(config: SDKRegistrationConfig = {}): void {\n    if (config.contextManager === undefined) {\n      config.contextManager = new StackContextManager();\n    }\n    if (config.contextManager) {\n      config.contextManager.enable();\n    }\n\n    super.register(config);\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IAnyValue, IInstrumentationScope, IKeyValue } from './types';\nimport { Attributes } from '@opentelemetry/api';\nimport { InstrumentationScope } from '@opentelemetry/core';\n\nexport function createInstrumentationScope(\n  scope: InstrumentationScope\n): IInstrumentationScope {\n  return {\n    name: scope.name,\n    version: scope.version,\n  };\n}\n\nexport function toAttributes(attributes: Attributes): IKeyValue[] {\n  return Object.keys(attributes).map(key => toKeyValue(key, attributes[key]));\n}\n\nexport function toKeyValue(key: string, value: unknown): IKeyValue {\n  return {\n    key: key,\n    value: toAnyValue(value),\n  };\n}\n\nexport function toAnyValue(value: unknown): IAnyValue {\n  const t = typeof value;\n  if (t === 'string') return { stringValue: value as string };\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return { doubleValue: value as number };\n    return { intValue: value as number };\n  }\n  if (t === 'boolean') return { boolValue: value as boolean };\n  if (value instanceof Uint8Array) return { bytesValue: value };\n  if (Array.isArray(value))\n    return { arrayValue: { values: value.map(toAnyValue) } };\n  if (t === 'object' && value != null)\n    return {\n      kvlistValue: {\n        values: Object.entries(value as object).map(([k, v]) =>\n          toKeyValue(k, v)\n        ),\n      },\n    };\n\n  return {};\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { Link } from '@opentelemetry/api';\nimport type { ReadableSpan, TimedEvent } from '@opentelemetry/sdk-trace-base';\nimport type { Encoder } from '../common';\nimport { toAttributes } from '../common/internal';\nimport { EStatusCode, IEvent, ILink, ISpan } from './types';\n\nexport function sdkSpanToOtlpSpan(span: ReadableSpan, encoder: Encoder): ISpan {\n  const ctx = span.spanContext();\n  const status = span.status;\n  return {\n    traceId: encoder.encodeSpanContext(ctx.traceId),\n    spanId: encoder.encodeSpanContext(ctx.spanId),\n    parentSpanId: encoder.encodeOptionalSpanContext(span.parentSpanId),\n    traceState: ctx.traceState?.serialize(),\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n    endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: span.droppedAttributesCount,\n    events: span.events.map(event => toOtlpSpanEvent(event, encoder)),\n    droppedEventsCount: span.droppedEventsCount,\n    status: {\n      // API and proto enums share the same values\n      code: status.code as unknown as EStatusCode,\n      message: status.message,\n    },\n    links: span.links.map(link => toOtlpLink(link, encoder)),\n    droppedLinksCount: span.droppedLinksCount,\n  };\n}\n\nexport function toOtlpLink(link: Link, encoder: Encoder): ILink {\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: encoder.encodeSpanContext(link.context.spanId),\n    traceId: encoder.encodeSpanContext(link.context.traceId),\n    traceState: link.context.traceState?.serialize(),\n    droppedAttributesCount: link.droppedAttributesCount || 0,\n  };\n}\n\nexport function toOtlpSpanEvent(\n  timedEvent: TimedEvent,\n  encoder: Encoder\n): IEvent {\n  return {\n    attributes: timedEvent.attributes\n      ? toAttributes(timedEvent.attributes)\n      : [],\n    name: timedEvent.name,\n    timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n    droppedAttributesCount: timedEvent.droppedAttributesCount || 0,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nfunction intValue(charCode: number): number {\n  // 0-9\n  if (charCode >= 48 && charCode <= 57) {\n    return charCode - 48;\n  }\n\n  // a-f\n  if (charCode >= 97 && charCode <= 102) {\n    return charCode - 87;\n  }\n\n  // A-F\n  return charCode - 55;\n}\n\nexport function hexToBinary(hexStr: string): Uint8Array {\n  const buf = new Uint8Array(hexStr.length / 2);\n  let offset = 0;\n\n  for (let i = 0; i < hexStr.length; i += 2) {\n    const hi = intValue(hexStr.charCodeAt(i));\n    const lo = intValue(hexStr.charCodeAt(i + 1));\n    buf[offset++] = (hi << 4) | lo;\n  }\n\n  return buf;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OtlpEncodingOptions, Fixed64, LongBits } from './types';\nimport { HrTime } from '@opentelemetry/api';\nimport { hexToBinary, hrTimeToNanoseconds } from '@opentelemetry/core';\n\nexport function hrTimeToNanos(hrTime: HrTime): bigint {\n  const NANOSECONDS = BigInt(1_000_000_000);\n  return BigInt(hrTime[0]) * NANOSECONDS + BigInt(hrTime[1]);\n}\n\nexport function toLongBits(value: bigint): LongBits {\n  const low = Number(BigInt.asUintN(32, value));\n  const high = Number(BigInt.asUintN(32, value >> BigInt(32)));\n  return { low, high };\n}\n\nexport function encodeAsLongBits(hrTime: HrTime): LongBits {\n  const nanos = hrTimeToNanos(hrTime);\n  return toLongBits(nanos);\n}\n\nexport function encodeAsString(hrTime: HrTime): string {\n  const nanos = hrTimeToNanos(hrTime);\n  return nanos.toString();\n}\n\nconst encodeTimestamp =\n  typeof BigInt !== 'undefined' ? encodeAsString : hrTimeToNanoseconds;\n\nexport type HrTimeEncodeFunction = (hrTime: HrTime) => Fixed64;\nexport type SpanContextEncodeFunction = (\n  spanContext: string\n) => string | Uint8Array;\nexport type OptionalSpanContextEncodeFunction = (\n  spanContext: string | undefined\n) => string | Uint8Array | undefined;\n\nexport interface Encoder {\n  encodeHrTime: HrTimeEncodeFunction;\n  encodeSpanContext: SpanContextEncodeFunction;\n  encodeOptionalSpanContext: OptionalSpanContextEncodeFunction;\n}\n\nfunction identity<T>(value: T): T {\n  return value;\n}\n\nfunction optionalHexToBinary(str: string | undefined): Uint8Array | undefined {\n  if (str === undefined) return undefined;\n  return hexToBinary(str);\n}\n\nconst DEFAULT_ENCODER: Encoder = {\n  encodeHrTime: encodeAsLongBits,\n  encodeSpanContext: hexToBinary,\n  encodeOptionalSpanContext: optionalHexToBinary,\n};\n\nexport function getOtlpEncoder(options?: OtlpEncodingOptions): Encoder {\n  if (options === undefined) {\n    return DEFAULT_ENCODER;\n  }\n\n  const useLongBits = options.useLongBits ?? true;\n  const useHex = options.useHex ?? false;\n  return {\n    encodeHrTime: useLongBits ? encodeAsLongBits : encodeTimestamp,\n    encodeSpanContext: useHex ? identity : hexToBinary,\n    encodeOptionalSpanContext: useHex ? identity : optionalHexToBinary,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IResource as ISdkResource } from '@opentelemetry/resources';\nimport { toAttributes } from '../common/internal';\nimport { IResource } from './types';\n\nexport function createResource(resource: ISdkResource): IResource {\n  return {\n    attributes: toAttributes(resource.attributes),\n    droppedAttributesCount: 0,\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Fixed64, IInstrumentationScope, IKeyValue } from '../common/types';\nimport { IResource } from '../resource/types';\n\n/** Properties of an ExportTraceServiceRequest. */\nexport interface IExportTraceServiceRequest {\n  /** ExportTraceServiceRequest resourceSpans */\n  resourceSpans?: IResourceSpans[];\n}\n\nexport interface IExportTraceServiceResponse {\n  /** ExportTraceServiceResponse partialSuccess */\n  partialSuccess?: IExportTracePartialSuccess;\n}\n\nexport interface IExportTracePartialSuccess {\n  /** ExportLogsServiceResponse rejectedLogRecords */\n  rejectedSpans?: number;\n\n  /** ExportLogsServiceResponse errorMessage */\n  errorMessage?: string;\n}\n\n/** Properties of a ResourceSpans. */\nexport interface IResourceSpans {\n  /** ResourceSpans resource */\n  resource?: IResource;\n\n  /** ResourceSpans scopeSpans */\n  scopeSpans: IScopeSpans[];\n\n  /** ResourceSpans schemaUrl */\n  schemaUrl?: string;\n}\n\n/** Properties of an ScopeSpans. */\nexport interface IScopeSpans {\n  /** IScopeSpans scope */\n  scope?: IInstrumentationScope;\n\n  /** IScopeSpans spans */\n  spans?: ISpan[];\n\n  /** IScopeSpans schemaUrl */\n  schemaUrl?: string | null;\n}\n\n/** Properties of a Span. */\nexport interface ISpan {\n  /** Span traceId */\n  traceId: string | Uint8Array;\n\n  /** Span spanId */\n  spanId: string | Uint8Array;\n\n  /** Span traceState */\n  traceState?: string | null;\n\n  /** Span parentSpanId */\n  parentSpanId?: string | Uint8Array;\n\n  /** Span name */\n  name: string;\n\n  /** Span kind */\n  kind: ESpanKind;\n\n  /** Span startTimeUnixNano */\n  startTimeUnixNano: Fixed64;\n\n  /** Span endTimeUnixNano */\n  endTimeUnixNano: Fixed64;\n\n  /** Span attributes */\n  attributes: IKeyValue[];\n\n  /** Span droppedAttributesCount */\n  droppedAttributesCount: number;\n\n  /** Span events */\n  events: IEvent[];\n\n  /** Span droppedEventsCount */\n  droppedEventsCount: number;\n\n  /** Span links */\n  links: ILink[];\n\n  /** Span droppedLinksCount */\n  droppedLinksCount: number;\n\n  /** Span status */\n  status: IStatus;\n}\n\n/**\n * SpanKind is the type of span. Can be used to specify additional relationships between spans\n * in addition to a parent/child relationship.\n */\nexport enum ESpanKind {\n  /** Unspecified. Do NOT use as default. Implementations MAY assume SpanKind to be INTERNAL when receiving UNSPECIFIED. */\n  SPAN_KIND_UNSPECIFIED = 0,\n\n  /** Indicates that the span represents an internal operation within an application,\n   * as opposed to an operation happening at the boundaries. Default value.\n   */\n  SPAN_KIND_INTERNAL = 1,\n\n  /** Indicates that the span covers server-side handling of an RPC or other\n   * remote network request.\n   */\n  SPAN_KIND_SERVER = 2,\n\n  /** Indicates that the span describes a request to some remote service.\n   */\n  SPAN_KIND_CLIENT = 3,\n\n  /** Indicates that the span describes a producer sending a message to a broker.\n   * Unlike CLIENT and SERVER, there is often no direct critical path latency relationship\n   * between producer and consumer spans. A PRODUCER span ends when the message was accepted\n   * by the broker while the logical processing of the message might span a much longer time.\n   */\n  SPAN_KIND_PRODUCER = 4,\n\n  /** Indicates that the span describes consumer receiving a message from a broker.\n   * Like the PRODUCER kind, there is often no direct critical path latency relationship\n   * between producer and consumer spans.\n   */\n  SPAN_KIND_CONSUMER = 5,\n}\n\n/** Properties of a Status. */\nexport interface IStatus {\n  /** Status message */\n  message?: string;\n\n  /** Status code */\n  code: EStatusCode;\n}\n\n/** StatusCode enum. */\nexport const enum EStatusCode {\n  /** The default status. */\n  STATUS_CODE_UNSET = 0,\n  /** The Span has been evaluated by an Application developers or Operator to have completed successfully. */\n  STATUS_CODE_OK = 1,\n  /** The Span contains an error. */\n  STATUS_CODE_ERROR = 2,\n}\n\n/** Properties of an Event. */\nexport interface IEvent {\n  /** Event timeUnixNano */\n  timeUnixNano: Fixed64;\n\n  /** Event name */\n  name: string;\n\n  /** Event attributes */\n  attributes: IKeyValue[];\n\n  /** Event droppedAttributesCount */\n  droppedAttributesCount: number;\n}\n\n/** Properties of a Link. */\nexport interface ILink {\n  /** Link traceId */\n  traceId: string | Uint8Array;\n\n  /** Link spanId */\n  spanId: string | Uint8Array;\n\n  /** Link traceState */\n  traceState?: string;\n\n  /** Link attributes */\n  attributes: IKeyValue[];\n\n  /** Link droppedAttributesCount */\n  droppedAttributesCount: number;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { IResource } from '@opentelemetry/resources';\nimport type { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport type { OtlpEncodingOptions } from '../common/types';\nimport { sdkSpanToOtlpSpan } from './internal';\nimport {\n  IExportTraceServiceRequest,\n  IResourceSpans,\n  IScopeSpans,\n} from './types';\nimport { Encoder, getOtlpEncoder } from '../common';\nimport { createInstrumentationScope } from '../common/internal';\nimport { createResource } from '../resource/internal';\n\nexport function createExportTraceServiceRequest(\n  spans: ReadableSpan[],\n  options?: OtlpEncodingOptions\n): IExportTraceServiceRequest {\n  const encoder = getOtlpEncoder(options);\n  return {\n    resourceSpans: spanRecordsToResourceSpans(spans, encoder),\n  };\n}\n\nfunction createResourceMap(readableSpans: ReadableSpan[]) {\n  const resourceMap: Map<IResource, Map<string, ReadableSpan[]>> = new Map();\n  for (const record of readableSpans) {\n    let ilmMap = resourceMap.get(record.resource);\n\n    if (!ilmMap) {\n      ilmMap = new Map();\n      resourceMap.set(record.resource, ilmMap);\n    }\n\n    // TODO this is duplicated in basic tracer. Consolidate on a common helper in core\n    const instrumentationLibraryKey = `${record.instrumentationLibrary.name}@${\n      record.instrumentationLibrary.version || ''\n    }:${record.instrumentationLibrary.schemaUrl || ''}`;\n    let records = ilmMap.get(instrumentationLibraryKey);\n\n    if (!records) {\n      records = [];\n      ilmMap.set(instrumentationLibraryKey, records);\n    }\n\n    records.push(record);\n  }\n\n  return resourceMap;\n}\n\nfunction spanRecordsToResourceSpans(\n  readableSpans: ReadableSpan[],\n  encoder: Encoder\n): IResourceSpans[] {\n  const resourceMap = createResourceMap(readableSpans);\n  const out: IResourceSpans[] = [];\n\n  const entryIterator = resourceMap.entries();\n  let entry = entryIterator.next();\n  while (!entry.done) {\n    const [resource, ilmMap] = entry.value;\n    const scopeResourceSpans: IScopeSpans[] = [];\n    const ilmIterator = ilmMap.values();\n    let ilmEntry = ilmIterator.next();\n    while (!ilmEntry.done) {\n      const scopeSpans = ilmEntry.value;\n      if (scopeSpans.length > 0) {\n        const spans = scopeSpans.map(readableSpan =>\n          sdkSpanToOtlpSpan(readableSpan, encoder)\n        );\n\n        scopeResourceSpans.push({\n          scope: createInstrumentationScope(\n            scopeSpans[0].instrumentationLibrary\n          ),\n          spans: spans,\n          schemaUrl: scopeSpans[0].instrumentationLibrary.schemaUrl,\n        });\n      }\n      ilmEntry = ilmIterator.next();\n    }\n    // TODO SDK types don't provide resource schema URL at this time\n    const transformedSpans: IResourceSpans = {\n      resource: createResource(resource),\n      scopeSpans: scopeResourceSpans,\n      schemaUrl: undefined,\n    };\n\n    out.push(transformedSpans);\n    entry = entryIterator.next();\n  }\n\n  return out;\n}\n","import { ExportResultCode } from '@opentelemetry/core';\nimport type { ExportResult } from '@opentelemetry/core';\nimport { createExportTraceServiceRequest } from '@opentelemetry/otlp-transformer';\nimport type { ReadableSpan, SpanExporter } from '@opentelemetry/sdk-trace-web';\n\nimport { sendFaroEvents } from './faroTraceExporter.utils';\nimport type { FaroTraceExporterConfig } from './types';\n\nexport class FaroTraceExporter implements SpanExporter {\n  constructor(private config: FaroTraceExporterConfig) {}\n\n  export(spans: ReadableSpan[], resultCallback: (result: ExportResult) => void): void {\n    const traceEvent = createExportTraceServiceRequest(spans, { useHex: true, useLongBits: false });\n\n    this.config.api.pushTraces(traceEvent);\n    sendFaroEvents(traceEvent.resourceSpans);\n\n    resultCallback({ code: ExportResultCode.SUCCESS });\n  }\n\n  shutdown(): Promise<void> {\n    return Promise.resolve(undefined);\n  }\n}\n","import type { SpanContext } from '@opentelemetry/api';\nimport { ESpanKind, IResourceSpans } from '@opentelemetry/otlp-transformer';\n\nimport { faro, unknownString } from '@grafana/faro-core';\nimport type { EventAttributes as FaroEventAttributes } from '@grafana/faro-web-sdk';\n\nexport function sendFaroEvents(resourceSpans: IResourceSpans[] = []) {\n  for (const resourceSpan of resourceSpans) {\n    const { scopeSpans } = resourceSpan;\n\n    for (const scopeSpan of scopeSpans) {\n      const { scope, spans = [] } = scopeSpan;\n\n      for (const span of spans) {\n        if (span.kind !== ESpanKind.SPAN_KIND_CLIENT) {\n          continue;\n        }\n\n        const spanContext: Pick<SpanContext, 'traceId' | 'spanId'> = {\n          traceId: span.traceId.toString(),\n          spanId: span.spanId.toString(),\n        };\n\n        const faroEventAttributes: FaroEventAttributes = {};\n\n        for (const attribute of span.attributes) {\n          faroEventAttributes[attribute.key] = String(Object.values(attribute.value)[0]);\n        }\n\n        const index = (scope?.name ?? '').indexOf('-');\n        let eventName = unknownString;\n\n        if (scope?.name) {\n          if (index === -1) {\n            eventName = scope.name.split('/')[1] ?? scope.name;\n          }\n\n          if (index > -1) {\n            eventName = scope?.name.substring(index + 1);\n          }\n        }\n\n        faro.api.pushEvent(`faro.tracing.${eventName}`, faroEventAttributes, undefined, { spanContext });\n      }\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ShimWrapped } from './types';\n\n/**\n * function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport function safeExecuteInTheMiddle<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): T {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n\n/**\n * Async function to execute patched function and being able to catch errors\n * @param execute - function to be executed\n * @param onFinish - callback to run when execute finishes\n */\nexport async function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n/**\n * Checks if certain function has been already wrapped\n * @param func\n */\nexport function isWrapped(func: unknown): func is ShimWrapped {\n  return (\n    typeof func === 'function' &&\n    typeof (func as ShimWrapped).__original === 'function' &&\n    typeof (func as ShimWrapped).__unwrap === 'function' &&\n    (func as ShimWrapped).__wrapped === true\n  );\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  diag,\n  DiagLogger,\n  metrics,\n  Meter,\n  MeterProvider,\n  trace,\n  Tracer,\n  TracerProvider,\n  Span,\n} from '@opentelemetry/api';\nimport { Logger, LoggerProvider, logs } from '@opentelemetry/api-logs';\nimport * as shimmer from 'shimmer';\nimport {\n  InstrumentationModuleDefinition,\n  Instrumentation,\n  InstrumentationConfig,\n  SpanCustomizationHook,\n} from './types';\n\n/**\n * Base abstract internal class for instrumenting node and web plugins\n */\nexport abstract class InstrumentationAbstract<\n  ConfigType extends InstrumentationConfig = InstrumentationConfig,\n> implements Instrumentation<ConfigType>\n{\n  protected _config: ConfigType = {} as ConfigType;\n\n  private _tracer: Tracer;\n  private _meter: Meter;\n  private _logger: Logger;\n  protected _diag: DiagLogger;\n\n  constructor(\n    public readonly instrumentationName: string,\n    public readonly instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    this.setConfig(config);\n\n    this._diag = diag.createComponentLogger({\n      namespace: instrumentationName,\n    });\n\n    this._tracer = trace.getTracer(instrumentationName, instrumentationVersion);\n    this._meter = metrics.getMeter(instrumentationName, instrumentationVersion);\n    this._logger = logs.getLogger(instrumentationName, instrumentationVersion);\n    this._updateMetricInstruments();\n  }\n\n  /* Api to wrap instrumented method */\n  protected _wrap = shimmer.wrap;\n  /* Api to unwrap instrumented methods */\n  protected _unwrap = shimmer.unwrap;\n  /* Api to mass wrap instrumented method */\n  protected _massWrap = shimmer.massWrap;\n  /* Api to mass unwrap instrumented methods */\n  protected _massUnwrap = shimmer.massUnwrap;\n\n  /* Returns meter */\n  protected get meter(): Meter {\n    return this._meter;\n  }\n\n  /**\n   * Sets MeterProvider to this plugin\n   * @param meterProvider\n   */\n  public setMeterProvider(meterProvider: MeterProvider): void {\n    this._meter = meterProvider.getMeter(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n\n    this._updateMetricInstruments();\n  }\n\n  /* Returns logger */\n  protected get logger(): Logger {\n    return this._logger;\n  }\n\n  /**\n   * Sets LoggerProvider to this plugin\n   * @param loggerProvider\n   */\n  public setLoggerProvider(loggerProvider: LoggerProvider): void {\n    this._logger = loggerProvider.getLogger(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /**\n   * @experimental\n   *\n   * Get module definitions defined by {@link init}.\n   * This can be used for experimental compile-time instrumentation.\n   *\n   * @returns an array of {@link InstrumentationModuleDefinition}\n   */\n  public getModuleDefinitions(): InstrumentationModuleDefinition[] {\n    const initResult = this.init() ?? [];\n    if (!Array.isArray(initResult)) {\n      return [initResult];\n    }\n\n    return initResult;\n  }\n\n  /**\n   * Sets the new metric instruments with the current Meter.\n   */\n  protected _updateMetricInstruments(): void {\n    return;\n  }\n\n  /* Returns InstrumentationConfig */\n  public getConfig(): ConfigType {\n    return this._config;\n  }\n\n  /**\n   * Sets InstrumentationConfig to this plugin\n   * @param config\n   */\n  public setConfig(config: ConfigType): void {\n    // copy config first level properties to ensure they are immutable.\n    // nested properties are not copied, thus are mutable from the outside.\n    this._config = {\n      enabled: true,\n      ...config,\n    };\n  }\n\n  /**\n   * Sets TraceProvider to this plugin\n   * @param tracerProvider\n   */\n  public setTracerProvider(tracerProvider: TracerProvider): void {\n    this._tracer = tracerProvider.getTracer(\n      this.instrumentationName,\n      this.instrumentationVersion\n    );\n  }\n\n  /* Returns tracer */\n  protected get tracer(): Tracer {\n    return this._tracer;\n  }\n\n  /* Enable plugin */\n  public abstract enable(): void;\n\n  /* Disable plugin */\n  public abstract disable(): void;\n\n  /**\n   * Init method in which plugin should define _modules and patches for\n   * methods.\n   */\n  protected abstract init():\n    | InstrumentationModuleDefinition\n    | InstrumentationModuleDefinition[]\n    | void;\n\n  /**\n   * Execute span customization hook, if configured, and log any errors.\n   * Any semantics of the trigger and info are defined by the specific instrumentation.\n   * @param hookHandler The optional hook handler which the user has configured via instrumentation config\n   * @param triggerName The name of the trigger for executing the hook for logging purposes\n   * @param span The span to which the hook should be applied\n   * @param info The info object to be passed to the hook, with useful data the hook may use\n   */\n  protected _runSpanCustomizationHook<SpanCustomizationInfoType>(\n    hookHandler: SpanCustomizationHook<SpanCustomizationInfoType> | undefined,\n    triggerName: string,\n    span: Span,\n    info: SpanCustomizationInfoType\n  ) {\n    if (!hookHandler) {\n      return;\n    }\n\n    try {\n      hookHandler(span, info);\n    } catch (e) {\n      this._diag.error(\n        `Error running span customization hook due to exception in handler`,\n        { triggerName },\n        e\n      );\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationAbstract } from '../../instrumentation';\nimport * as types from '../../types';\nimport { InstrumentationConfig } from '../../types';\n\n/**\n * Base abstract class for instrumenting web plugins\n */\nexport abstract class InstrumentationBase<\n    ConfigType extends InstrumentationConfig = InstrumentationConfig,\n  >\n  extends InstrumentationAbstract<ConfigType>\n  implements types.Instrumentation<ConfigType>\n{\n  constructor(\n    instrumentationName: string,\n    instrumentationVersion: string,\n    config: ConfigType\n  ) {\n    super(instrumentationName, instrumentationVersion, config);\n\n    if (this._config.enabled) {\n      this.enable();\n    }\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nconst TMP_DB_SYSTEM = 'db.system';\nconst TMP_DB_CONNECTION_STRING = 'db.connection_string';\nconst TMP_DB_USER = 'db.user';\nconst TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nconst TMP_DB_NAME = 'db.name';\nconst TMP_DB_STATEMENT = 'db.statement';\nconst TMP_DB_OPERATION = 'db.operation';\nconst TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nconst TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nconst TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nconst TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nconst TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nconst TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nconst TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  'db.cassandra.speculative_execution_count';\nconst TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nconst TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nconst TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nconst TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nconst TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nconst TMP_DB_SQL_TABLE = 'db.sql.table';\nconst TMP_EXCEPTION_TYPE = 'exception.type';\nconst TMP_EXCEPTION_MESSAGE = 'exception.message';\nconst TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nconst TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nconst TMP_FAAS_TRIGGER = 'faas.trigger';\nconst TMP_FAAS_EXECUTION = 'faas.execution';\nconst TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nconst TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nconst TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nconst TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nconst TMP_FAAS_TIME = 'faas.time';\nconst TMP_FAAS_CRON = 'faas.cron';\nconst TMP_FAAS_COLDSTART = 'faas.coldstart';\nconst TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nconst TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nconst TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nconst TMP_NET_TRANSPORT = 'net.transport';\nconst TMP_NET_PEER_IP = 'net.peer.ip';\nconst TMP_NET_PEER_PORT = 'net.peer.port';\nconst TMP_NET_PEER_NAME = 'net.peer.name';\nconst TMP_NET_HOST_IP = 'net.host.ip';\nconst TMP_NET_HOST_PORT = 'net.host.port';\nconst TMP_NET_HOST_NAME = 'net.host.name';\nconst TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nconst TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nconst TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nconst TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nconst TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nconst TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nconst TMP_PEER_SERVICE = 'peer.service';\nconst TMP_ENDUSER_ID = 'enduser.id';\nconst TMP_ENDUSER_ROLE = 'enduser.role';\nconst TMP_ENDUSER_SCOPE = 'enduser.scope';\nconst TMP_THREAD_ID = 'thread.id';\nconst TMP_THREAD_NAME = 'thread.name';\nconst TMP_CODE_FUNCTION = 'code.function';\nconst TMP_CODE_NAMESPACE = 'code.namespace';\nconst TMP_CODE_FILEPATH = 'code.filepath';\nconst TMP_CODE_LINENO = 'code.lineno';\nconst TMP_HTTP_METHOD = 'http.method';\nconst TMP_HTTP_URL = 'http.url';\nconst TMP_HTTP_TARGET = 'http.target';\nconst TMP_HTTP_HOST = 'http.host';\nconst TMP_HTTP_SCHEME = 'http.scheme';\nconst TMP_HTTP_STATUS_CODE = 'http.status_code';\nconst TMP_HTTP_FLAVOR = 'http.flavor';\nconst TMP_HTTP_USER_AGENT = 'http.user_agent';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.request_content_length_uncompressed';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.response_content_length_uncompressed';\nconst TMP_HTTP_SERVER_NAME = 'http.server_name';\nconst TMP_HTTP_ROUTE = 'http.route';\nconst TMP_HTTP_CLIENT_IP = 'http.client_ip';\nconst TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nconst TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nconst TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  'aws.dynamodb.item_collection_metrics';\nconst TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  'aws.dynamodb.provisioned_read_capacity';\nconst TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  'aws.dynamodb.provisioned_write_capacity';\nconst TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nconst TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nconst TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nconst TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nconst TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nconst TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  'aws.dynamodb.global_secondary_indexes';\nconst TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  'aws.dynamodb.local_secondary_indexes';\nconst TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  'aws.dynamodb.exclusive_start_table';\nconst TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nconst TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nconst TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nconst TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nconst TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nconst TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nconst TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  'aws.dynamodb.attribute_definitions';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  'aws.dynamodb.global_secondary_index_updates';\nconst TMP_MESSAGING_SYSTEM = 'messaging.system';\nconst TMP_MESSAGING_DESTINATION = 'messaging.destination';\nconst TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nconst TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nconst TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nconst TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nconst TMP_MESSAGING_URL = 'messaging.url';\nconst TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nconst TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  'messaging.message_payload_size_bytes';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  'messaging.message_payload_compressed_size_bytes';\nconst TMP_MESSAGING_OPERATION = 'messaging.operation';\nconst TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nconst TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nconst TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nconst TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nconst TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nconst TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nconst TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nconst TMP_RPC_SYSTEM = 'rpc.system';\nconst TMP_RPC_SERVICE = 'rpc.service';\nconst TMP_RPC_METHOD = 'rpc.method';\nconst TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nconst TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nconst TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nconst TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nconst TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nconst TMP_MESSAGE_TYPE = 'message.type';\nconst TMP_MESSAGE_ID = 'message.id';\nconst TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nconst TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated use ATTR_AWS_LAMBDA_INVOKED_ARN\n */\nexport const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated use ATTR_DB_SYSTEM\n */\nexport const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated use ATTR_DB_CONNECTION_STRING\n */\nexport const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n\n/**\n * Username for accessing the database.\n *\n * @deprecated use ATTR_DB_USER\n */\nexport const SEMATTRS_DB_USER = TMP_DB_USER;\n\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated use ATTR_DB_JDBC_DRIVER_CLASSNAME\n */\nexport const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated use ATTR_DB_NAME\n */\nexport const SEMATTRS_DB_NAME = TMP_DB_NAME;\n\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated use ATTR_DB_STATEMENT\n */\nexport const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated use ATTR_DB_OPERATION\n */\nexport const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated use ATTR_DB_MSSQL_INSTANCE_NAME\n */\nexport const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_CASSANDRA_KEYSPACE\n */\nexport const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated use ATTR_DB_CASSANDRA_PAGE_SIZE\n */\nexport const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL\n */\nexport const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL =\n  TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated use ATTR_DB_CASSANDRA_TABLE\n */\nexport const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated use ATTR_DB_CASSANDRA_IDEMPOTENCE\n */\nexport const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT\n */\nexport const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated use ATTR_DB_CASSANDRA_COORDINATOR_ID\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID =\n  TMP_DB_CASSANDRA_COORDINATOR_ID;\n\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated use ATTR_DB_CASSANDRA_COORDINATOR_DC\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC =\n  TMP_DB_CASSANDRA_COORDINATOR_DC;\n\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_HBASE_NAMESPACE\n */\nexport const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_REDIS_DATABASE_INDEX\n */\nexport const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated use ATTR_DB_MONGODB_COLLECTION\n */\nexport const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated use ATTR_DB_SQL_TABLE\n */\nexport const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated use ATTR_EXCEPTION_TYPE\n */\nexport const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n\n/**\n * The exception message.\n *\n * @deprecated use ATTR_EXCEPTION_MESSAGE\n */\nexport const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated use ATTR_EXCEPTION_STACKTRACE\n */\nexport const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated use ATTR_EXCEPTION_ESCAPED\n*/\nexport const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated use ATTR_FAAS_TRIGGER\n */\nexport const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated use ATTR_FAAS_EXECUTION\n */\nexport const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_COLLECTION\n */\nexport const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_OPERATION\n */\nexport const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_TIME\n */\nexport const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_NAME\n */\nexport const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated use ATTR_FAAS_TIME\n */\nexport const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated use ATTR_FAAS_CRON\n */\nexport const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated use ATTR_FAAS_COLDSTART\n */\nexport const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_NAME\n */\nexport const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_PROVIDER\n */\nexport const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_REGION\n */\nexport const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated use ATTR_NET_TRANSPORT\n */\nexport const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated use ATTR_NET_PEER_IP\n */\nexport const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n\n/**\n * Remote port number.\n *\n * @deprecated use ATTR_NET_PEER_PORT\n */\nexport const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated use ATTR_NET_PEER_NAME\n */\nexport const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated use ATTR_NET_HOST_IP\n */\nexport const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated use ATTR_NET_HOST_PORT\n */\nexport const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated use ATTR_NET_HOST_NAME\n */\nexport const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated use ATTR_NET_HOST_CONNECTION_TYPE\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated use ATTR_NET_HOST_CONNECTION_SUBTYPE\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE =\n  TMP_NET_HOST_CONNECTION_SUBTYPE;\n\n/**\n * The name of the mobile carrier.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_NAME\n */\nexport const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n\n/**\n * The mobile carrier country code.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_MCC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n\n/**\n * The mobile carrier network code.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_MNC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_ICC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated use ATTR_PEER_SERVICE\n */\nexport const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated use ATTR_ENDUSER_ID\n */\nexport const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated use ATTR_ENDUSER_ROLE\n */\nexport const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated use ATTR_ENDUSER_SCOPE\n */\nexport const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated use ATTR_THREAD_ID\n */\nexport const SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n\n/**\n * Current thread name.\n *\n * @deprecated use ATTR_THREAD_NAME\n */\nexport const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated use ATTR_CODE_FUNCTION\n */\nexport const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated use ATTR_CODE_NAMESPACE\n */\nexport const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated use ATTR_CODE_FILEPATH\n */\nexport const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated use ATTR_CODE_LINENO\n */\nexport const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n\n/**\n * HTTP request method.\n *\n * @deprecated use ATTR_HTTP_METHOD\n */\nexport const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated use ATTR_HTTP_URL\n */\nexport const SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated use ATTR_HTTP_TARGET\n */\nexport const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated use ATTR_HTTP_HOST\n */\nexport const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated use ATTR_HTTP_SCHEME\n */\nexport const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated use ATTR_HTTP_STATUS_CODE\n */\nexport const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated use ATTR_HTTP_FLAVOR\n */\nexport const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated use ATTR_HTTP_USER_AGENT\n */\nexport const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated use ATTR_HTTP_REQUEST_CONTENT_LENGTH\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated use ATTR_HTTP_RESPONSE_CONTENT_LENGTH\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated use ATTR_HTTP_SERVER_NAME\n */\nexport const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n\n/**\n * The matched route (path template).\n *\n * @deprecated use ATTR_HTTP_ROUTE\n */\nexport const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated use ATTR_HTTP_CLIENT_IP\n*/\nexport const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TABLE_NAMES\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY =\n  TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS\n */\nexport const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_CONSISTENT_READ\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ =\n  TMP_AWS_DYNAMODB_CONSISTENT_READ;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROJECTION\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_LIMIT\n */\nexport const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET =\n  TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_INDEX_NAME\n */\nexport const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SELECT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES\n */\nexport const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE\n */\nexport const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TABLE_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SCAN_FORWARD\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SEGMENT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS\n */\nexport const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS =\n  TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SCANNED_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT =\n  TMP_AWS_DYNAMODB_SCANNED_COUNT;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n\n/**\n * A string identifying the messaging system.\n *\n * @deprecated use ATTR_MESSAGING_SYSTEM\n */\nexport const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated use ATTR_MESSAGING_DESTINATION\n */\nexport const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n\n/**\n * The kind of message destination.\n *\n * @deprecated use ATTR_MESSAGING_DESTINATION_KIND\n */\nexport const SEMATTRS_MESSAGING_DESTINATION_KIND =\n  TMP_MESSAGING_DESTINATION_KIND;\n\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated use ATTR_MESSAGING_TEMP_DESTINATION\n */\nexport const SEMATTRS_MESSAGING_TEMP_DESTINATION =\n  TMP_MESSAGING_TEMP_DESTINATION;\n\n/**\n * The name of the transport protocol.\n *\n * @deprecated use ATTR_MESSAGING_PROTOCOL\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n\n/**\n * The version of the transport protocol.\n *\n * @deprecated use ATTR_MESSAGING_PROTOCOL_VERSION\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL_VERSION =\n  TMP_MESSAGING_PROTOCOL_VERSION;\n\n/**\n * Connection string.\n *\n * @deprecated use ATTR_MESSAGING_URL\n */\nexport const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_ID\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated use ATTR_MESSAGING_CONVERSATION_ID\n */\nexport const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated use ATTR_MESSAGING_OPERATION\n */\nexport const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated use ATTR_MESSAGING_CONSUMER_ID\n */\nexport const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated use ATTR_MESSAGING_RABBITMQ_ROUTING_KEY\n */\nexport const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY =\n  TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_MESSAGE_KEY\n */\nexport const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY =\n  TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP =\n  TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_CLIENT_ID\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n\n/**\n * Partition the message is sent to.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_PARTITION\n */\nexport const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_TOMBSTONE\n */\nexport const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n\n/**\n * A string identifying the remoting system.\n *\n * @deprecated use ATTR_RPC_SYSTEM\n */\nexport const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated use ATTR_RPC_SERVICE\n */\nexport const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated use ATTR_RPC_METHOD\n */\nexport const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated use ATTR_RPC_GRPC_STATUS_CODE\n */\nexport const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated use ATTR_RPC_JSONRPC_VERSION\n */\nexport const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated use ATTR_RPC_JSONRPC_REQUEST_ID\n */\nexport const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated use ATTR_RPC_JSONRPC_ERROR_CODE\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated use ATTR_RPC_JSONRPC_ERROR_MESSAGE\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated use ATTR_MESSAGE_TYPE\n */\nexport const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated use ATTR_MESSAGE_ID\n */\nexport const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated use ATTR_MESSAGE_COMPRESSED_SIZE\n */\nexport const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated use ATTR_MESSAGE_UNCOMPRESSED_SIZE\n */\nexport const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n\n/**\n * Definition of available values for SemanticAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification.\n */\nexport type SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn';\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system';\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string';\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user';\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname';\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name';\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement';\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation';\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name';\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace';\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size';\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table';\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence';\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count';\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id';\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc';\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace';\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index';\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table';\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type';\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message';\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace';\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped';\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger';\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution';\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection';\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation';\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time';\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name';\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time';\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron';\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart';\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name';\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider';\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region';\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport';\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip';\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port';\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name';\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip';\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port';\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name';\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type';\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype';\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name';\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc';\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc';\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc';\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service';\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id';\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role';\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope';\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id';\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name';\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function';\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace';\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath';\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno';\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method';\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url';\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target';\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host';\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme';\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code';\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor';\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent';\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length';\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed';\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length';\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed';\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name';\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route';\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip';\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names';\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity';\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics';\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity';\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity';\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read';\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection';\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit';\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get';\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name';\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select';\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes';\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes';\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table';\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count';\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward';\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment';\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments';\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count';\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count';\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions';\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates';\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system';\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination';\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind';\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination';\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol';\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version';\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url';\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id';\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id';\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes';\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes';\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation';\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id';\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key';\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key';\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group';\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id';\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition';\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone';\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system';\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service';\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method';\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code';\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version';\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id';\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code';\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message';\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type';\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id';\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size';\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size';\n};\n\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport const SemanticAttributes: SemanticAttributes =\n  /*#__PURE__*/ createConstMap<SemanticAttributes>([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nconst TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nconst TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nconst TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nconst TMP_DBSYSTEMVALUES_DB2 = 'db2';\nconst TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nconst TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nconst TMP_DBSYSTEMVALUES_HIVE = 'hive';\nconst TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nconst TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nconst TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nconst TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nconst TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nconst TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nconst TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nconst TMP_DBSYSTEMVALUES_EDB = 'edb';\nconst TMP_DBSYSTEMVALUES_CACHE = 'cache';\nconst TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nconst TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nconst TMP_DBSYSTEMVALUES_DERBY = 'derby';\nconst TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nconst TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nconst TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nconst TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nconst TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nconst TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nconst TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nconst TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nconst TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nconst TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nconst TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nconst TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nconst TMP_DBSYSTEMVALUES_H2 = 'h2';\nconst TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nconst TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nconst TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nconst TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nconst TMP_DBSYSTEMVALUES_REDIS = 'redis';\nconst TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nconst TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nconst TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nconst TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nconst TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nconst TMP_DBSYSTEMVALUES_GEODE = 'geode';\nconst TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nconst TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nconst TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL.\n */\nexport const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL.\n */\nexport const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL.\n */\nexport const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE.\n */\nexport const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2.\n */\nexport const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL.\n */\nexport const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT.\n */\nexport const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE.\n */\nexport const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE.\n */\nexport const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB.\n */\nexport const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS.\n */\nexport const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB.\n */\nexport const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB.\n */\nexport const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES.\n */\nexport const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL.\n */\nexport const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB.\n */\nexport const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE.\n */\nexport const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS.\n */\nexport const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD.\n */\nexport const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY.\n */\nexport const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER.\n */\nexport const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX.\n */\nexport const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB.\n */\nexport const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE.\n */\nexport const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB.\n */\nexport const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA.\n */\nexport const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE.\n */\nexport const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE.\n */\nexport const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE.\n */\nexport const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE.\n */\nexport const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA.\n */\nexport const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA.\n */\nexport const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2.\n */\nexport const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION.\n */\nexport const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA.\n */\nexport const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE.\n */\nexport const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB.\n */\nexport const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS.\n */\nexport const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE.\n */\nexport const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB.\n */\nexport const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB.\n */\nexport const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB.\n */\nexport const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J.\n */\nexport const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE.\n */\nexport const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH.\n */\nexport const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED.\n */\nexport const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB.\n */\nexport const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n\n/**\n * Identifies the Values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport type DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql';\n\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql';\n\n  /** MySQL. */\n  MYSQL: 'mysql';\n\n  /** Oracle Database. */\n  ORACLE: 'oracle';\n\n  /** IBM Db2. */\n  DB2: 'db2';\n\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql';\n\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift';\n\n  /** Apache Hive. */\n  HIVE: 'hive';\n\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape';\n\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb';\n\n  /** Progress Database. */\n  PROGRESS: 'progress';\n\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb';\n\n  /** SAP HANA. */\n  HANADB: 'hanadb';\n\n  /** Ingres. */\n  INGRES: 'ingres';\n\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql';\n\n  /** EnterpriseDB. */\n  EDB: 'edb';\n\n  /** InterSystems Caché. */\n  CACHE: 'cache';\n\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas';\n\n  /** Firebird. */\n  FIREBIRD: 'firebird';\n\n  /** Apache Derby. */\n  DERBY: 'derby';\n\n  /** FileMaker. */\n  FILEMAKER: 'filemaker';\n\n  /** Informix. */\n  INFORMIX: 'informix';\n\n  /** InstantDB. */\n  INSTANTDB: 'instantdb';\n\n  /** InterBase. */\n  INTERBASE: 'interbase';\n\n  /** MariaDB. */\n  MARIADB: 'mariadb';\n\n  /** Netezza. */\n  NETEZZA: 'netezza';\n\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive';\n\n  /** PointBase. */\n  POINTBASE: 'pointbase';\n\n  /** SQLite. */\n  SQLITE: 'sqlite';\n\n  /** Sybase. */\n  SYBASE: 'sybase';\n\n  /** Teradata. */\n  TERADATA: 'teradata';\n\n  /** Vertica. */\n  VERTICA: 'vertica';\n\n  /** H2. */\n  H2: 'h2';\n\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion';\n\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra';\n\n  /** Apache HBase. */\n  HBASE: 'hbase';\n\n  /** MongoDB. */\n  MONGODB: 'mongodb';\n\n  /** Redis. */\n  REDIS: 'redis';\n\n  /** Couchbase. */\n  COUCHBASE: 'couchbase';\n\n  /** CouchDB. */\n  COUCHDB: 'couchdb';\n\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb';\n\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb';\n\n  /** Neo4j. */\n  NEO4J: 'neo4j';\n\n  /** Apache Geode. */\n  GEODE: 'geode';\n\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch';\n\n  /** Memcached. */\n  MEMCACHED: 'memcached';\n\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb';\n};\n\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport const DbSystemValues: DbSystemValues =\n  /*#__PURE__*/ createConstMap<DbSystemValues>([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ALL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_TWO =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_THREE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ANY =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n\n/**\n * Identifies the Values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport type DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all';\n\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum';\n\n  /** quorum. */\n  QUORUM: 'quorum';\n\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum';\n\n  /** one. */\n  ONE: 'one';\n\n  /** two. */\n  TWO: 'two';\n\n  /** three. */\n  THREE: 'three';\n\n  /** local_one. */\n  LOCAL_ONE: 'local_one';\n\n  /** any. */\n  ANY: 'any';\n\n  /** serial. */\n  SERIAL: 'serial';\n\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial';\n};\n\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport const DbCassandraConsistencyLevelValues: DbCassandraConsistencyLevelValues =\n  /*#__PURE__*/ createConstMap<DbCassandraConsistencyLevelValues>([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nconst TMP_FAASTRIGGERVALUES_HTTP = 'http';\nconst TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nconst TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nconst TMP_FAASTRIGGERVALUES_OTHER = 'other';\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE.\n */\nexport const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP.\n */\nexport const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB.\n */\nexport const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER.\n */\nexport const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER.\n */\nexport const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n\n/**\n * Identifies the Values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport type FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource';\n\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http';\n\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub';\n\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer';\n\n  /** If none of the others apply. */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport const FaasTriggerValues: FaasTriggerValues =\n  /*#__PURE__*/ createConstMap<FaasTriggerValues>([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_INSERT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_EDIT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_DELETE =\n  TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n\n/**\n * Identifies the Values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport type FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert';\n\n  /** When an object is modified. */\n  EDIT: 'edit';\n\n  /** When an object is deleted. */\n  DELETE: 'delete';\n};\n\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport const FaasDocumentOperationValues: FaasDocumentOperationValues =\n  /*#__PURE__*/ createConstMap<FaasDocumentOperationValues>([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD.\n */\nexport const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS.\n */\nexport const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE.\n */\nexport const FAASINVOKEDPROVIDERVALUES_AZURE =\n  TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP.\n */\nexport const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport type FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport const FaasInvokedProviderValues: FaasInvokedProviderValues =\n  /*#__PURE__*/ createConstMap<FaasInvokedProviderValues>([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nconst TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nconst TMP_NETTRANSPORTVALUES_IP = 'ip';\nconst TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nconst TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nconst TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nconst TMP_NETTRANSPORTVALUES_OTHER = 'other';\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP.\n */\nexport const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP.\n */\nexport const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP.\n */\nexport const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_UNIX.\n */\nexport const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE.\n */\nexport const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC.\n */\nexport const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER.\n */\nexport const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n\n/**\n * Identifies the Values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport type NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp';\n\n  /** ip_udp. */\n  IP_UDP: 'ip_udp';\n\n  /** Another IP-based protocol. */\n  IP: 'ip';\n\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix';\n\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe';\n\n  /** In-process communication. */\n  INPROC: 'inproc';\n\n  /** Something else (non IP-based). */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport const NetTransportValues: NetTransportValues =\n  /*#__PURE__*/ createConstMap<NetTransportValues>([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_WIFI.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIFI =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_WIRED.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIRED =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_CELL.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_CELL =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_UNAVAILABLE.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_UNKNOWN.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n\n/**\n * Identifies the Values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi';\n\n  /** wired. */\n  WIRED: 'wired';\n\n  /** cell. */\n  CELL: 'cell';\n\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable';\n\n  /** unknown. */\n  UNKNOWN: 'unknown';\n};\n\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionTypeValues: NetHostConnectionTypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionTypeValues>([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_GPRS.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EDGE.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_UMTS.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_CDMA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_0.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_A.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSDPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSUPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_IDEN.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_B.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_LTE.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EHRPD.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSPAP.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_GSM.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GSM =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_TD_SCDMA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_IWLAN.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_NR.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NR =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_NRNSA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_LTE_CA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n\n/**\n * Identifies the Values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs';\n\n  /** EDGE. */\n  EDGE: 'edge';\n\n  /** UMTS. */\n  UMTS: 'umts';\n\n  /** CDMA. */\n  CDMA: 'cdma';\n\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0';\n\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a';\n\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt';\n\n  /** HSDPA. */\n  HSDPA: 'hsdpa';\n\n  /** HSUPA. */\n  HSUPA: 'hsupa';\n\n  /** HSPA. */\n  HSPA: 'hspa';\n\n  /** IDEN. */\n  IDEN: 'iden';\n\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b';\n\n  /** LTE. */\n  LTE: 'lte';\n\n  /** EHRPD. */\n  EHRPD: 'ehrpd';\n\n  /** HSPAP. */\n  HSPAP: 'hspap';\n\n  /** GSM. */\n  GSM: 'gsm';\n\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma';\n\n  /** IWLAN. */\n  IWLAN: 'iwlan';\n\n  /** 5G NR (New Radio). */\n  NR: 'nr';\n\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa';\n\n  /** LTE CA. */\n  LTE_CA: 'lte_ca';\n};\n\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionSubtypeValues: NetHostConnectionSubtypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionSubtypeValues>([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nconst TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nconst TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nconst TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nconst TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0.\n */\nexport const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1.\n */\nexport const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0.\n */\nexport const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY.\n */\nexport const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC.\n */\nexport const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n\n/**\n * Identifies the Values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport type HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0';\n\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1';\n\n  /** HTTP 2. */\n  HTTP_2_0: '2.0';\n\n  /** SPDY protocol. */\n  SPDY: 'SPDY';\n\n  /** QUIC protocol. */\n  QUIC: 'QUIC';\n};\n\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport const HttpFlavorValues: HttpFlavorValues = {\n  HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n  HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n  HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n  SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n  QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n\n/**\n * The kind of message destination.\n *\n * @deprecated Use MESSAGING_DESTINATION_KIND_VALUE_QUEUE.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_QUEUE =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Use MESSAGING_DESTINATION_KIND_VALUE_TOPIC.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_TOPIC =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n\n/**\n * Identifies the Values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport type MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue';\n\n  /** A message sent to a topic. */\n  TOPIC: 'topic';\n};\n\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport const MessagingDestinationKindValues: MessagingDestinationKindValues =\n  /*#__PURE__*/ createConstMap<MessagingDestinationKindValues>([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nconst TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_VALUE_RECEIVE.\n */\nexport const MESSAGINGOPERATIONVALUES_RECEIVE =\n  TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_VALUE_PROCESS.\n */\nexport const MESSAGINGOPERATIONVALUES_PROCESS =\n  TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n\n/**\n * Identifies the Values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport type MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive';\n\n  /** process. */\n  PROCESS: 'process';\n};\n\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport const MessagingOperationValues: MessagingOperationValues =\n  /*#__PURE__*/ createConstMap<MessagingOperationValues>([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nconst TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nconst TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nconst TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nconst TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nconst TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nconst TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK.\n */\nexport const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_CANCELLED =\n  TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNKNOWN =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT.\n */\nexport const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT =\n  TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED =\n  TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND.\n */\nexport const RPCGRPCSTATUSCODEVALUES_NOT_FOUND =\n  TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS.\n */\nexport const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS =\n  TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED =\n  TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION.\n */\nexport const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION =\n  TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_ABORTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE.\n */\nexport const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE =\n  TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL.\n */\nexport const RPCGRPCSTATUSCODEVALUES_INTERNAL =\n  TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS.\n */\nexport const RPCGRPCSTATUSCODEVALUES_DATA_LOSS =\n  TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n\n/**\n * Identifies the Values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport type RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0;\n\n  /** CANCELLED. */\n  CANCELLED: 1;\n\n  /** UNKNOWN. */\n  UNKNOWN: 2;\n\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3;\n\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4;\n\n  /** NOT_FOUND. */\n  NOT_FOUND: 5;\n\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6;\n\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7;\n\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8;\n\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9;\n\n  /** ABORTED. */\n  ABORTED: 10;\n\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11;\n\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12;\n\n  /** INTERNAL. */\n  INTERNAL: 13;\n\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14;\n\n  /** DATA_LOSS. */\n  DATA_LOSS: 15;\n\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16;\n};\n\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport const RpcGrpcStatusCodeValues: RpcGrpcStatusCodeValues = {\n  OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n  CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n  UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n  INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n  NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n  ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n  PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n  ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n  OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n  UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n  INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n  UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n  DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n  UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nconst TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT.\n */\nexport const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED.\n */\nexport const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n\n/**\n * Identifies the Values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport type MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT';\n\n  /** received. */\n  RECEIVED: 'RECEIVED';\n};\n\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport const MessageTypeValues: MessageTypeValues =\n  /*#__PURE__*/ createConstMap<MessageTypeValues>([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n  ]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport {\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n} from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O extends object>(\n  obj: O,\n  key: keyof any\n): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n * @param refPerfName name of performance entry to use for reference\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries,\n  refPerfName?: string\n): api.Span | undefined {\n  let perfTime = undefined;\n  let refTime = undefined;\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    perfTime = entries[performanceName];\n  }\n  const refName = refPerfName || PTN.FETCH_START;\n  // Use a reference time which is the earliest possible value so that the performance timings that are earlier should not be added\n  // using FETCH START time in case no reference is provided\n  if (hasKey(entries, refName) && typeof entries[refName] === 'number') {\n    refTime = entries[refName];\n  }\n  if (perfTime !== undefined && refTime !== undefined && perfTime >= refTime) {\n    span.addEvent(performanceName, perfTime);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  if (\n    hasKey(resource as PerformanceResourceTiming, 'name') &&\n    (resource as PerformanceResourceTiming)['name'].startsWith('https:')\n  ) {\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  }\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(\n  filteredResources: PerformanceResourceTiming[]\n): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/** Returns the origin if present (if in browser context). */\nfunction getOrigin(): string | undefined {\n  return typeof location !== 'undefined' ? location.origin : undefined;\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== getOrigin() && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(\n      url,\n      typeof document !== 'undefined'\n        ? document.baseURI\n        : typeof location !== 'undefined' // Some JS runtimes (e.g. Deno) don't define this\n        ? location.href\n        : undefined\n    );\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === getOrigin()) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  COMPONENT = 'component',\n  HTTP_ERROR_NAME = 'http.error_name',\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.53.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Updates to this file should also be replicated to @opentelemetry/api too.\n\n/**\n * - globalThis (New standard)\n * - self (Will return the current window instance for supported browsers)\n * - window (fallback for older browser implementations)\n * - global (NodeJS implementation)\n * - <object> (When all else fails)\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins, no-undef\nexport const _globalThis: typeof globalThis =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : ({} as typeof globalThis);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport * as core from '@opentelemetry/core';\nimport * as web from '@opentelemetry/sdk-trace-web';\nimport { AttributeNames } from './enums/AttributeNames';\nimport {\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_HOST,\n  SEMATTRS_HTTP_USER_AGENT,\n  SEMATTRS_HTTP_SCHEME,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_METHOD,\n} from '@opentelemetry/semantic-conventions';\nimport { FetchError, FetchResponse, SpanData } from './types';\nimport { VERSION } from './version';\nimport { _globalThis } from '@opentelemetry/core';\n\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n\nconst isNode = typeof process === 'object' && process.release?.name === 'node';\n\nexport interface FetchCustomAttributeFunction {\n  (\n    span: api.Span,\n    request: Request | RequestInit,\n    result: Response | FetchError\n  ): void;\n}\n\n/**\n * FetchPlugin Config\n */\nexport interface FetchInstrumentationConfig extends InstrumentationConfig {\n  // the number of timing resources is limited, after the limit\n  // (chrome 250, safari 150) the information is not collected anymore\n  // the only way to prevent that is to regularly clean the resources\n  // whenever it is possible, this is needed only when PerformanceObserver\n  // is not available\n  clearTimingResources?: boolean;\n  // urls which should include trace headers when origin doesn't match\n  propagateTraceHeaderCorsUrls?: web.PropagateTraceHeaderCorsUrls;\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  ignoreUrls?: Array<string | RegExp>;\n  /** Function for adding custom attributes on the span */\n  applyCustomAttributesOnSpan?: FetchCustomAttributeFunction;\n  // Ignore adding network events as span events\n  ignoreNetworkEvents?: boolean;\n}\n\n/**\n * This class represents a fetch plugin for auto instrumentation\n */\nexport class FetchInstrumentation extends InstrumentationBase<FetchInstrumentationConfig> {\n  readonly component: string = 'fetch';\n  readonly version: string = VERSION;\n  moduleName = this.component;\n  private _usedResources = new WeakSet<PerformanceResourceTiming>();\n  private _tasksCount = 0;\n\n  constructor(config: FetchInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-fetch', VERSION, config);\n  }\n\n  init(): void {}\n\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   */\n  private _addChildSpan(\n    span: api.Span,\n    corsPreFlightRequest: PerformanceResourceTiming\n  ): void {\n    const childSpan = this.tracer.startSpan(\n      'CORS Preflight',\n      {\n        startTime: corsPreFlightRequest[web.PerformanceTimingNames.FETCH_START],\n      },\n      api.trace.setSpan(api.context.active(), span)\n    );\n    if (!this.getConfig().ignoreNetworkEvents) {\n      web.addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n    }\n    childSpan.end(\n      corsPreFlightRequest[web.PerformanceTimingNames.RESPONSE_END]\n    );\n  }\n\n  /**\n   * Adds more attributes to span just before ending it\n   * @param span\n   * @param response\n   */\n  private _addFinalSpanAttributes(\n    span: api.Span,\n    response: FetchResponse\n  ): void {\n    const parsedUrl = web.parseUrl(response.url);\n    span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, response.status);\n    if (response.statusText != null) {\n      span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, response.statusText);\n    }\n    span.setAttribute(SEMATTRS_HTTP_HOST, parsedUrl.host);\n    span.setAttribute(\n      SEMATTRS_HTTP_SCHEME,\n      parsedUrl.protocol.replace(':', '')\n    );\n    if (typeof navigator !== 'undefined') {\n      span.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n    }\n  }\n\n  /**\n   * Add headers\n   * @param options\n   * @param spanUrl\n   */\n  private _addHeaders(options: Request | RequestInit, spanUrl: string): void {\n    if (\n      !web.shouldPropagateTraceHeaders(\n        spanUrl,\n        this.getConfig().propagateTraceHeaderCorsUrls\n      )\n    ) {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n\n    if (options instanceof Request) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n      });\n    } else if (options.headers instanceof Headers) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n      });\n    } else if (options.headers instanceof Map) {\n      api.propagation.inject(api.context.active(), options.headers, {\n        set: (h, k, v) => h.set(k, typeof v === 'string' ? v : String(v)),\n      });\n    } else {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      options.headers = Object.assign({}, headers, options.headers || {});\n    }\n  }\n\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link FetchPluginConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  private _clearResources() {\n    if (this._tasksCount === 0 && this.getConfig().clearTimingResources) {\n      performance.clearResourceTimings();\n      this._usedResources = new WeakSet<PerformanceResourceTiming>();\n    }\n  }\n\n  /**\n   * Creates a new span\n   * @param url\n   * @param options\n   */\n  private _createSpan(\n    url: string,\n    options: Partial<Request | RequestInit> = {}\n  ): api.Span | undefined {\n    if (core.isUrlIgnored(url, this.getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    const method = (options.method || 'GET').toUpperCase();\n    const spanName = `HTTP ${method}`;\n    return this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: {\n        [AttributeNames.COMPONENT]: this.moduleName,\n        [SEMATTRS_HTTP_METHOD]: method,\n        [SEMATTRS_HTTP_URL]: url,\n      },\n    });\n  }\n\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   * @param resourcesObserver\n   * @param endTime\n   */\n  private _findResourceAndAddNetworkEvents(\n    span: api.Span,\n    resourcesObserver: SpanData,\n    endTime: api.HrTime\n  ): void {\n    let resources: PerformanceResourceTiming[] = resourcesObserver.entries;\n    if (!resources.length) {\n      if (!performance.getEntriesByType) {\n        return;\n      }\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      resources = performance.getEntriesByType(\n        'resource'\n      ) as PerformanceResourceTiming[];\n    }\n    const resource = web.getResource(\n      resourcesObserver.spanUrl,\n      resourcesObserver.startTime,\n      endTime,\n      resources,\n      this._usedResources,\n      'fetch'\n    );\n\n    if (resource.mainRequest) {\n      const mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n\n      const corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      if (!this.getConfig().ignoreNetworkEvents) {\n        web.addSpanNetworkEvents(span, mainRequest);\n      }\n    }\n  }\n\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   */\n  private _markResourceAsUsed(resource: PerformanceResourceTiming): void {\n    this._usedResources.add(resource);\n  }\n\n  /**\n   * Finish span, add attributes, network events etc.\n   * @param span\n   * @param spanData\n   * @param response\n   */\n  private _endSpan(\n    span: api.Span,\n    spanData: SpanData,\n    response: FetchResponse\n  ) {\n    const endTime = core.millisToHrTime(Date.now());\n    const performanceEndTime = core.hrTime();\n    this._addFinalSpanAttributes(span, response);\n\n    setTimeout(() => {\n      spanData.observer?.disconnect();\n      this._findResourceAndAddNetworkEvents(span, spanData, performanceEndTime);\n      this._tasksCount--;\n      this._clearResources();\n      span.end(endTime);\n    }, OBSERVER_WAIT_TIME_MS);\n  }\n\n  /**\n   * Patches the constructor of fetch\n   */\n  private _patchConstructor(): (original: typeof fetch) => typeof fetch {\n    return original => {\n      const plugin = this;\n      return function patchConstructor(\n        this: typeof globalThis,\n        ...args: Parameters<typeof fetch>\n      ): Promise<Response> {\n        const self = this;\n        const url = web.parseUrl(\n          args[0] instanceof Request ? args[0].url : String(args[0])\n        ).href;\n\n        const options = args[0] instanceof Request ? args[0] : args[1] || {};\n        const createdSpan = plugin._createSpan(url, options);\n        if (!createdSpan) {\n          return original.apply(this, args);\n        }\n        const spanData = plugin._prepareSpanData(url);\n\n        function endSpanOnError(span: api.Span, error: FetchError) {\n          plugin._applyAttributesAfterFetch(span, options, error);\n          plugin._endSpan(span, spanData, {\n            status: error.status || 0,\n            statusText: error.message,\n            url,\n          });\n        }\n\n        function endSpanOnSuccess(span: api.Span, response: Response) {\n          plugin._applyAttributesAfterFetch(span, options, response);\n          if (response.status >= 200 && response.status < 400) {\n            plugin._endSpan(span, spanData, response);\n          } else {\n            plugin._endSpan(span, spanData, {\n              status: response.status,\n              statusText: response.statusText,\n              url,\n            });\n          }\n        }\n\n        function onSuccess(\n          span: api.Span,\n          resolve: (value: Response | PromiseLike<Response>) => void,\n          response: Response\n        ): void {\n          try {\n            const resClone = response.clone();\n            const resClone4Hook = response.clone();\n            const body = resClone.body;\n            if (body) {\n              const reader = body.getReader();\n              const read = (): void => {\n                reader.read().then(\n                  ({ done }) => {\n                    if (done) {\n                      endSpanOnSuccess(span, resClone4Hook);\n                    } else {\n                      read();\n                    }\n                  },\n                  error => {\n                    endSpanOnError(span, error);\n                  }\n                );\n              };\n              read();\n            } else {\n              // some older browsers don't have .body implemented\n              endSpanOnSuccess(span, response);\n            }\n          } finally {\n            resolve(response);\n          }\n        }\n\n        function onError(\n          span: api.Span,\n          reject: (reason?: unknown) => void,\n          error: FetchError\n        ) {\n          try {\n            endSpanOnError(span, error);\n          } finally {\n            reject(error);\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          return api.context.with(\n            api.trace.setSpan(api.context.active(), createdSpan),\n            () => {\n              plugin._addHeaders(options, url);\n              plugin._tasksCount++;\n              // TypeScript complains about arrow function captured a this typed as globalThis\n              // ts(7041)\n              return original\n                .apply(\n                  self,\n                  options instanceof Request ? [options] : [url, options]\n                )\n                .then(\n                  onSuccess.bind(self, createdSpan, resolve),\n                  onError.bind(self, createdSpan, reject)\n                );\n            }\n          );\n        });\n      };\n    };\n  }\n\n  private _applyAttributesAfterFetch(\n    span: api.Span,\n    request: Request | RequestInit,\n    result: Response | FetchError\n  ) {\n    const applyCustomAttributesOnSpan =\n      this.getConfig().applyCustomAttributesOnSpan;\n    if (applyCustomAttributesOnSpan) {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, request, result),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('applyCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * Prepares a span data - needed later for matching appropriate network\n   *     resources\n   * @param spanUrl\n   */\n  private _prepareSpanData(spanUrl: string): SpanData {\n    const startTime = core.hrTime();\n    const entries: PerformanceResourceTiming[] = [];\n    if (typeof PerformanceObserver !== 'function') {\n      return { entries, startTime, spanUrl };\n    }\n\n    const observer = new PerformanceObserver(list => {\n      const perfObsEntries = list.getEntries() as PerformanceResourceTiming[];\n      perfObsEntries.forEach(entry => {\n        if (entry.initiatorType === 'fetch' && entry.name === spanUrl) {\n          entries.push(entry);\n        }\n      });\n    });\n    observer.observe({\n      entryTypes: ['resource'],\n    });\n    return { entries, observer, startTime, spanUrl };\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable(): void {\n    if (isNode) {\n      // Node.js v18+ *does* have a global `fetch()`, but this package does not\n      // support instrumenting it.\n      this._diag.warn(\n        \"this instrumentation is intended for web usage only, it does not instrument Node.js's fetch()\"\n      );\n      return;\n    }\n    if (isWrapped(fetch)) {\n      this._unwrap(_globalThis, 'fetch');\n      this._diag.debug('removing previous patch for constructor');\n    }\n    this._wrap(_globalThis, 'fetch', this._patchConstructor());\n  }\n\n  /**\n   * implements unpatch function\n   */\n  override disable(): void {\n    if (isNode) {\n      return;\n    }\n    this._unwrap(_globalThis, 'fetch');\n    this._usedResources = new WeakSet<PerformanceResourceTiming>();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const otperformance = performance;\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function urlMatches(url: string, urlToMatch: string | RegExp): boolean {\n  if (typeof urlToMatch === 'string') {\n    return url === urlToMatch;\n  } else {\n    return !!url.match(urlToMatch);\n  }\n}\n/**\n * Check if {@param url} should be ignored when comparing against {@param ignoredUrls}\n * @param url\n * @param ignoredUrls\n */\nexport function isUrlIgnored(\n  url: string,\n  ignoredUrls?: Array<string | RegExp>\n): boolean {\n  if (!ignoredUrls) {\n    return false;\n  }\n\n  for (const ignoreUrl of ignoredUrls) {\n    if (urlMatches(url, ignoreUrl)) {\n      return true;\n    }\n  }\n  return false;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst NANOSECOND_DIGITS_IN_MILLIS = 6;\nconst MILLISECONDS_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS_IN_MILLIS);\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number of milliseconds from epoch to HrTime([seconds, remainder in nanoseconds]).\n * @param epochMillis\n */\nexport function millisToHrTime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos = Math.round((epochMillis % 1000) * MILLISECONDS_TO_NANOSECONDS);\n  return [seconds, nanos];\n}\n\nexport function getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = performance as unknown as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = millisToHrTime(getTimeOrigin());\n  const now = millisToHrTime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  return addHrTimes(timeOrigin, now);\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return millisToHrTime(time);\n    }\n  } else if (time instanceof Date) {\n    return millisToHrTime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return time[0] * 1e3 + time[1] / 1e6;\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return time[0] * 1e6 + time[1] / 1e3;\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(\n  value: unknown\n): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n\n/**\n * Given 2 HrTime formatted times, return their sum as an HrTime.\n */\nexport function addHrTimes(time1: api.HrTime, time2: api.HrTime): api.HrTime {\n  const out = [time1[0] + time2[0], time1[1] + time2[1]] as api.HrTime;\n\n  // Nanoseconds\n  if (out[1] >= SECOND_TO_NANOSECONDS) {\n    out[1] -= SECOND_TO_NANOSECONDS;\n    out[0] += 1;\n  }\n\n  return out;\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createConstMap } from '../internal/utils';\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n//----------------------------------------------------------------------------------------------------------\n// Constant values for SemanticAttributes\n//----------------------------------------------------------------------------------------------------------\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn';\nconst TMP_DB_SYSTEM = 'db.system';\nconst TMP_DB_CONNECTION_STRING = 'db.connection_string';\nconst TMP_DB_USER = 'db.user';\nconst TMP_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname';\nconst TMP_DB_NAME = 'db.name';\nconst TMP_DB_STATEMENT = 'db.statement';\nconst TMP_DB_OPERATION = 'db.operation';\nconst TMP_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name';\nconst TMP_DB_CASSANDRA_KEYSPACE = 'db.cassandra.keyspace';\nconst TMP_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size';\nconst TMP_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level';\nconst TMP_DB_CASSANDRA_TABLE = 'db.cassandra.table';\nconst TMP_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence';\nconst TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  'db.cassandra.speculative_execution_count';\nconst TMP_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id';\nconst TMP_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc';\nconst TMP_DB_HBASE_NAMESPACE = 'db.hbase.namespace';\nconst TMP_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index';\nconst TMP_DB_MONGODB_COLLECTION = 'db.mongodb.collection';\nconst TMP_DB_SQL_TABLE = 'db.sql.table';\nconst TMP_EXCEPTION_TYPE = 'exception.type';\nconst TMP_EXCEPTION_MESSAGE = 'exception.message';\nconst TMP_EXCEPTION_STACKTRACE = 'exception.stacktrace';\nconst TMP_EXCEPTION_ESCAPED = 'exception.escaped';\nconst TMP_FAAS_TRIGGER = 'faas.trigger';\nconst TMP_FAAS_EXECUTION = 'faas.execution';\nconst TMP_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection';\nconst TMP_FAAS_DOCUMENT_OPERATION = 'faas.document.operation';\nconst TMP_FAAS_DOCUMENT_TIME = 'faas.document.time';\nconst TMP_FAAS_DOCUMENT_NAME = 'faas.document.name';\nconst TMP_FAAS_TIME = 'faas.time';\nconst TMP_FAAS_CRON = 'faas.cron';\nconst TMP_FAAS_COLDSTART = 'faas.coldstart';\nconst TMP_FAAS_INVOKED_NAME = 'faas.invoked_name';\nconst TMP_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider';\nconst TMP_FAAS_INVOKED_REGION = 'faas.invoked_region';\nconst TMP_NET_TRANSPORT = 'net.transport';\nconst TMP_NET_PEER_IP = 'net.peer.ip';\nconst TMP_NET_PEER_PORT = 'net.peer.port';\nconst TMP_NET_PEER_NAME = 'net.peer.name';\nconst TMP_NET_HOST_IP = 'net.host.ip';\nconst TMP_NET_HOST_PORT = 'net.host.port';\nconst TMP_NET_HOST_NAME = 'net.host.name';\nconst TMP_NET_HOST_CONNECTION_TYPE = 'net.host.connection.type';\nconst TMP_NET_HOST_CONNECTION_SUBTYPE = 'net.host.connection.subtype';\nconst TMP_NET_HOST_CARRIER_NAME = 'net.host.carrier.name';\nconst TMP_NET_HOST_CARRIER_MCC = 'net.host.carrier.mcc';\nconst TMP_NET_HOST_CARRIER_MNC = 'net.host.carrier.mnc';\nconst TMP_NET_HOST_CARRIER_ICC = 'net.host.carrier.icc';\nconst TMP_PEER_SERVICE = 'peer.service';\nconst TMP_ENDUSER_ID = 'enduser.id';\nconst TMP_ENDUSER_ROLE = 'enduser.role';\nconst TMP_ENDUSER_SCOPE = 'enduser.scope';\nconst TMP_THREAD_ID = 'thread.id';\nconst TMP_THREAD_NAME = 'thread.name';\nconst TMP_CODE_FUNCTION = 'code.function';\nconst TMP_CODE_NAMESPACE = 'code.namespace';\nconst TMP_CODE_FILEPATH = 'code.filepath';\nconst TMP_CODE_LINENO = 'code.lineno';\nconst TMP_HTTP_METHOD = 'http.method';\nconst TMP_HTTP_URL = 'http.url';\nconst TMP_HTTP_TARGET = 'http.target';\nconst TMP_HTTP_HOST = 'http.host';\nconst TMP_HTTP_SCHEME = 'http.scheme';\nconst TMP_HTTP_STATUS_CODE = 'http.status_code';\nconst TMP_HTTP_FLAVOR = 'http.flavor';\nconst TMP_HTTP_USER_AGENT = 'http.user_agent';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length';\nconst TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.request_content_length_uncompressed';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length';\nconst TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  'http.response_content_length_uncompressed';\nconst TMP_HTTP_SERVER_NAME = 'http.server_name';\nconst TMP_HTTP_ROUTE = 'http.route';\nconst TMP_HTTP_CLIENT_IP = 'http.client_ip';\nconst TMP_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names';\nconst TMP_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity';\nconst TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  'aws.dynamodb.item_collection_metrics';\nconst TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  'aws.dynamodb.provisioned_read_capacity';\nconst TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  'aws.dynamodb.provisioned_write_capacity';\nconst TMP_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read';\nconst TMP_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection';\nconst TMP_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit';\nconst TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get';\nconst TMP_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name';\nconst TMP_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  'aws.dynamodb.global_secondary_indexes';\nconst TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  'aws.dynamodb.local_secondary_indexes';\nconst TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  'aws.dynamodb.exclusive_start_table';\nconst TMP_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count';\nconst TMP_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward';\nconst TMP_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment';\nconst TMP_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments';\nconst TMP_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count';\nconst TMP_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count';\nconst TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  'aws.dynamodb.attribute_definitions';\nconst TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  'aws.dynamodb.global_secondary_index_updates';\nconst TMP_MESSAGING_SYSTEM = 'messaging.system';\nconst TMP_MESSAGING_DESTINATION = 'messaging.destination';\nconst TMP_MESSAGING_DESTINATION_KIND = 'messaging.destination_kind';\nconst TMP_MESSAGING_TEMP_DESTINATION = 'messaging.temp_destination';\nconst TMP_MESSAGING_PROTOCOL = 'messaging.protocol';\nconst TMP_MESSAGING_PROTOCOL_VERSION = 'messaging.protocol_version';\nconst TMP_MESSAGING_URL = 'messaging.url';\nconst TMP_MESSAGING_MESSAGE_ID = 'messaging.message_id';\nconst TMP_MESSAGING_CONVERSATION_ID = 'messaging.conversation_id';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  'messaging.message_payload_size_bytes';\nconst TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  'messaging.message_payload_compressed_size_bytes';\nconst TMP_MESSAGING_OPERATION = 'messaging.operation';\nconst TMP_MESSAGING_CONSUMER_ID = 'messaging.consumer_id';\nconst TMP_MESSAGING_RABBITMQ_ROUTING_KEY = 'messaging.rabbitmq.routing_key';\nconst TMP_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message_key';\nconst TMP_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer_group';\nconst TMP_MESSAGING_KAFKA_CLIENT_ID = 'messaging.kafka.client_id';\nconst TMP_MESSAGING_KAFKA_PARTITION = 'messaging.kafka.partition';\nconst TMP_MESSAGING_KAFKA_TOMBSTONE = 'messaging.kafka.tombstone';\nconst TMP_RPC_SYSTEM = 'rpc.system';\nconst TMP_RPC_SERVICE = 'rpc.service';\nconst TMP_RPC_METHOD = 'rpc.method';\nconst TMP_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code';\nconst TMP_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version';\nconst TMP_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id';\nconst TMP_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code';\nconst TMP_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message';\nconst TMP_MESSAGE_TYPE = 'message.type';\nconst TMP_MESSAGE_ID = 'message.id';\nconst TMP_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size';\nconst TMP_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size';\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n *\n * Note: This may be different from `faas.id` if an alias is involved.\n *\n * @deprecated use ATTR_AWS_LAMBDA_INVOKED_ARN\n */\nexport const SEMATTRS_AWS_LAMBDA_INVOKED_ARN = TMP_AWS_LAMBDA_INVOKED_ARN;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated use ATTR_DB_SYSTEM\n */\nexport const SEMATTRS_DB_SYSTEM = TMP_DB_SYSTEM;\n\n/**\n * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n *\n * @deprecated use ATTR_DB_CONNECTION_STRING\n */\nexport const SEMATTRS_DB_CONNECTION_STRING = TMP_DB_CONNECTION_STRING;\n\n/**\n * Username for accessing the database.\n *\n * @deprecated use ATTR_DB_USER\n */\nexport const SEMATTRS_DB_USER = TMP_DB_USER;\n\n/**\n * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n *\n * @deprecated use ATTR_DB_JDBC_DRIVER_CLASSNAME\n */\nexport const SEMATTRS_DB_JDBC_DRIVER_CLASSNAME = TMP_DB_JDBC_DRIVER_CLASSNAME;\n\n/**\n * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n *\n * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n *\n * @deprecated use ATTR_DB_NAME\n */\nexport const SEMATTRS_DB_NAME = TMP_DB_NAME;\n\n/**\n * The database statement being executed.\n *\n * Note: The value may be sanitized to exclude sensitive information.\n *\n * @deprecated use ATTR_DB_STATEMENT\n */\nexport const SEMATTRS_DB_STATEMENT = TMP_DB_STATEMENT;\n\n/**\n * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n *\n * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n *\n * @deprecated use ATTR_DB_OPERATION\n */\nexport const SEMATTRS_DB_OPERATION = TMP_DB_OPERATION;\n\n/**\n * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n *\n * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n *\n * @deprecated use ATTR_DB_MSSQL_INSTANCE_NAME\n */\nexport const SEMATTRS_DB_MSSQL_INSTANCE_NAME = TMP_DB_MSSQL_INSTANCE_NAME;\n\n/**\n * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_CASSANDRA_KEYSPACE\n */\nexport const SEMATTRS_DB_CASSANDRA_KEYSPACE = TMP_DB_CASSANDRA_KEYSPACE;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n *\n * @deprecated use ATTR_DB_CASSANDRA_PAGE_SIZE\n */\nexport const SEMATTRS_DB_CASSANDRA_PAGE_SIZE = TMP_DB_CASSANDRA_PAGE_SIZE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated use ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL\n */\nexport const SEMATTRS_DB_CASSANDRA_CONSISTENCY_LEVEL =\n  TMP_DB_CASSANDRA_CONSISTENCY_LEVEL;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated use ATTR_DB_CASSANDRA_TABLE\n */\nexport const SEMATTRS_DB_CASSANDRA_TABLE = TMP_DB_CASSANDRA_TABLE;\n\n/**\n * Whether or not the query is idempotent.\n *\n * @deprecated use ATTR_DB_CASSANDRA_IDEMPOTENCE\n */\nexport const SEMATTRS_DB_CASSANDRA_IDEMPOTENCE = TMP_DB_CASSANDRA_IDEMPOTENCE;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n *\n * @deprecated use ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT\n */\nexport const SEMATTRS_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT =\n  TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT;\n\n/**\n * The ID of the coordinating node for a query.\n *\n * @deprecated use ATTR_DB_CASSANDRA_COORDINATOR_ID\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_ID =\n  TMP_DB_CASSANDRA_COORDINATOR_ID;\n\n/**\n * The data center of the coordinating node for a query.\n *\n * @deprecated use ATTR_DB_CASSANDRA_COORDINATOR_DC\n */\nexport const SEMATTRS_DB_CASSANDRA_COORDINATOR_DC =\n  TMP_DB_CASSANDRA_COORDINATOR_DC;\n\n/**\n * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_HBASE_NAMESPACE\n */\nexport const SEMATTRS_DB_HBASE_NAMESPACE = TMP_DB_HBASE_NAMESPACE;\n\n/**\n * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n *\n * @deprecated use ATTR_DB_REDIS_DATABASE_INDEX\n */\nexport const SEMATTRS_DB_REDIS_DATABASE_INDEX = TMP_DB_REDIS_DATABASE_INDEX;\n\n/**\n * The collection being accessed within the database stated in `db.name`.\n *\n * @deprecated use ATTR_DB_MONGODB_COLLECTION\n */\nexport const SEMATTRS_DB_MONGODB_COLLECTION = TMP_DB_MONGODB_COLLECTION;\n\n/**\n * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n *\n * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n *\n * @deprecated use ATTR_DB_SQL_TABLE\n */\nexport const SEMATTRS_DB_SQL_TABLE = TMP_DB_SQL_TABLE;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n *\n * @deprecated use ATTR_EXCEPTION_TYPE\n */\nexport const SEMATTRS_EXCEPTION_TYPE = TMP_EXCEPTION_TYPE;\n\n/**\n * The exception message.\n *\n * @deprecated use ATTR_EXCEPTION_MESSAGE\n */\nexport const SEMATTRS_EXCEPTION_MESSAGE = TMP_EXCEPTION_MESSAGE;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n *\n * @deprecated use ATTR_EXCEPTION_STACKTRACE\n */\nexport const SEMATTRS_EXCEPTION_STACKTRACE = TMP_EXCEPTION_STACKTRACE;\n\n/**\n* SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n*\n* Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n*\n* @deprecated use ATTR_EXCEPTION_ESCAPED\n*/\nexport const SEMATTRS_EXCEPTION_ESCAPED = TMP_EXCEPTION_ESCAPED;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated use ATTR_FAAS_TRIGGER\n */\nexport const SEMATTRS_FAAS_TRIGGER = TMP_FAAS_TRIGGER;\n\n/**\n * The execution ID of the current function execution.\n *\n * @deprecated use ATTR_FAAS_EXECUTION\n */\nexport const SEMATTRS_FAAS_EXECUTION = TMP_FAAS_EXECUTION;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_COLLECTION\n */\nexport const SEMATTRS_FAAS_DOCUMENT_COLLECTION = TMP_FAAS_DOCUMENT_COLLECTION;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_OPERATION\n */\nexport const SEMATTRS_FAAS_DOCUMENT_OPERATION = TMP_FAAS_DOCUMENT_OPERATION;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_TIME\n */\nexport const SEMATTRS_FAAS_DOCUMENT_TIME = TMP_FAAS_DOCUMENT_TIME;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n *\n * @deprecated use ATTR_FAAS_DOCUMENT_NAME\n */\nexport const SEMATTRS_FAAS_DOCUMENT_NAME = TMP_FAAS_DOCUMENT_NAME;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n *\n * @deprecated use ATTR_FAAS_TIME\n */\nexport const SEMATTRS_FAAS_TIME = TMP_FAAS_TIME;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n *\n * @deprecated use ATTR_FAAS_CRON\n */\nexport const SEMATTRS_FAAS_CRON = TMP_FAAS_CRON;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n *\n * @deprecated use ATTR_FAAS_COLDSTART\n */\nexport const SEMATTRS_FAAS_COLDSTART = TMP_FAAS_COLDSTART;\n\n/**\n * The name of the invoked function.\n *\n * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_NAME\n */\nexport const SEMATTRS_FAAS_INVOKED_NAME = TMP_FAAS_INVOKED_NAME;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_PROVIDER\n */\nexport const SEMATTRS_FAAS_INVOKED_PROVIDER = TMP_FAAS_INVOKED_PROVIDER;\n\n/**\n * The cloud region of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n *\n * @deprecated use ATTR_FAAS_INVOKED_REGION\n */\nexport const SEMATTRS_FAAS_INVOKED_REGION = TMP_FAAS_INVOKED_REGION;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated use ATTR_NET_TRANSPORT\n */\nexport const SEMATTRS_NET_TRANSPORT = TMP_NET_TRANSPORT;\n\n/**\n * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n *\n * @deprecated use ATTR_NET_PEER_IP\n */\nexport const SEMATTRS_NET_PEER_IP = TMP_NET_PEER_IP;\n\n/**\n * Remote port number.\n *\n * @deprecated use ATTR_NET_PEER_PORT\n */\nexport const SEMATTRS_NET_PEER_PORT = TMP_NET_PEER_PORT;\n\n/**\n * Remote hostname or similar, see note below.\n *\n * @deprecated use ATTR_NET_PEER_NAME\n */\nexport const SEMATTRS_NET_PEER_NAME = TMP_NET_PEER_NAME;\n\n/**\n * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n *\n * @deprecated use ATTR_NET_HOST_IP\n */\nexport const SEMATTRS_NET_HOST_IP = TMP_NET_HOST_IP;\n\n/**\n * Like `net.peer.port` but for the host port.\n *\n * @deprecated use ATTR_NET_HOST_PORT\n */\nexport const SEMATTRS_NET_HOST_PORT = TMP_NET_HOST_PORT;\n\n/**\n * Local hostname or similar, see note below.\n *\n * @deprecated use ATTR_NET_HOST_NAME\n */\nexport const SEMATTRS_NET_HOST_NAME = TMP_NET_HOST_NAME;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated use ATTR_NET_HOST_CONNECTION_TYPE\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_TYPE = TMP_NET_HOST_CONNECTION_TYPE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated use ATTR_NET_HOST_CONNECTION_SUBTYPE\n */\nexport const SEMATTRS_NET_HOST_CONNECTION_SUBTYPE =\n  TMP_NET_HOST_CONNECTION_SUBTYPE;\n\n/**\n * The name of the mobile carrier.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_NAME\n */\nexport const SEMATTRS_NET_HOST_CARRIER_NAME = TMP_NET_HOST_CARRIER_NAME;\n\n/**\n * The mobile carrier country code.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_MCC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MCC = TMP_NET_HOST_CARRIER_MCC;\n\n/**\n * The mobile carrier network code.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_MNC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_MNC = TMP_NET_HOST_CARRIER_MNC;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n *\n * @deprecated use ATTR_NET_HOST_CARRIER_ICC\n */\nexport const SEMATTRS_NET_HOST_CARRIER_ICC = TMP_NET_HOST_CARRIER_ICC;\n\n/**\n * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n *\n * @deprecated use ATTR_PEER_SERVICE\n */\nexport const SEMATTRS_PEER_SERVICE = TMP_PEER_SERVICE;\n\n/**\n * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n *\n * @deprecated use ATTR_ENDUSER_ID\n */\nexport const SEMATTRS_ENDUSER_ID = TMP_ENDUSER_ID;\n\n/**\n * Actual/assumed role the client is making the request under extracted from token or application security context.\n *\n * @deprecated use ATTR_ENDUSER_ROLE\n */\nexport const SEMATTRS_ENDUSER_ROLE = TMP_ENDUSER_ROLE;\n\n/**\n * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n *\n * @deprecated use ATTR_ENDUSER_SCOPE\n */\nexport const SEMATTRS_ENDUSER_SCOPE = TMP_ENDUSER_SCOPE;\n\n/**\n * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n *\n * @deprecated use ATTR_THREAD_ID\n */\nexport const SEMATTRS_THREAD_ID = TMP_THREAD_ID;\n\n/**\n * Current thread name.\n *\n * @deprecated use ATTR_THREAD_NAME\n */\nexport const SEMATTRS_THREAD_NAME = TMP_THREAD_NAME;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n *\n * @deprecated use ATTR_CODE_FUNCTION\n */\nexport const SEMATTRS_CODE_FUNCTION = TMP_CODE_FUNCTION;\n\n/**\n * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n *\n * @deprecated use ATTR_CODE_NAMESPACE\n */\nexport const SEMATTRS_CODE_NAMESPACE = TMP_CODE_NAMESPACE;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n *\n * @deprecated use ATTR_CODE_FILEPATH\n */\nexport const SEMATTRS_CODE_FILEPATH = TMP_CODE_FILEPATH;\n\n/**\n * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n *\n * @deprecated use ATTR_CODE_LINENO\n */\nexport const SEMATTRS_CODE_LINENO = TMP_CODE_LINENO;\n\n/**\n * HTTP request method.\n *\n * @deprecated use ATTR_HTTP_METHOD\n */\nexport const SEMATTRS_HTTP_METHOD = TMP_HTTP_METHOD;\n\n/**\n * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n *\n * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n *\n * @deprecated use ATTR_HTTP_URL\n */\nexport const SEMATTRS_HTTP_URL = TMP_HTTP_URL;\n\n/**\n * The full request target as passed in a HTTP request line or equivalent.\n *\n * @deprecated use ATTR_HTTP_TARGET\n */\nexport const SEMATTRS_HTTP_TARGET = TMP_HTTP_TARGET;\n\n/**\n * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n *\n * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n *\n * @deprecated use ATTR_HTTP_HOST\n */\nexport const SEMATTRS_HTTP_HOST = TMP_HTTP_HOST;\n\n/**\n * The URI scheme identifying the used protocol.\n *\n * @deprecated use ATTR_HTTP_SCHEME\n */\nexport const SEMATTRS_HTTP_SCHEME = TMP_HTTP_SCHEME;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n *\n * @deprecated use ATTR_HTTP_STATUS_CODE\n */\nexport const SEMATTRS_HTTP_STATUS_CODE = TMP_HTTP_STATUS_CODE;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated use ATTR_HTTP_FLAVOR\n */\nexport const SEMATTRS_HTTP_FLAVOR = TMP_HTTP_FLAVOR;\n\n/**\n * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n *\n * @deprecated use ATTR_HTTP_USER_AGENT\n */\nexport const SEMATTRS_HTTP_USER_AGENT = TMP_HTTP_USER_AGENT;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated use ATTR_HTTP_REQUEST_CONTENT_LENGTH\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated use ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED\n */\nexport const SEMATTRS_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n *\n * @deprecated use ATTR_HTTP_RESPONSE_CONTENT_LENGTH\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH;\n\n/**\n * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n *\n * @deprecated use ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED\n */\nexport const SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED =\n  TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED;\n\n/**\n * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n *\n * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n *\n * @deprecated use ATTR_HTTP_SERVER_NAME\n */\nexport const SEMATTRS_HTTP_SERVER_NAME = TMP_HTTP_SERVER_NAME;\n\n/**\n * The matched route (path template).\n *\n * @deprecated use ATTR_HTTP_ROUTE\n */\nexport const SEMATTRS_HTTP_ROUTE = TMP_HTTP_ROUTE;\n\n/**\n* The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n*\n* Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n*\n* @deprecated use ATTR_HTTP_CLIENT_IP\n*/\nexport const SEMATTRS_HTTP_CLIENT_IP = TMP_HTTP_CLIENT_IP;\n\n/**\n * The keys in the `RequestItems` object field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TABLE_NAMES\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_NAMES = TMP_AWS_DYNAMODB_TABLE_NAMES;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSUMED_CAPACITY =\n  TMP_AWS_DYNAMODB_CONSUMED_CAPACITY;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS\n */\nexport const SEMATTRS_AWS_DYNAMODB_ITEM_COLLECTION_METRICS =\n  TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY =\n  TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_CONSISTENT_READ\n */\nexport const SEMATTRS_AWS_DYNAMODB_CONSISTENT_READ =\n  TMP_AWS_DYNAMODB_CONSISTENT_READ;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_PROJECTION\n */\nexport const SEMATTRS_AWS_DYNAMODB_PROJECTION = TMP_AWS_DYNAMODB_PROJECTION;\n\n/**\n * The value of the `Limit` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_LIMIT\n */\nexport const SEMATTRS_AWS_DYNAMODB_LIMIT = TMP_AWS_DYNAMODB_LIMIT;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTES_TO_GET =\n  TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET;\n\n/**\n * The value of the `IndexName` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_INDEX_NAME\n */\nexport const SEMATTRS_AWS_DYNAMODB_INDEX_NAME = TMP_AWS_DYNAMODB_INDEX_NAME;\n\n/**\n * The value of the `Select` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SELECT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SELECT = TMP_AWS_DYNAMODB_SELECT;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES\n */\nexport const SEMATTRS_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES =\n  TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE\n */\nexport const SEMATTRS_AWS_DYNAMODB_EXCLUSIVE_START_TABLE =\n  TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE;\n\n/**\n * The the number of items in the `TableNames` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TABLE_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_TABLE_COUNT = TMP_AWS_DYNAMODB_TABLE_COUNT;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SCAN_FORWARD\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCAN_FORWARD = TMP_AWS_DYNAMODB_SCAN_FORWARD;\n\n/**\n * The value of the `Segment` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SEGMENT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SEGMENT = TMP_AWS_DYNAMODB_SEGMENT;\n\n/**\n * The value of the `TotalSegments` request parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS\n */\nexport const SEMATTRS_AWS_DYNAMODB_TOTAL_SEGMENTS =\n  TMP_AWS_DYNAMODB_TOTAL_SEGMENTS;\n\n/**\n * The value of the `Count` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_COUNT = TMP_AWS_DYNAMODB_COUNT;\n\n/**\n * The value of the `ScannedCount` response parameter.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_SCANNED_COUNT\n */\nexport const SEMATTRS_AWS_DYNAMODB_SCANNED_COUNT =\n  TMP_AWS_DYNAMODB_SCANNED_COUNT;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS\n */\nexport const SEMATTRS_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS =\n  TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS;\n\n/**\n * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n *\n * @deprecated use ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES\n */\nexport const SEMATTRS_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES =\n  TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES;\n\n/**\n * A string identifying the messaging system.\n *\n * @deprecated use ATTR_MESSAGING_SYSTEM\n */\nexport const SEMATTRS_MESSAGING_SYSTEM = TMP_MESSAGING_SYSTEM;\n\n/**\n * The message destination name. This might be equal to the span name but is required nevertheless.\n *\n * @deprecated use ATTR_MESSAGING_DESTINATION\n */\nexport const SEMATTRS_MESSAGING_DESTINATION = TMP_MESSAGING_DESTINATION;\n\n/**\n * The kind of message destination.\n *\n * @deprecated use ATTR_MESSAGING_DESTINATION_KIND\n */\nexport const SEMATTRS_MESSAGING_DESTINATION_KIND =\n  TMP_MESSAGING_DESTINATION_KIND;\n\n/**\n * A boolean that is true if the message destination is temporary.\n *\n * @deprecated use ATTR_MESSAGING_TEMP_DESTINATION\n */\nexport const SEMATTRS_MESSAGING_TEMP_DESTINATION =\n  TMP_MESSAGING_TEMP_DESTINATION;\n\n/**\n * The name of the transport protocol.\n *\n * @deprecated use ATTR_MESSAGING_PROTOCOL\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL = TMP_MESSAGING_PROTOCOL;\n\n/**\n * The version of the transport protocol.\n *\n * @deprecated use ATTR_MESSAGING_PROTOCOL_VERSION\n */\nexport const SEMATTRS_MESSAGING_PROTOCOL_VERSION =\n  TMP_MESSAGING_PROTOCOL_VERSION;\n\n/**\n * Connection string.\n *\n * @deprecated use ATTR_MESSAGING_URL\n */\nexport const SEMATTRS_MESSAGING_URL = TMP_MESSAGING_URL;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_ID\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_ID = TMP_MESSAGING_MESSAGE_ID;\n\n/**\n * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n *\n * @deprecated use ATTR_MESSAGING_CONVERSATION_ID\n */\nexport const SEMATTRS_MESSAGING_CONVERSATION_ID = TMP_MESSAGING_CONVERSATION_ID;\n\n/**\n * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES;\n\n/**\n * The compressed size of the message payload in bytes.\n *\n * @deprecated use ATTR_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES\n */\nexport const SEMATTRS_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES =\n  TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated use ATTR_MESSAGING_OPERATION\n */\nexport const SEMATTRS_MESSAGING_OPERATION = TMP_MESSAGING_OPERATION;\n\n/**\n * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n *\n * @deprecated use ATTR_MESSAGING_CONSUMER_ID\n */\nexport const SEMATTRS_MESSAGING_CONSUMER_ID = TMP_MESSAGING_CONSUMER_ID;\n\n/**\n * RabbitMQ message routing key.\n *\n * @deprecated use ATTR_MESSAGING_RABBITMQ_ROUTING_KEY\n */\nexport const SEMATTRS_MESSAGING_RABBITMQ_ROUTING_KEY =\n  TMP_MESSAGING_RABBITMQ_ROUTING_KEY;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n *\n * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_MESSAGE_KEY\n */\nexport const SEMATTRS_MESSAGING_KAFKA_MESSAGE_KEY =\n  TMP_MESSAGING_KAFKA_MESSAGE_KEY;\n\n/**\n * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_CONSUMER_GROUP\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CONSUMER_GROUP =\n  TMP_MESSAGING_KAFKA_CONSUMER_GROUP;\n\n/**\n * Client Id for the Consumer or Producer that is handling the message.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_CLIENT_ID\n */\nexport const SEMATTRS_MESSAGING_KAFKA_CLIENT_ID = TMP_MESSAGING_KAFKA_CLIENT_ID;\n\n/**\n * Partition the message is sent to.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_PARTITION\n */\nexport const SEMATTRS_MESSAGING_KAFKA_PARTITION = TMP_MESSAGING_KAFKA_PARTITION;\n\n/**\n * A boolean that is true if the message is a tombstone.\n *\n * @deprecated use ATTR_MESSAGING_KAFKA_TOMBSTONE\n */\nexport const SEMATTRS_MESSAGING_KAFKA_TOMBSTONE = TMP_MESSAGING_KAFKA_TOMBSTONE;\n\n/**\n * A string identifying the remoting system.\n *\n * @deprecated use ATTR_RPC_SYSTEM\n */\nexport const SEMATTRS_RPC_SYSTEM = TMP_RPC_SYSTEM;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n *\n * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n *\n * @deprecated use ATTR_RPC_SERVICE\n */\nexport const SEMATTRS_RPC_SERVICE = TMP_RPC_SERVICE;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n *\n * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n *\n * @deprecated use ATTR_RPC_METHOD\n */\nexport const SEMATTRS_RPC_METHOD = TMP_RPC_METHOD;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated use ATTR_RPC_GRPC_STATUS_CODE\n */\nexport const SEMATTRS_RPC_GRPC_STATUS_CODE = TMP_RPC_GRPC_STATUS_CODE;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n *\n * @deprecated use ATTR_RPC_JSONRPC_VERSION\n */\nexport const SEMATTRS_RPC_JSONRPC_VERSION = TMP_RPC_JSONRPC_VERSION;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n *\n * @deprecated use ATTR_RPC_JSONRPC_REQUEST_ID\n */\nexport const SEMATTRS_RPC_JSONRPC_REQUEST_ID = TMP_RPC_JSONRPC_REQUEST_ID;\n\n/**\n * `error.code` property of response if it is an error response.\n *\n * @deprecated use ATTR_RPC_JSONRPC_ERROR_CODE\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_CODE = TMP_RPC_JSONRPC_ERROR_CODE;\n\n/**\n * `error.message` property of response if it is an error response.\n *\n * @deprecated use ATTR_RPC_JSONRPC_ERROR_MESSAGE\n */\nexport const SEMATTRS_RPC_JSONRPC_ERROR_MESSAGE = TMP_RPC_JSONRPC_ERROR_MESSAGE;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated use ATTR_MESSAGE_TYPE\n */\nexport const SEMATTRS_MESSAGE_TYPE = TMP_MESSAGE_TYPE;\n\n/**\n * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n *\n * Note: This way we guarantee that the values will be consistent between different implementations.\n *\n * @deprecated use ATTR_MESSAGE_ID\n */\nexport const SEMATTRS_MESSAGE_ID = TMP_MESSAGE_ID;\n\n/**\n * Compressed size of the message in bytes.\n *\n * @deprecated use ATTR_MESSAGE_COMPRESSED_SIZE\n */\nexport const SEMATTRS_MESSAGE_COMPRESSED_SIZE = TMP_MESSAGE_COMPRESSED_SIZE;\n\n/**\n * Uncompressed size of the message in bytes.\n *\n * @deprecated use ATTR_MESSAGE_UNCOMPRESSED_SIZE\n */\nexport const SEMATTRS_MESSAGE_UNCOMPRESSED_SIZE = TMP_MESSAGE_UNCOMPRESSED_SIZE;\n\n/**\n * Definition of available values for SemanticAttributes\n * This type is used for backward compatibility, you should use the individual exported\n * constants SemanticAttributes_XXXXX rather than the exported constant map. As any single reference\n * to a constant map value will result in all strings being included into your bundle.\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification.\n */\nexport type SemanticAttributes = {\n  /**\n   * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n   *\n   * Note: This may be different from `faas.id` if an alias is involved.\n   */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn';\n\n  /**\n   * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n   */\n  DB_SYSTEM: 'db.system';\n\n  /**\n   * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n   */\n  DB_CONNECTION_STRING: 'db.connection_string';\n\n  /**\n   * Username for accessing the database.\n   */\n  DB_USER: 'db.user';\n\n  /**\n   * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n   */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname';\n\n  /**\n   * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n   *\n   * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n   */\n  DB_NAME: 'db.name';\n\n  /**\n   * The database statement being executed.\n   *\n   * Note: The value may be sanitized to exclude sensitive information.\n   */\n  DB_STATEMENT: 'db.statement';\n\n  /**\n   * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n   *\n   * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n   */\n  DB_OPERATION: 'db.operation';\n\n  /**\n   * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n   *\n   * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n   */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name';\n\n  /**\n   * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace';\n\n  /**\n   * The fetch size used for paging, i.e. how many rows will be returned at once.\n   */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size';\n\n  /**\n   * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n   */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table';\n\n  /**\n   * Whether or not the query is idempotent.\n   */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence';\n\n  /**\n   * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n   */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count';\n\n  /**\n   * The ID of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id';\n\n  /**\n   * The data center of the coordinating node for a query.\n   */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc';\n\n  /**\n   * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n   */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace';\n\n  /**\n   * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n   */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index';\n\n  /**\n   * The collection being accessed within the database stated in `db.name`.\n   */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection';\n\n  /**\n   * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n   *\n   * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n   */\n  DB_SQL_TABLE: 'db.sql.table';\n\n  /**\n   * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n   */\n  EXCEPTION_TYPE: 'exception.type';\n\n  /**\n   * The exception message.\n   */\n  EXCEPTION_MESSAGE: 'exception.message';\n\n  /**\n   * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n   */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace';\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped';\n\n  /**\n   * Type of the trigger on which the function is executed.\n   */\n  FAAS_TRIGGER: 'faas.trigger';\n\n  /**\n   * The execution ID of the current function execution.\n   */\n  FAAS_EXECUTION: 'faas.execution';\n\n  /**\n   * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n   */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection';\n\n  /**\n   * Describes the type of the operation that was performed on the data.\n   */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation';\n\n  /**\n   * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_DOCUMENT_TIME: 'faas.document.time';\n\n  /**\n   * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n   */\n  FAAS_DOCUMENT_NAME: 'faas.document.name';\n\n  /**\n   * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n   */\n  FAAS_TIME: 'faas.time';\n\n  /**\n   * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n   */\n  FAAS_CRON: 'faas.cron';\n\n  /**\n   * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n   */\n  FAAS_COLDSTART: 'faas.coldstart';\n\n  /**\n   * The name of the invoked function.\n   *\n   * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_NAME: 'faas.invoked_name';\n\n  /**\n   * The cloud provider of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider';\n\n  /**\n   * The cloud region of the invoked function.\n   *\n   * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n   */\n  FAAS_INVOKED_REGION: 'faas.invoked_region';\n\n  /**\n   * Transport protocol used. See note below.\n   */\n  NET_TRANSPORT: 'net.transport';\n\n  /**\n   * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n   */\n  NET_PEER_IP: 'net.peer.ip';\n\n  /**\n   * Remote port number.\n   */\n  NET_PEER_PORT: 'net.peer.port';\n\n  /**\n   * Remote hostname or similar, see note below.\n   */\n  NET_PEER_NAME: 'net.peer.name';\n\n  /**\n   * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n   */\n  NET_HOST_IP: 'net.host.ip';\n\n  /**\n   * Like `net.peer.port` but for the host port.\n   */\n  NET_HOST_PORT: 'net.host.port';\n\n  /**\n   * Local hostname or similar, see note below.\n   */\n  NET_HOST_NAME: 'net.host.name';\n\n  /**\n   * The internet connection type currently being used by the host.\n   */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type';\n\n  /**\n   * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n   */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype';\n\n  /**\n   * The name of the mobile carrier.\n   */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name';\n\n  /**\n   * The mobile carrier country code.\n   */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc';\n\n  /**\n   * The mobile carrier network code.\n   */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc';\n\n  /**\n   * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n   */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc';\n\n  /**\n   * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n   */\n  PEER_SERVICE: 'peer.service';\n\n  /**\n   * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n   */\n  ENDUSER_ID: 'enduser.id';\n\n  /**\n   * Actual/assumed role the client is making the request under extracted from token or application security context.\n   */\n  ENDUSER_ROLE: 'enduser.role';\n\n  /**\n   * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n   */\n  ENDUSER_SCOPE: 'enduser.scope';\n\n  /**\n   * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n   */\n  THREAD_ID: 'thread.id';\n\n  /**\n   * Current thread name.\n   */\n  THREAD_NAME: 'thread.name';\n\n  /**\n   * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n   */\n  CODE_FUNCTION: 'code.function';\n\n  /**\n   * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n   */\n  CODE_NAMESPACE: 'code.namespace';\n\n  /**\n   * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n   */\n  CODE_FILEPATH: 'code.filepath';\n\n  /**\n   * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n   */\n  CODE_LINENO: 'code.lineno';\n\n  /**\n   * HTTP request method.\n   */\n  HTTP_METHOD: 'http.method';\n\n  /**\n   * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n   *\n   * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n   */\n  HTTP_URL: 'http.url';\n\n  /**\n   * The full request target as passed in a HTTP request line or equivalent.\n   */\n  HTTP_TARGET: 'http.target';\n\n  /**\n   * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n   *\n   * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n   */\n  HTTP_HOST: 'http.host';\n\n  /**\n   * The URI scheme identifying the used protocol.\n   */\n  HTTP_SCHEME: 'http.scheme';\n\n  /**\n   * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n   */\n  HTTP_STATUS_CODE: 'http.status_code';\n\n  /**\n   * Kind of HTTP protocol used.\n   *\n   * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n   */\n  HTTP_FLAVOR: 'http.flavor';\n\n  /**\n   * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n   */\n  HTTP_USER_AGENT: 'http.user_agent';\n\n  /**\n   * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length';\n\n  /**\n   * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed';\n\n  /**\n   * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length';\n\n  /**\n   * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n   */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed';\n\n  /**\n   * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n   *\n   * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n   */\n  HTTP_SERVER_NAME: 'http.server_name';\n\n  /**\n   * The matched route (path template).\n   */\n  HTTP_ROUTE: 'http.route';\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip';\n\n  /**\n   * The keys in the `RequestItems` object field.\n   */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names';\n\n  /**\n   * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n   */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity';\n\n  /**\n   * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n   */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics';\n\n  /**\n   * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity';\n\n  /**\n   * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n   */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity';\n\n  /**\n   * The value of the `ConsistentRead` request parameter.\n   */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read';\n\n  /**\n   * The value of the `ProjectionExpression` request parameter.\n   */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection';\n\n  /**\n   * The value of the `Limit` request parameter.\n   */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit';\n\n  /**\n   * The value of the `AttributesToGet` request parameter.\n   */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get';\n\n  /**\n   * The value of the `IndexName` request parameter.\n   */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name';\n\n  /**\n   * The value of the `Select` request parameter.\n   */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select';\n\n  /**\n   * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes';\n\n  /**\n   * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n   */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes';\n\n  /**\n   * The value of the `ExclusiveStartTableName` request parameter.\n   */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table';\n\n  /**\n   * The the number of items in the `TableNames` response parameter.\n   */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count';\n\n  /**\n   * The value of the `ScanIndexForward` request parameter.\n   */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward';\n\n  /**\n   * The value of the `Segment` request parameter.\n   */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment';\n\n  /**\n   * The value of the `TotalSegments` request parameter.\n   */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments';\n\n  /**\n   * The value of the `Count` response parameter.\n   */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count';\n\n  /**\n   * The value of the `ScannedCount` response parameter.\n   */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count';\n\n  /**\n   * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n   */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions';\n\n  /**\n   * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n   */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates';\n\n  /**\n   * A string identifying the messaging system.\n   */\n  MESSAGING_SYSTEM: 'messaging.system';\n\n  /**\n   * The message destination name. This might be equal to the span name but is required nevertheless.\n   */\n  MESSAGING_DESTINATION: 'messaging.destination';\n\n  /**\n   * The kind of message destination.\n   */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind';\n\n  /**\n   * A boolean that is true if the message destination is temporary.\n   */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination';\n\n  /**\n   * The name of the transport protocol.\n   */\n  MESSAGING_PROTOCOL: 'messaging.protocol';\n\n  /**\n   * The version of the transport protocol.\n   */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version';\n\n  /**\n   * Connection string.\n   */\n  MESSAGING_URL: 'messaging.url';\n\n  /**\n   * A value used by the messaging system as an identifier for the message, represented as a string.\n   */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id';\n\n  /**\n   * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n   */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id';\n\n  /**\n   * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes';\n\n  /**\n   * The compressed size of the message payload in bytes.\n   */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes';\n\n  /**\n   * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n   */\n  MESSAGING_OPERATION: 'messaging.operation';\n\n  /**\n   * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n   */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id';\n\n  /**\n   * RabbitMQ message routing key.\n   */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key';\n\n  /**\n   * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n   *\n   * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n   */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key';\n\n  /**\n   * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n   */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group';\n\n  /**\n   * Client Id for the Consumer or Producer that is handling the message.\n   */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id';\n\n  /**\n   * Partition the message is sent to.\n   */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition';\n\n  /**\n   * A boolean that is true if the message is a tombstone.\n   */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone';\n\n  /**\n   * A string identifying the remoting system.\n   */\n  RPC_SYSTEM: 'rpc.system';\n\n  /**\n   * The full (logical) name of the service being called, including its package name, if applicable.\n   *\n   * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n   */\n  RPC_SERVICE: 'rpc.service';\n\n  /**\n   * The name of the (logical) method being called, must be equal to the $method part in the span name.\n   *\n   * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n   */\n  RPC_METHOD: 'rpc.method';\n\n  /**\n   * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n   */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code';\n\n  /**\n   * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n   */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version';\n\n  /**\n   * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n   */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id';\n\n  /**\n   * `error.code` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code';\n\n  /**\n   * `error.message` property of response if it is an error response.\n   */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message';\n\n  /**\n   * Whether this is a received or sent message.\n   */\n  MESSAGE_TYPE: 'message.type';\n\n  /**\n   * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n   *\n   * Note: This way we guarantee that the values will be consistent between different implementations.\n   */\n  MESSAGE_ID: 'message.id';\n\n  /**\n   * Compressed size of the message in bytes.\n   */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size';\n\n  /**\n   * Uncompressed size of the message in bytes.\n   */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size';\n};\n\n/**\n * Create exported Value Map for SemanticAttributes values\n * @deprecated Use the SEMATTRS_XXXXX constants rather than the SemanticAttributes.XXXXX for bundle minification\n */\nexport const SemanticAttributes: SemanticAttributes =\n  /*#__PURE__*/ createConstMap<SemanticAttributes>([\n    TMP_AWS_LAMBDA_INVOKED_ARN,\n    TMP_DB_SYSTEM,\n    TMP_DB_CONNECTION_STRING,\n    TMP_DB_USER,\n    TMP_DB_JDBC_DRIVER_CLASSNAME,\n    TMP_DB_NAME,\n    TMP_DB_STATEMENT,\n    TMP_DB_OPERATION,\n    TMP_DB_MSSQL_INSTANCE_NAME,\n    TMP_DB_CASSANDRA_KEYSPACE,\n    TMP_DB_CASSANDRA_PAGE_SIZE,\n    TMP_DB_CASSANDRA_CONSISTENCY_LEVEL,\n    TMP_DB_CASSANDRA_TABLE,\n    TMP_DB_CASSANDRA_IDEMPOTENCE,\n    TMP_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT,\n    TMP_DB_CASSANDRA_COORDINATOR_ID,\n    TMP_DB_CASSANDRA_COORDINATOR_DC,\n    TMP_DB_HBASE_NAMESPACE,\n    TMP_DB_REDIS_DATABASE_INDEX,\n    TMP_DB_MONGODB_COLLECTION,\n    TMP_DB_SQL_TABLE,\n    TMP_EXCEPTION_TYPE,\n    TMP_EXCEPTION_MESSAGE,\n    TMP_EXCEPTION_STACKTRACE,\n    TMP_EXCEPTION_ESCAPED,\n    TMP_FAAS_TRIGGER,\n    TMP_FAAS_EXECUTION,\n    TMP_FAAS_DOCUMENT_COLLECTION,\n    TMP_FAAS_DOCUMENT_OPERATION,\n    TMP_FAAS_DOCUMENT_TIME,\n    TMP_FAAS_DOCUMENT_NAME,\n    TMP_FAAS_TIME,\n    TMP_FAAS_CRON,\n    TMP_FAAS_COLDSTART,\n    TMP_FAAS_INVOKED_NAME,\n    TMP_FAAS_INVOKED_PROVIDER,\n    TMP_FAAS_INVOKED_REGION,\n    TMP_NET_TRANSPORT,\n    TMP_NET_PEER_IP,\n    TMP_NET_PEER_PORT,\n    TMP_NET_PEER_NAME,\n    TMP_NET_HOST_IP,\n    TMP_NET_HOST_PORT,\n    TMP_NET_HOST_NAME,\n    TMP_NET_HOST_CONNECTION_TYPE,\n    TMP_NET_HOST_CONNECTION_SUBTYPE,\n    TMP_NET_HOST_CARRIER_NAME,\n    TMP_NET_HOST_CARRIER_MCC,\n    TMP_NET_HOST_CARRIER_MNC,\n    TMP_NET_HOST_CARRIER_ICC,\n    TMP_PEER_SERVICE,\n    TMP_ENDUSER_ID,\n    TMP_ENDUSER_ROLE,\n    TMP_ENDUSER_SCOPE,\n    TMP_THREAD_ID,\n    TMP_THREAD_NAME,\n    TMP_CODE_FUNCTION,\n    TMP_CODE_NAMESPACE,\n    TMP_CODE_FILEPATH,\n    TMP_CODE_LINENO,\n    TMP_HTTP_METHOD,\n    TMP_HTTP_URL,\n    TMP_HTTP_TARGET,\n    TMP_HTTP_HOST,\n    TMP_HTTP_SCHEME,\n    TMP_HTTP_STATUS_CODE,\n    TMP_HTTP_FLAVOR,\n    TMP_HTTP_USER_AGENT,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH,\n    TMP_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH,\n    TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n    TMP_HTTP_SERVER_NAME,\n    TMP_HTTP_ROUTE,\n    TMP_HTTP_CLIENT_IP,\n    TMP_AWS_DYNAMODB_TABLE_NAMES,\n    TMP_AWS_DYNAMODB_CONSUMED_CAPACITY,\n    TMP_AWS_DYNAMODB_ITEM_COLLECTION_METRICS,\n    TMP_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY,\n    TMP_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY,\n    TMP_AWS_DYNAMODB_CONSISTENT_READ,\n    TMP_AWS_DYNAMODB_PROJECTION,\n    TMP_AWS_DYNAMODB_LIMIT,\n    TMP_AWS_DYNAMODB_ATTRIBUTES_TO_GET,\n    TMP_AWS_DYNAMODB_INDEX_NAME,\n    TMP_AWS_DYNAMODB_SELECT,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES,\n    TMP_AWS_DYNAMODB_EXCLUSIVE_START_TABLE,\n    TMP_AWS_DYNAMODB_TABLE_COUNT,\n    TMP_AWS_DYNAMODB_SCAN_FORWARD,\n    TMP_AWS_DYNAMODB_SEGMENT,\n    TMP_AWS_DYNAMODB_TOTAL_SEGMENTS,\n    TMP_AWS_DYNAMODB_COUNT,\n    TMP_AWS_DYNAMODB_SCANNED_COUNT,\n    TMP_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS,\n    TMP_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES,\n    TMP_MESSAGING_SYSTEM,\n    TMP_MESSAGING_DESTINATION,\n    TMP_MESSAGING_DESTINATION_KIND,\n    TMP_MESSAGING_TEMP_DESTINATION,\n    TMP_MESSAGING_PROTOCOL,\n    TMP_MESSAGING_PROTOCOL_VERSION,\n    TMP_MESSAGING_URL,\n    TMP_MESSAGING_MESSAGE_ID,\n    TMP_MESSAGING_CONVERSATION_ID,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES,\n    TMP_MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES,\n    TMP_MESSAGING_OPERATION,\n    TMP_MESSAGING_CONSUMER_ID,\n    TMP_MESSAGING_RABBITMQ_ROUTING_KEY,\n    TMP_MESSAGING_KAFKA_MESSAGE_KEY,\n    TMP_MESSAGING_KAFKA_CONSUMER_GROUP,\n    TMP_MESSAGING_KAFKA_CLIENT_ID,\n    TMP_MESSAGING_KAFKA_PARTITION,\n    TMP_MESSAGING_KAFKA_TOMBSTONE,\n    TMP_RPC_SYSTEM,\n    TMP_RPC_SERVICE,\n    TMP_RPC_METHOD,\n    TMP_RPC_GRPC_STATUS_CODE,\n    TMP_RPC_JSONRPC_VERSION,\n    TMP_RPC_JSONRPC_REQUEST_ID,\n    TMP_RPC_JSONRPC_ERROR_CODE,\n    TMP_RPC_JSONRPC_ERROR_MESSAGE,\n    TMP_MESSAGE_TYPE,\n    TMP_MESSAGE_ID,\n    TMP_MESSAGE_COMPRESSED_SIZE,\n    TMP_MESSAGE_UNCOMPRESSED_SIZE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBSYSTEMVALUES_OTHER_SQL = 'other_sql';\nconst TMP_DBSYSTEMVALUES_MSSQL = 'mssql';\nconst TMP_DBSYSTEMVALUES_MYSQL = 'mysql';\nconst TMP_DBSYSTEMVALUES_ORACLE = 'oracle';\nconst TMP_DBSYSTEMVALUES_DB2 = 'db2';\nconst TMP_DBSYSTEMVALUES_POSTGRESQL = 'postgresql';\nconst TMP_DBSYSTEMVALUES_REDSHIFT = 'redshift';\nconst TMP_DBSYSTEMVALUES_HIVE = 'hive';\nconst TMP_DBSYSTEMVALUES_CLOUDSCAPE = 'cloudscape';\nconst TMP_DBSYSTEMVALUES_HSQLDB = 'hsqldb';\nconst TMP_DBSYSTEMVALUES_PROGRESS = 'progress';\nconst TMP_DBSYSTEMVALUES_MAXDB = 'maxdb';\nconst TMP_DBSYSTEMVALUES_HANADB = 'hanadb';\nconst TMP_DBSYSTEMVALUES_INGRES = 'ingres';\nconst TMP_DBSYSTEMVALUES_FIRSTSQL = 'firstsql';\nconst TMP_DBSYSTEMVALUES_EDB = 'edb';\nconst TMP_DBSYSTEMVALUES_CACHE = 'cache';\nconst TMP_DBSYSTEMVALUES_ADABAS = 'adabas';\nconst TMP_DBSYSTEMVALUES_FIREBIRD = 'firebird';\nconst TMP_DBSYSTEMVALUES_DERBY = 'derby';\nconst TMP_DBSYSTEMVALUES_FILEMAKER = 'filemaker';\nconst TMP_DBSYSTEMVALUES_INFORMIX = 'informix';\nconst TMP_DBSYSTEMVALUES_INSTANTDB = 'instantdb';\nconst TMP_DBSYSTEMVALUES_INTERBASE = 'interbase';\nconst TMP_DBSYSTEMVALUES_MARIADB = 'mariadb';\nconst TMP_DBSYSTEMVALUES_NETEZZA = 'netezza';\nconst TMP_DBSYSTEMVALUES_PERVASIVE = 'pervasive';\nconst TMP_DBSYSTEMVALUES_POINTBASE = 'pointbase';\nconst TMP_DBSYSTEMVALUES_SQLITE = 'sqlite';\nconst TMP_DBSYSTEMVALUES_SYBASE = 'sybase';\nconst TMP_DBSYSTEMVALUES_TERADATA = 'teradata';\nconst TMP_DBSYSTEMVALUES_VERTICA = 'vertica';\nconst TMP_DBSYSTEMVALUES_H2 = 'h2';\nconst TMP_DBSYSTEMVALUES_COLDFUSION = 'coldfusion';\nconst TMP_DBSYSTEMVALUES_CASSANDRA = 'cassandra';\nconst TMP_DBSYSTEMVALUES_HBASE = 'hbase';\nconst TMP_DBSYSTEMVALUES_MONGODB = 'mongodb';\nconst TMP_DBSYSTEMVALUES_REDIS = 'redis';\nconst TMP_DBSYSTEMVALUES_COUCHBASE = 'couchbase';\nconst TMP_DBSYSTEMVALUES_COUCHDB = 'couchdb';\nconst TMP_DBSYSTEMVALUES_COSMOSDB = 'cosmosdb';\nconst TMP_DBSYSTEMVALUES_DYNAMODB = 'dynamodb';\nconst TMP_DBSYSTEMVALUES_NEO4J = 'neo4j';\nconst TMP_DBSYSTEMVALUES_GEODE = 'geode';\nconst TMP_DBSYSTEMVALUES_ELASTICSEARCH = 'elasticsearch';\nconst TMP_DBSYSTEMVALUES_MEMCACHED = 'memcached';\nconst TMP_DBSYSTEMVALUES_COCKROACHDB = 'cockroachdb';\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_OTHER_SQL.\n */\nexport const DBSYSTEMVALUES_OTHER_SQL = TMP_DBSYSTEMVALUES_OTHER_SQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MSSQL.\n */\nexport const DBSYSTEMVALUES_MSSQL = TMP_DBSYSTEMVALUES_MSSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MYSQL.\n */\nexport const DBSYSTEMVALUES_MYSQL = TMP_DBSYSTEMVALUES_MYSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ORACLE.\n */\nexport const DBSYSTEMVALUES_ORACLE = TMP_DBSYSTEMVALUES_ORACLE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DB2.\n */\nexport const DBSYSTEMVALUES_DB2 = TMP_DBSYSTEMVALUES_DB2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POSTGRESQL.\n */\nexport const DBSYSTEMVALUES_POSTGRESQL = TMP_DBSYSTEMVALUES_POSTGRESQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDSHIFT.\n */\nexport const DBSYSTEMVALUES_REDSHIFT = TMP_DBSYSTEMVALUES_REDSHIFT;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HIVE.\n */\nexport const DBSYSTEMVALUES_HIVE = TMP_DBSYSTEMVALUES_HIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CLOUDSCAPE.\n */\nexport const DBSYSTEMVALUES_CLOUDSCAPE = TMP_DBSYSTEMVALUES_CLOUDSCAPE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HSQLDB.\n */\nexport const DBSYSTEMVALUES_HSQLDB = TMP_DBSYSTEMVALUES_HSQLDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PROGRESS.\n */\nexport const DBSYSTEMVALUES_PROGRESS = TMP_DBSYSTEMVALUES_PROGRESS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MAXDB.\n */\nexport const DBSYSTEMVALUES_MAXDB = TMP_DBSYSTEMVALUES_MAXDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HANADB.\n */\nexport const DBSYSTEMVALUES_HANADB = TMP_DBSYSTEMVALUES_HANADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INGRES.\n */\nexport const DBSYSTEMVALUES_INGRES = TMP_DBSYSTEMVALUES_INGRES;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIRSTSQL.\n */\nexport const DBSYSTEMVALUES_FIRSTSQL = TMP_DBSYSTEMVALUES_FIRSTSQL;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_EDB.\n */\nexport const DBSYSTEMVALUES_EDB = TMP_DBSYSTEMVALUES_EDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CACHE.\n */\nexport const DBSYSTEMVALUES_CACHE = TMP_DBSYSTEMVALUES_CACHE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ADABAS.\n */\nexport const DBSYSTEMVALUES_ADABAS = TMP_DBSYSTEMVALUES_ADABAS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FIREBIRD.\n */\nexport const DBSYSTEMVALUES_FIREBIRD = TMP_DBSYSTEMVALUES_FIREBIRD;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DERBY.\n */\nexport const DBSYSTEMVALUES_DERBY = TMP_DBSYSTEMVALUES_DERBY;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_FILEMAKER.\n */\nexport const DBSYSTEMVALUES_FILEMAKER = TMP_DBSYSTEMVALUES_FILEMAKER;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INFORMIX.\n */\nexport const DBSYSTEMVALUES_INFORMIX = TMP_DBSYSTEMVALUES_INFORMIX;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INSTANTDB.\n */\nexport const DBSYSTEMVALUES_INSTANTDB = TMP_DBSYSTEMVALUES_INSTANTDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_INTERBASE.\n */\nexport const DBSYSTEMVALUES_INTERBASE = TMP_DBSYSTEMVALUES_INTERBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MARIADB.\n */\nexport const DBSYSTEMVALUES_MARIADB = TMP_DBSYSTEMVALUES_MARIADB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NETEZZA.\n */\nexport const DBSYSTEMVALUES_NETEZZA = TMP_DBSYSTEMVALUES_NETEZZA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_PERVASIVE.\n */\nexport const DBSYSTEMVALUES_PERVASIVE = TMP_DBSYSTEMVALUES_PERVASIVE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_POINTBASE.\n */\nexport const DBSYSTEMVALUES_POINTBASE = TMP_DBSYSTEMVALUES_POINTBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SQLITE.\n */\nexport const DBSYSTEMVALUES_SQLITE = TMP_DBSYSTEMVALUES_SQLITE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_SYBASE.\n */\nexport const DBSYSTEMVALUES_SYBASE = TMP_DBSYSTEMVALUES_SYBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_TERADATA.\n */\nexport const DBSYSTEMVALUES_TERADATA = TMP_DBSYSTEMVALUES_TERADATA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_VERTICA.\n */\nexport const DBSYSTEMVALUES_VERTICA = TMP_DBSYSTEMVALUES_VERTICA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_H2.\n */\nexport const DBSYSTEMVALUES_H2 = TMP_DBSYSTEMVALUES_H2;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COLDFUSION.\n */\nexport const DBSYSTEMVALUES_COLDFUSION = TMP_DBSYSTEMVALUES_COLDFUSION;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_CASSANDRA.\n */\nexport const DBSYSTEMVALUES_CASSANDRA = TMP_DBSYSTEMVALUES_CASSANDRA;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_HBASE.\n */\nexport const DBSYSTEMVALUES_HBASE = TMP_DBSYSTEMVALUES_HBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MONGODB.\n */\nexport const DBSYSTEMVALUES_MONGODB = TMP_DBSYSTEMVALUES_MONGODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_REDIS.\n */\nexport const DBSYSTEMVALUES_REDIS = TMP_DBSYSTEMVALUES_REDIS;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHBASE.\n */\nexport const DBSYSTEMVALUES_COUCHBASE = TMP_DBSYSTEMVALUES_COUCHBASE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COUCHDB.\n */\nexport const DBSYSTEMVALUES_COUCHDB = TMP_DBSYSTEMVALUES_COUCHDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COSMOSDB.\n */\nexport const DBSYSTEMVALUES_COSMOSDB = TMP_DBSYSTEMVALUES_COSMOSDB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_DYNAMODB.\n */\nexport const DBSYSTEMVALUES_DYNAMODB = TMP_DBSYSTEMVALUES_DYNAMODB;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_NEO4J.\n */\nexport const DBSYSTEMVALUES_NEO4J = TMP_DBSYSTEMVALUES_NEO4J;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_GEODE.\n */\nexport const DBSYSTEMVALUES_GEODE = TMP_DBSYSTEMVALUES_GEODE;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_ELASTICSEARCH.\n */\nexport const DBSYSTEMVALUES_ELASTICSEARCH = TMP_DBSYSTEMVALUES_ELASTICSEARCH;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_MEMCACHED.\n */\nexport const DBSYSTEMVALUES_MEMCACHED = TMP_DBSYSTEMVALUES_MEMCACHED;\n\n/**\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n *\n * @deprecated Use DB_SYSTEM_VALUE_COCKROACHDB.\n */\nexport const DBSYSTEMVALUES_COCKROACHDB = TMP_DBSYSTEMVALUES_COCKROACHDB;\n\n/**\n * Identifies the Values for DbSystemValues enum definition\n *\n * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport type DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql';\n\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql';\n\n  /** MySQL. */\n  MYSQL: 'mysql';\n\n  /** Oracle Database. */\n  ORACLE: 'oracle';\n\n  /** IBM Db2. */\n  DB2: 'db2';\n\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql';\n\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift';\n\n  /** Apache Hive. */\n  HIVE: 'hive';\n\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape';\n\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb';\n\n  /** Progress Database. */\n  PROGRESS: 'progress';\n\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb';\n\n  /** SAP HANA. */\n  HANADB: 'hanadb';\n\n  /** Ingres. */\n  INGRES: 'ingres';\n\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql';\n\n  /** EnterpriseDB. */\n  EDB: 'edb';\n\n  /** InterSystems Caché. */\n  CACHE: 'cache';\n\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas';\n\n  /** Firebird. */\n  FIREBIRD: 'firebird';\n\n  /** Apache Derby. */\n  DERBY: 'derby';\n\n  /** FileMaker. */\n  FILEMAKER: 'filemaker';\n\n  /** Informix. */\n  INFORMIX: 'informix';\n\n  /** InstantDB. */\n  INSTANTDB: 'instantdb';\n\n  /** InterBase. */\n  INTERBASE: 'interbase';\n\n  /** MariaDB. */\n  MARIADB: 'mariadb';\n\n  /** Netezza. */\n  NETEZZA: 'netezza';\n\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive';\n\n  /** PointBase. */\n  POINTBASE: 'pointbase';\n\n  /** SQLite. */\n  SQLITE: 'sqlite';\n\n  /** Sybase. */\n  SYBASE: 'sybase';\n\n  /** Teradata. */\n  TERADATA: 'teradata';\n\n  /** Vertica. */\n  VERTICA: 'vertica';\n\n  /** H2. */\n  H2: 'h2';\n\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion';\n\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra';\n\n  /** Apache HBase. */\n  HBASE: 'hbase';\n\n  /** MongoDB. */\n  MONGODB: 'mongodb';\n\n  /** Redis. */\n  REDIS: 'redis';\n\n  /** Couchbase. */\n  COUCHBASE: 'couchbase';\n\n  /** CouchDB. */\n  COUCHDB: 'couchdb';\n\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb';\n\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb';\n\n  /** Neo4j. */\n  NEO4J: 'neo4j';\n\n  /** Apache Geode. */\n  GEODE: 'geode';\n\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch';\n\n  /** Memcached. */\n  MEMCACHED: 'memcached';\n\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb';\n};\n\n/**\n * The constant map of values for DbSystemValues.\n * @deprecated Use the DBSYSTEMVALUES_XXXXX constants rather than the DbSystemValues.XXXXX for bundle minification.\n */\nexport const DbSystemValues: DbSystemValues =\n  /*#__PURE__*/ createConstMap<DbSystemValues>([\n    TMP_DBSYSTEMVALUES_OTHER_SQL,\n    TMP_DBSYSTEMVALUES_MSSQL,\n    TMP_DBSYSTEMVALUES_MYSQL,\n    TMP_DBSYSTEMVALUES_ORACLE,\n    TMP_DBSYSTEMVALUES_DB2,\n    TMP_DBSYSTEMVALUES_POSTGRESQL,\n    TMP_DBSYSTEMVALUES_REDSHIFT,\n    TMP_DBSYSTEMVALUES_HIVE,\n    TMP_DBSYSTEMVALUES_CLOUDSCAPE,\n    TMP_DBSYSTEMVALUES_HSQLDB,\n    TMP_DBSYSTEMVALUES_PROGRESS,\n    TMP_DBSYSTEMVALUES_MAXDB,\n    TMP_DBSYSTEMVALUES_HANADB,\n    TMP_DBSYSTEMVALUES_INGRES,\n    TMP_DBSYSTEMVALUES_FIRSTSQL,\n    TMP_DBSYSTEMVALUES_EDB,\n    TMP_DBSYSTEMVALUES_CACHE,\n    TMP_DBSYSTEMVALUES_ADABAS,\n    TMP_DBSYSTEMVALUES_FIREBIRD,\n    TMP_DBSYSTEMVALUES_DERBY,\n    TMP_DBSYSTEMVALUES_FILEMAKER,\n    TMP_DBSYSTEMVALUES_INFORMIX,\n    TMP_DBSYSTEMVALUES_INSTANTDB,\n    TMP_DBSYSTEMVALUES_INTERBASE,\n    TMP_DBSYSTEMVALUES_MARIADB,\n    TMP_DBSYSTEMVALUES_NETEZZA,\n    TMP_DBSYSTEMVALUES_PERVASIVE,\n    TMP_DBSYSTEMVALUES_POINTBASE,\n    TMP_DBSYSTEMVALUES_SQLITE,\n    TMP_DBSYSTEMVALUES_SYBASE,\n    TMP_DBSYSTEMVALUES_TERADATA,\n    TMP_DBSYSTEMVALUES_VERTICA,\n    TMP_DBSYSTEMVALUES_H2,\n    TMP_DBSYSTEMVALUES_COLDFUSION,\n    TMP_DBSYSTEMVALUES_CASSANDRA,\n    TMP_DBSYSTEMVALUES_HBASE,\n    TMP_DBSYSTEMVALUES_MONGODB,\n    TMP_DBSYSTEMVALUES_REDIS,\n    TMP_DBSYSTEMVALUES_COUCHBASE,\n    TMP_DBSYSTEMVALUES_COUCHDB,\n    TMP_DBSYSTEMVALUES_COSMOSDB,\n    TMP_DBSYSTEMVALUES_DYNAMODB,\n    TMP_DBSYSTEMVALUES_NEO4J,\n    TMP_DBSYSTEMVALUES_GEODE,\n    TMP_DBSYSTEMVALUES_ELASTICSEARCH,\n    TMP_DBSYSTEMVALUES_MEMCACHED,\n    TMP_DBSYSTEMVALUES_COCKROACHDB,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL = 'all';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM = 'each_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM = 'quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM = 'local_quorum';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE = 'one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO = 'two';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE = 'three';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE = 'local_one';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY = 'any';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL = 'serial';\nconst TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL = 'local_serial';\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ALL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_TWO =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_THREE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_ANY =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n *\n * @deprecated Use DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL.\n */\nexport const DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL =\n  TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL;\n\n/**\n * Identifies the Values for DbCassandraConsistencyLevelValues enum definition\n *\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport type DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all';\n\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum';\n\n  /** quorum. */\n  QUORUM: 'quorum';\n\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum';\n\n  /** one. */\n  ONE: 'one';\n\n  /** two. */\n  TWO: 'two';\n\n  /** three. */\n  THREE: 'three';\n\n  /** local_one. */\n  LOCAL_ONE: 'local_one';\n\n  /** any. */\n  ANY: 'any';\n\n  /** serial. */\n  SERIAL: 'serial';\n\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial';\n};\n\n/**\n * The constant map of values for DbCassandraConsistencyLevelValues.\n * @deprecated Use the DBCASSANDRACONSISTENCYLEVELVALUES_XXXXX constants rather than the DbCassandraConsistencyLevelValues.XXXXX for bundle minification.\n */\nexport const DbCassandraConsistencyLevelValues: DbCassandraConsistencyLevelValues =\n  /*#__PURE__*/ createConstMap<DbCassandraConsistencyLevelValues>([\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ALL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_EACH_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_QUORUM,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_TWO,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_THREE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_ONE,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_ANY,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_SERIAL,\n    TMP_DBCASSANDRACONSISTENCYLEVELVALUES_LOCAL_SERIAL,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASTRIGGERVALUES_DATASOURCE = 'datasource';\nconst TMP_FAASTRIGGERVALUES_HTTP = 'http';\nconst TMP_FAASTRIGGERVALUES_PUBSUB = 'pubsub';\nconst TMP_FAASTRIGGERVALUES_TIMER = 'timer';\nconst TMP_FAASTRIGGERVALUES_OTHER = 'other';\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_DATASOURCE.\n */\nexport const FAASTRIGGERVALUES_DATASOURCE = TMP_FAASTRIGGERVALUES_DATASOURCE;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_HTTP.\n */\nexport const FAASTRIGGERVALUES_HTTP = TMP_FAASTRIGGERVALUES_HTTP;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_PUBSUB.\n */\nexport const FAASTRIGGERVALUES_PUBSUB = TMP_FAASTRIGGERVALUES_PUBSUB;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_TIMER.\n */\nexport const FAASTRIGGERVALUES_TIMER = TMP_FAASTRIGGERVALUES_TIMER;\n\n/**\n * Type of the trigger on which the function is executed.\n *\n * @deprecated Use FAAS_TRIGGER_VALUE_OTHER.\n */\nexport const FAASTRIGGERVALUES_OTHER = TMP_FAASTRIGGERVALUES_OTHER;\n\n/**\n * Identifies the Values for FaasTriggerValues enum definition\n *\n * Type of the trigger on which the function is executed.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport type FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource';\n\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http';\n\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub';\n\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer';\n\n  /** If none of the others apply. */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for FaasTriggerValues.\n * @deprecated Use the FAASTRIGGERVALUES_XXXXX constants rather than the FaasTriggerValues.XXXXX for bundle minification.\n */\nexport const FaasTriggerValues: FaasTriggerValues =\n  /*#__PURE__*/ createConstMap<FaasTriggerValues>([\n    TMP_FAASTRIGGERVALUES_DATASOURCE,\n    TMP_FAASTRIGGERVALUES_HTTP,\n    TMP_FAASTRIGGERVALUES_PUBSUB,\n    TMP_FAASTRIGGERVALUES_TIMER,\n    TMP_FAASTRIGGERVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASDOCUMENTOPERATIONVALUES_INSERT = 'insert';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_EDIT = 'edit';\nconst TMP_FAASDOCUMENTOPERATIONVALUES_DELETE = 'delete';\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_INSERT.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_INSERT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_INSERT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_EDIT.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_EDIT =\n  TMP_FAASDOCUMENTOPERATIONVALUES_EDIT;\n\n/**\n * Describes the type of the operation that was performed on the data.\n *\n * @deprecated Use FAAS_DOCUMENT_OPERATION_VALUE_DELETE.\n */\nexport const FAASDOCUMENTOPERATIONVALUES_DELETE =\n  TMP_FAASDOCUMENTOPERATIONVALUES_DELETE;\n\n/**\n * Identifies the Values for FaasDocumentOperationValues enum definition\n *\n * Describes the type of the operation that was performed on the data.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport type FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert';\n\n  /** When an object is modified. */\n  EDIT: 'edit';\n\n  /** When an object is deleted. */\n  DELETE: 'delete';\n};\n\n/**\n * The constant map of values for FaasDocumentOperationValues.\n * @deprecated Use the FAASDOCUMENTOPERATIONVALUES_XXXXX constants rather than the FaasDocumentOperationValues.XXXXX for bundle minification.\n */\nexport const FaasDocumentOperationValues: FaasDocumentOperationValues =\n  /*#__PURE__*/ createConstMap<FaasDocumentOperationValues>([\n    TMP_FAASDOCUMENTOPERATIONVALUES_INSERT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_EDIT,\n    TMP_FAASDOCUMENTOPERATIONVALUES_DELETE,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD = 'alibaba_cloud';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AWS = 'aws';\nconst TMP_FAASINVOKEDPROVIDERVALUES_AZURE = 'azure';\nconst TMP_FAASINVOKEDPROVIDERVALUES_GCP = 'gcp';\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD.\n */\nexport const FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD =\n  TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AWS.\n */\nexport const FAASINVOKEDPROVIDERVALUES_AWS = TMP_FAASINVOKEDPROVIDERVALUES_AWS;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_AZURE.\n */\nexport const FAASINVOKEDPROVIDERVALUES_AZURE =\n  TMP_FAASINVOKEDPROVIDERVALUES_AZURE;\n\n/**\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n *\n * @deprecated Use FAAS_INVOKED_PROVIDER_VALUE_GCP.\n */\nexport const FAASINVOKEDPROVIDERVALUES_GCP = TMP_FAASINVOKEDPROVIDERVALUES_GCP;\n\n/**\n * Identifies the Values for FaasInvokedProviderValues enum definition\n *\n * The cloud provider of the invoked function.\n *\n * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport type FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud';\n\n  /** Amazon Web Services. */\n  AWS: 'aws';\n\n  /** Microsoft Azure. */\n  AZURE: 'azure';\n\n  /** Google Cloud Platform. */\n  GCP: 'gcp';\n};\n\n/**\n * The constant map of values for FaasInvokedProviderValues.\n * @deprecated Use the FAASINVOKEDPROVIDERVALUES_XXXXX constants rather than the FaasInvokedProviderValues.XXXXX for bundle minification.\n */\nexport const FaasInvokedProviderValues: FaasInvokedProviderValues =\n  /*#__PURE__*/ createConstMap<FaasInvokedProviderValues>([\n    TMP_FAASINVOKEDPROVIDERVALUES_ALIBABA_CLOUD,\n    TMP_FAASINVOKEDPROVIDERVALUES_AWS,\n    TMP_FAASINVOKEDPROVIDERVALUES_AZURE,\n    TMP_FAASINVOKEDPROVIDERVALUES_GCP,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETTRANSPORTVALUES_IP_TCP = 'ip_tcp';\nconst TMP_NETTRANSPORTVALUES_IP_UDP = 'ip_udp';\nconst TMP_NETTRANSPORTVALUES_IP = 'ip';\nconst TMP_NETTRANSPORTVALUES_UNIX = 'unix';\nconst TMP_NETTRANSPORTVALUES_PIPE = 'pipe';\nconst TMP_NETTRANSPORTVALUES_INPROC = 'inproc';\nconst TMP_NETTRANSPORTVALUES_OTHER = 'other';\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_TCP.\n */\nexport const NETTRANSPORTVALUES_IP_TCP = TMP_NETTRANSPORTVALUES_IP_TCP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP_UDP.\n */\nexport const NETTRANSPORTVALUES_IP_UDP = TMP_NETTRANSPORTVALUES_IP_UDP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_IP.\n */\nexport const NETTRANSPORTVALUES_IP = TMP_NETTRANSPORTVALUES_IP;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_UNIX.\n */\nexport const NETTRANSPORTVALUES_UNIX = TMP_NETTRANSPORTVALUES_UNIX;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_PIPE.\n */\nexport const NETTRANSPORTVALUES_PIPE = TMP_NETTRANSPORTVALUES_PIPE;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_INPROC.\n */\nexport const NETTRANSPORTVALUES_INPROC = TMP_NETTRANSPORTVALUES_INPROC;\n\n/**\n * Transport protocol used. See note below.\n *\n * @deprecated Use NET_TRANSPORT_VALUE_OTHER.\n */\nexport const NETTRANSPORTVALUES_OTHER = TMP_NETTRANSPORTVALUES_OTHER;\n\n/**\n * Identifies the Values for NetTransportValues enum definition\n *\n * Transport protocol used. See note below.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport type NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp';\n\n  /** ip_udp. */\n  IP_UDP: 'ip_udp';\n\n  /** Another IP-based protocol. */\n  IP: 'ip';\n\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix';\n\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe';\n\n  /** In-process communication. */\n  INPROC: 'inproc';\n\n  /** Something else (non IP-based). */\n  OTHER: 'other';\n};\n\n/**\n * The constant map of values for NetTransportValues.\n * @deprecated Use the NETTRANSPORTVALUES_XXXXX constants rather than the NetTransportValues.XXXXX for bundle minification.\n */\nexport const NetTransportValues: NetTransportValues =\n  /*#__PURE__*/ createConstMap<NetTransportValues>([\n    TMP_NETTRANSPORTVALUES_IP_TCP,\n    TMP_NETTRANSPORTVALUES_IP_UDP,\n    TMP_NETTRANSPORTVALUES_IP,\n    TMP_NETTRANSPORTVALUES_UNIX,\n    TMP_NETTRANSPORTVALUES_PIPE,\n    TMP_NETTRANSPORTVALUES_INPROC,\n    TMP_NETTRANSPORTVALUES_OTHER,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI = 'wifi';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED = 'wired';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_CELL = 'cell';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE = 'unavailable';\nconst TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN = 'unknown';\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_WIFI.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIFI =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_WIRED.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_WIRED =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_CELL.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_CELL =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_CELL;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_UNAVAILABLE.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE;\n\n/**\n * The internet connection type currently being used by the host.\n *\n * @deprecated Use NET_HOST_CONNECTION_TYPE_VALUE_UNKNOWN.\n */\nexport const NETHOSTCONNECTIONTYPEVALUES_UNKNOWN =\n  TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN;\n\n/**\n * Identifies the Values for NetHostConnectionTypeValues enum definition\n *\n * The internet connection type currently being used by the host.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi';\n\n  /** wired. */\n  WIRED: 'wired';\n\n  /** cell. */\n  CELL: 'cell';\n\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable';\n\n  /** unknown. */\n  UNKNOWN: 'unknown';\n};\n\n/**\n * The constant map of values for NetHostConnectionTypeValues.\n * @deprecated Use the NETHOSTCONNECTIONTYPEVALUES_XXXXX constants rather than the NetHostConnectionTypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionTypeValues: NetHostConnectionTypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionTypeValues>([\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIFI,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_WIRED,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_CELL,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNAVAILABLE,\n    TMP_NETHOSTCONNECTIONTYPEVALUES_UNKNOWN,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS = 'gprs';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE = 'edge';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS = 'umts';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA = 'cdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 = 'evdo_0';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A = 'evdo_a';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT = 'cdma2000_1xrtt';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA = 'hsdpa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA = 'hsupa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA = 'hspa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN = 'iden';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B = 'evdo_b';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE = 'lte';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD = 'ehrpd';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP = 'hspap';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM = 'gsm';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA = 'td_scdma';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN = 'iwlan';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR = 'nr';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA = 'nrnsa';\nconst TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA = 'lte_ca';\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_GPRS.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GPRS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EDGE.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EDGE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_UMTS.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_UMTS =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_CDMA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_0.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0 =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_A.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSDPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSUPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSPA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_IDEN.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IDEN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EVDO_B.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_LTE.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_EHRPD.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_HSPAP.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_GSM.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_GSM =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_TD_SCDMA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_IWLAN.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_NR.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NR =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_NRNSA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n *\n * @deprecated Use NET_HOST_CONNECTION_SUBTYPE_VALUE_LTE_CA.\n */\nexport const NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA =\n  TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA;\n\n/**\n * Identifies the Values for NetHostConnectionSubtypeValues enum definition\n *\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport type NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs';\n\n  /** EDGE. */\n  EDGE: 'edge';\n\n  /** UMTS. */\n  UMTS: 'umts';\n\n  /** CDMA. */\n  CDMA: 'cdma';\n\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0';\n\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a';\n\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt';\n\n  /** HSDPA. */\n  HSDPA: 'hsdpa';\n\n  /** HSUPA. */\n  HSUPA: 'hsupa';\n\n  /** HSPA. */\n  HSPA: 'hspa';\n\n  /** IDEN. */\n  IDEN: 'iden';\n\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b';\n\n  /** LTE. */\n  LTE: 'lte';\n\n  /** EHRPD. */\n  EHRPD: 'ehrpd';\n\n  /** HSPAP. */\n  HSPAP: 'hspap';\n\n  /** GSM. */\n  GSM: 'gsm';\n\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma';\n\n  /** IWLAN. */\n  IWLAN: 'iwlan';\n\n  /** 5G NR (New Radio). */\n  NR: 'nr';\n\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa';\n\n  /** LTE CA. */\n  LTE_CA: 'lte_ca';\n};\n\n/**\n * The constant map of values for NetHostConnectionSubtypeValues.\n * @deprecated Use the NETHOSTCONNECTIONSUBTYPEVALUES_XXXXX constants rather than the NetHostConnectionSubtypeValues.XXXXX for bundle minification.\n */\nexport const NetHostConnectionSubtypeValues: NetHostConnectionSubtypeValues =\n  /*#__PURE__*/ createConstMap<NetHostConnectionSubtypeValues>([\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GPRS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EDGE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_UMTS,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_0,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_A,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_CDMA2000_1XRTT,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSDPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSUPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IDEN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EVDO_B,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_EHRPD,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_HSPAP,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_GSM,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_TD_SCDMA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_IWLAN,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NR,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_NRNSA,\n    TMP_NETHOSTCONNECTIONSUBTYPEVALUES_LTE_CA,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_HTTPFLAVORVALUES_HTTP_1_0 = '1.0';\nconst TMP_HTTPFLAVORVALUES_HTTP_1_1 = '1.1';\nconst TMP_HTTPFLAVORVALUES_HTTP_2_0 = '2.0';\nconst TMP_HTTPFLAVORVALUES_SPDY = 'SPDY';\nconst TMP_HTTPFLAVORVALUES_QUIC = 'QUIC';\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_0.\n */\nexport const HTTPFLAVORVALUES_HTTP_1_0 = TMP_HTTPFLAVORVALUES_HTTP_1_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_1_1.\n */\nexport const HTTPFLAVORVALUES_HTTP_1_1 = TMP_HTTPFLAVORVALUES_HTTP_1_1;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_HTTP_2_0.\n */\nexport const HTTPFLAVORVALUES_HTTP_2_0 = TMP_HTTPFLAVORVALUES_HTTP_2_0;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_SPDY.\n */\nexport const HTTPFLAVORVALUES_SPDY = TMP_HTTPFLAVORVALUES_SPDY;\n\n/**\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n *\n * @deprecated Use HTTP_FLAVOR_VALUE_QUIC.\n */\nexport const HTTPFLAVORVALUES_QUIC = TMP_HTTPFLAVORVALUES_QUIC;\n\n/**\n * Identifies the Values for HttpFlavorValues enum definition\n *\n * Kind of HTTP protocol used.\n *\n * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport type HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0';\n\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1';\n\n  /** HTTP 2. */\n  HTTP_2_0: '2.0';\n\n  /** SPDY protocol. */\n  SPDY: 'SPDY';\n\n  /** QUIC protocol. */\n  QUIC: 'QUIC';\n};\n\n/**\n * The constant map of values for HttpFlavorValues.\n * @deprecated Use the HTTPFLAVORVALUES_XXXXX constants rather than the HttpFlavorValues.XXXXX for bundle minification.\n */\nexport const HttpFlavorValues: HttpFlavorValues = {\n  HTTP_1_0: TMP_HTTPFLAVORVALUES_HTTP_1_0,\n  HTTP_1_1: TMP_HTTPFLAVORVALUES_HTTP_1_1,\n  HTTP_2_0: TMP_HTTPFLAVORVALUES_HTTP_2_0,\n  SPDY: TMP_HTTPFLAVORVALUES_SPDY,\n  QUIC: TMP_HTTPFLAVORVALUES_QUIC,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE = 'queue';\nconst TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC = 'topic';\n\n/**\n * The kind of message destination.\n *\n * @deprecated Use MESSAGING_DESTINATION_KIND_VALUE_QUEUE.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_QUEUE =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE;\n\n/**\n * The kind of message destination.\n *\n * @deprecated Use MESSAGING_DESTINATION_KIND_VALUE_TOPIC.\n */\nexport const MESSAGINGDESTINATIONKINDVALUES_TOPIC =\n  TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC;\n\n/**\n * Identifies the Values for MessagingDestinationKindValues enum definition\n *\n * The kind of message destination.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport type MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue';\n\n  /** A message sent to a topic. */\n  TOPIC: 'topic';\n};\n\n/**\n * The constant map of values for MessagingDestinationKindValues.\n * @deprecated Use the MESSAGINGDESTINATIONKINDVALUES_XXXXX constants rather than the MessagingDestinationKindValues.XXXXX for bundle minification.\n */\nexport const MessagingDestinationKindValues: MessagingDestinationKindValues =\n  /*#__PURE__*/ createConstMap<MessagingDestinationKindValues>([\n    TMP_MESSAGINGDESTINATIONKINDVALUES_QUEUE,\n    TMP_MESSAGINGDESTINATIONKINDVALUES_TOPIC,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGINGOPERATIONVALUES_RECEIVE = 'receive';\nconst TMP_MESSAGINGOPERATIONVALUES_PROCESS = 'process';\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_VALUE_RECEIVE.\n */\nexport const MESSAGINGOPERATIONVALUES_RECEIVE =\n  TMP_MESSAGINGOPERATIONVALUES_RECEIVE;\n\n/**\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n *\n * @deprecated Use MESSAGING_OPERATION_VALUE_PROCESS.\n */\nexport const MESSAGINGOPERATIONVALUES_PROCESS =\n  TMP_MESSAGINGOPERATIONVALUES_PROCESS;\n\n/**\n * Identifies the Values for MessagingOperationValues enum definition\n *\n * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport type MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive';\n\n  /** process. */\n  PROCESS: 'process';\n};\n\n/**\n * The constant map of values for MessagingOperationValues.\n * @deprecated Use the MESSAGINGOPERATIONVALUES_XXXXX constants rather than the MessagingOperationValues.XXXXX for bundle minification.\n */\nexport const MessagingOperationValues: MessagingOperationValues =\n  /*#__PURE__*/ createConstMap<MessagingOperationValues>([\n    TMP_MESSAGINGOPERATIONVALUES_RECEIVE,\n    TMP_MESSAGINGOPERATIONVALUES_PROCESS,\n  ]);\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_RPCGRPCSTATUSCODEVALUES_OK = 0;\nconst TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED = 1;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN = 2;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT = 3;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED = 4;\nconst TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND = 5;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS = 6;\nconst TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED = 7;\nconst TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED = 8;\nconst TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION = 9;\nconst TMP_RPCGRPCSTATUSCODEVALUES_ABORTED = 10;\nconst TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE = 11;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED = 12;\nconst TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL = 13;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE = 14;\nconst TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS = 15;\nconst TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED = 16;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OK.\n */\nexport const RPCGRPCSTATUSCODEVALUES_OK = TMP_RPCGRPCSTATUSCODEVALUES_OK;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_CANCELLED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_CANCELLED =\n  TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNKNOWN =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT.\n */\nexport const RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT =\n  TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED =\n  TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND.\n */\nexport const RPCGRPCSTATUSCODEVALUES_NOT_FOUND =\n  TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS.\n */\nexport const RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS =\n  TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED =\n  TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION.\n */\nexport const RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION =\n  TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_ABORTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_ABORTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_ABORTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE.\n */\nexport const RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE =\n  TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_INTERNAL.\n */\nexport const RPCGRPCSTATUSCODEVALUES_INTERNAL =\n  TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAVAILABLE =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS.\n */\nexport const RPCGRPCSTATUSCODEVALUES_DATA_LOSS =\n  TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n *\n * @deprecated Use RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED.\n */\nexport const RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED =\n  TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED;\n\n/**\n * Identifies the Values for RpcGrpcStatusCodeValues enum definition\n *\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport type RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0;\n\n  /** CANCELLED. */\n  CANCELLED: 1;\n\n  /** UNKNOWN. */\n  UNKNOWN: 2;\n\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3;\n\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4;\n\n  /** NOT_FOUND. */\n  NOT_FOUND: 5;\n\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6;\n\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7;\n\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8;\n\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9;\n\n  /** ABORTED. */\n  ABORTED: 10;\n\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11;\n\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12;\n\n  /** INTERNAL. */\n  INTERNAL: 13;\n\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14;\n\n  /** DATA_LOSS. */\n  DATA_LOSS: 15;\n\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16;\n};\n\n/**\n * The constant map of values for RpcGrpcStatusCodeValues.\n * @deprecated Use the RPCGRPCSTATUSCODEVALUES_XXXXX constants rather than the RpcGrpcStatusCodeValues.XXXXX for bundle minification.\n */\nexport const RpcGrpcStatusCodeValues: RpcGrpcStatusCodeValues = {\n  OK: TMP_RPCGRPCSTATUSCODEVALUES_OK,\n  CANCELLED: TMP_RPCGRPCSTATUSCODEVALUES_CANCELLED,\n  UNKNOWN: TMP_RPCGRPCSTATUSCODEVALUES_UNKNOWN,\n  INVALID_ARGUMENT: TMP_RPCGRPCSTATUSCODEVALUES_INVALID_ARGUMENT,\n  DEADLINE_EXCEEDED: TMP_RPCGRPCSTATUSCODEVALUES_DEADLINE_EXCEEDED,\n  NOT_FOUND: TMP_RPCGRPCSTATUSCODEVALUES_NOT_FOUND,\n  ALREADY_EXISTS: TMP_RPCGRPCSTATUSCODEVALUES_ALREADY_EXISTS,\n  PERMISSION_DENIED: TMP_RPCGRPCSTATUSCODEVALUES_PERMISSION_DENIED,\n  RESOURCE_EXHAUSTED: TMP_RPCGRPCSTATUSCODEVALUES_RESOURCE_EXHAUSTED,\n  FAILED_PRECONDITION: TMP_RPCGRPCSTATUSCODEVALUES_FAILED_PRECONDITION,\n  ABORTED: TMP_RPCGRPCSTATUSCODEVALUES_ABORTED,\n  OUT_OF_RANGE: TMP_RPCGRPCSTATUSCODEVALUES_OUT_OF_RANGE,\n  UNIMPLEMENTED: TMP_RPCGRPCSTATUSCODEVALUES_UNIMPLEMENTED,\n  INTERNAL: TMP_RPCGRPCSTATUSCODEVALUES_INTERNAL,\n  UNAVAILABLE: TMP_RPCGRPCSTATUSCODEVALUES_UNAVAILABLE,\n  DATA_LOSS: TMP_RPCGRPCSTATUSCODEVALUES_DATA_LOSS,\n  UNAUTHENTICATED: TMP_RPCGRPCSTATUSCODEVALUES_UNAUTHENTICATED,\n};\n\n/* ----------------------------------------------------------------------------------------------------------\n * Constant values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * ---------------------------------------------------------------------------------------------------------- */\n\n// Temporary local constants to assign to the individual exports and the namespaced version\n// Required to avoid the namespace exports using the unminifiable export names for some package types\nconst TMP_MESSAGETYPEVALUES_SENT = 'SENT';\nconst TMP_MESSAGETYPEVALUES_RECEIVED = 'RECEIVED';\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_SENT.\n */\nexport const MESSAGETYPEVALUES_SENT = TMP_MESSAGETYPEVALUES_SENT;\n\n/**\n * Whether this is a received or sent message.\n *\n * @deprecated Use MESSAGE_TYPE_VALUE_RECEIVED.\n */\nexport const MESSAGETYPEVALUES_RECEIVED = TMP_MESSAGETYPEVALUES_RECEIVED;\n\n/**\n * Identifies the Values for MessageTypeValues enum definition\n *\n * Whether this is a received or sent message.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport type MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT';\n\n  /** received. */\n  RECEIVED: 'RECEIVED';\n};\n\n/**\n * The constant map of values for MessageTypeValues.\n * @deprecated Use the MESSAGETYPEVALUES_XXXXX constants rather than the MessageTypeValues.XXXXX for bundle minification.\n */\nexport const MessageTypeValues: MessageTypeValues =\n  /*#__PURE__*/ createConstMap<MessageTypeValues>([\n    TMP_MESSAGETYPEVALUES_SENT,\n    TMP_MESSAGETYPEVALUES_RECEIVED,\n  ]);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum PerformanceTimingNames {\n  CONNECT_END = 'connectEnd',\n  CONNECT_START = 'connectStart',\n  DECODED_BODY_SIZE = 'decodedBodySize',\n  DOM_COMPLETE = 'domComplete',\n  DOM_CONTENT_LOADED_EVENT_END = 'domContentLoadedEventEnd',\n  DOM_CONTENT_LOADED_EVENT_START = 'domContentLoadedEventStart',\n  DOM_INTERACTIVE = 'domInteractive',\n  DOMAIN_LOOKUP_END = 'domainLookupEnd',\n  DOMAIN_LOOKUP_START = 'domainLookupStart',\n  ENCODED_BODY_SIZE = 'encodedBodySize',\n  FETCH_START = 'fetchStart',\n  LOAD_EVENT_END = 'loadEventEnd',\n  LOAD_EVENT_START = 'loadEventStart',\n  NAVIGATION_START = 'navigationStart',\n  REDIRECT_END = 'redirectEnd',\n  REDIRECT_START = 'redirectStart',\n  REQUEST_START = 'requestStart',\n  RESPONSE_END = 'responseEnd',\n  RESPONSE_START = 'responseStart',\n  SECURE_CONNECTION_START = 'secureConnectionStart',\n  UNLOAD_EVENT_END = 'unloadEventEnd',\n  UNLOAD_EVENT_START = 'unloadEventStart',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PerformanceEntries,\n  PerformanceResourceTimingInfo,\n  PropagateTraceHeaderCorsUrls,\n} from './types';\nimport { PerformanceTimingNames as PTN } from './enums/PerformanceTimingNames';\nimport * as api from '@opentelemetry/api';\nimport {\n  hrTimeToNanoseconds,\n  timeInputToHrTime,\n  urlMatches,\n} from '@opentelemetry/core';\nimport {\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH,\n  SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n} from '@opentelemetry/semantic-conventions';\n\n// Used to normalize relative URLs\nlet urlNormalizingAnchor: HTMLAnchorElement | undefined;\nfunction getUrlNormalizingAnchor(): HTMLAnchorElement {\n  if (!urlNormalizingAnchor) {\n    urlNormalizingAnchor = document.createElement('a');\n  }\n\n  return urlNormalizingAnchor;\n}\n\n/**\n * Helper function to be able to use enum as typed key in type and in interface when using forEach\n * @param obj\n * @param key\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function hasKey<O extends object>(\n  obj: O,\n  key: keyof any\n): key is keyof O {\n  return key in obj;\n}\n\n/**\n * Helper function for starting an event on span based on {@link PerformanceEntries}\n * @param span\n * @param performanceName name of performance entry for time start\n * @param entries\n * @param refPerfName name of performance entry to use for reference\n */\nexport function addSpanNetworkEvent(\n  span: api.Span,\n  performanceName: string,\n  entries: PerformanceEntries,\n  refPerfName?: string\n): api.Span | undefined {\n  let perfTime = undefined;\n  let refTime = undefined;\n  if (\n    hasKey(entries, performanceName) &&\n    typeof entries[performanceName] === 'number'\n  ) {\n    perfTime = entries[performanceName];\n  }\n  const refName = refPerfName || PTN.FETCH_START;\n  // Use a reference time which is the earliest possible value so that the performance timings that are earlier should not be added\n  // using FETCH START time in case no reference is provided\n  if (hasKey(entries, refName) && typeof entries[refName] === 'number') {\n    refTime = entries[refName];\n  }\n  if (perfTime !== undefined && refTime !== undefined && perfTime >= refTime) {\n    span.addEvent(performanceName, perfTime);\n    return span;\n  }\n  return undefined;\n}\n\n/**\n * Helper function for adding network events\n * @param span\n * @param resource\n */\nexport function addSpanNetworkEvents(\n  span: api.Span,\n  resource: PerformanceEntries\n): void {\n  addSpanNetworkEvent(span, PTN.FETCH_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_START, resource);\n  addSpanNetworkEvent(span, PTN.DOMAIN_LOOKUP_END, resource);\n  addSpanNetworkEvent(span, PTN.CONNECT_START, resource);\n  if (\n    hasKey(resource as PerformanceResourceTiming, 'name') &&\n    (resource as PerformanceResourceTiming)['name'].startsWith('https:')\n  ) {\n    addSpanNetworkEvent(span, PTN.SECURE_CONNECTION_START, resource);\n  }\n  addSpanNetworkEvent(span, PTN.CONNECT_END, resource);\n  addSpanNetworkEvent(span, PTN.REQUEST_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_START, resource);\n  addSpanNetworkEvent(span, PTN.RESPONSE_END, resource);\n  const encodedLength = resource[PTN.ENCODED_BODY_SIZE];\n  if (encodedLength !== undefined) {\n    span.setAttribute(SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH, encodedLength);\n  }\n  const decodedLength = resource[PTN.DECODED_BODY_SIZE];\n  // Spec: Not set if transport encoding not used (in which case encoded and decoded sizes match)\n  if (decodedLength !== undefined && encodedLength !== decodedLength) {\n    span.setAttribute(\n      SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED,\n      decodedLength\n    );\n  }\n}\n\n/**\n * sort resources by startTime\n * @param filteredResources\n */\nexport function sortResources(\n  filteredResources: PerformanceResourceTiming[]\n): PerformanceResourceTiming[] {\n  return filteredResources.slice().sort((a, b) => {\n    const valueA = a[PTN.FETCH_START];\n    const valueB = b[PTN.FETCH_START];\n    if (valueA > valueB) {\n      return 1;\n    } else if (valueA < valueB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n\n/** Returns the origin if present (if in browser context). */\nfunction getOrigin(): string | undefined {\n  return typeof location !== 'undefined' ? location.origin : undefined;\n}\n\n/**\n * Get closest performance resource ignoring the resources that have been\n * already used.\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n * @param initiatorType\n */\nexport function getResource(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming> = new WeakSet<PerformanceResourceTiming>(),\n  initiatorType?: string\n): PerformanceResourceTimingInfo {\n  // de-relativize the URL before usage (does no harm to absolute URLs)\n  const parsedSpanUrl = parseUrl(spanUrl);\n  spanUrl = parsedSpanUrl.toString();\n\n  const filteredResources = filterResourcesForSpan(\n    spanUrl,\n    startTimeHR,\n    endTimeHR,\n    resources,\n    ignoredResources,\n    initiatorType\n  );\n\n  if (filteredResources.length === 0) {\n    return {\n      mainRequest: undefined,\n    };\n  }\n  if (filteredResources.length === 1) {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n  const sorted = sortResources(filteredResources);\n\n  if (parsedSpanUrl.origin !== getOrigin() && sorted.length > 1) {\n    let corsPreFlightRequest: PerformanceResourceTiming | undefined = sorted[0];\n    let mainRequest: PerformanceResourceTiming = findMainRequest(\n      sorted,\n      corsPreFlightRequest[PTN.RESPONSE_END],\n      endTimeHR\n    );\n\n    const responseEnd = corsPreFlightRequest[PTN.RESPONSE_END];\n    const fetchStart = mainRequest[PTN.FETCH_START];\n\n    // no corsPreFlightRequest\n    if (fetchStart < responseEnd) {\n      mainRequest = corsPreFlightRequest;\n      corsPreFlightRequest = undefined;\n    }\n\n    return {\n      corsPreFlightRequest,\n      mainRequest,\n    };\n  } else {\n    return {\n      mainRequest: filteredResources[0],\n    };\n  }\n}\n\n/**\n * Will find the main request skipping the cors pre flight requests\n * @param resources\n * @param corsPreFlightRequestEndTime\n * @param spanEndTimeHR\n */\nfunction findMainRequest(\n  resources: PerformanceResourceTiming[],\n  corsPreFlightRequestEndTime: number,\n  spanEndTimeHR: api.HrTime\n): PerformanceResourceTiming {\n  const spanEndTime = hrTimeToNanoseconds(spanEndTimeHR);\n  const minTime = hrTimeToNanoseconds(\n    timeInputToHrTime(corsPreFlightRequestEndTime)\n  );\n\n  let mainRequest: PerformanceResourceTiming = resources[1];\n  let bestGap;\n\n  const length = resources.length;\n  for (let i = 1; i < length; i++) {\n    const resource = resources[i];\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    const currentGap = spanEndTime - resourceEndTime;\n\n    if (resourceStartTime >= minTime && (!bestGap || currentGap < bestGap)) {\n      bestGap = currentGap;\n      mainRequest = resource;\n    }\n  }\n  return mainRequest;\n}\n\n/**\n * Filter all resources that has started and finished according to span start time and end time.\n *     It will return the closest resource to a start time\n * @param spanUrl\n * @param startTimeHR\n * @param endTimeHR\n * @param resources\n * @param ignoredResources\n */\nfunction filterResourcesForSpan(\n  spanUrl: string,\n  startTimeHR: api.HrTime,\n  endTimeHR: api.HrTime,\n  resources: PerformanceResourceTiming[],\n  ignoredResources: WeakSet<PerformanceResourceTiming>,\n  initiatorType?: string\n) {\n  const startTime = hrTimeToNanoseconds(startTimeHR);\n  const endTime = hrTimeToNanoseconds(endTimeHR);\n  let filteredResources = resources.filter(resource => {\n    const resourceStartTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.FETCH_START])\n    );\n    const resourceEndTime = hrTimeToNanoseconds(\n      timeInputToHrTime(resource[PTN.RESPONSE_END])\n    );\n\n    return (\n      resource.initiatorType.toLowerCase() ===\n        (initiatorType || 'xmlhttprequest') &&\n      resource.name === spanUrl &&\n      resourceStartTime >= startTime &&\n      resourceEndTime <= endTime\n    );\n  });\n\n  if (filteredResources.length > 0) {\n    filteredResources = filteredResources.filter(resource => {\n      return !ignoredResources.has(resource);\n    });\n  }\n\n  return filteredResources;\n}\n\n/**\n * The URLLike interface represents an URL and HTMLAnchorElement compatible fields.\n */\nexport interface URLLike {\n  hash: string;\n  host: string;\n  hostname: string;\n  href: string;\n  readonly origin: string;\n  password: string;\n  pathname: string;\n  port: string;\n  protocol: string;\n  search: string;\n  username: string;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element.\n * @param url\n */\nexport function parseUrl(url: string): URLLike {\n  if (typeof URL === 'function') {\n    return new URL(\n      url,\n      typeof document !== 'undefined'\n        ? document.baseURI\n        : typeof location !== 'undefined' // Some JS runtimes (e.g. Deno) don't define this\n        ? location.href\n        : undefined\n    );\n  }\n  const element = getUrlNormalizingAnchor();\n  element.href = url;\n  return element;\n}\n\n/**\n * Parses url using URL constructor or fallback to anchor element and serialize\n * it to a string.\n *\n * Performs the steps described in https://html.spec.whatwg.org/multipage/urls-and-fetching.html#parse-a-url\n *\n * @param url\n */\nexport function normalizeUrl(url: string): string {\n  const urlLike = parseUrl(url);\n  return urlLike.href;\n}\n\n/**\n * Get element XPath\n * @param target - target element\n * @param optimised - when id attribute of element is present the xpath can be\n * simplified to contain id\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function getElementXPath(target: any, optimised?: boolean): string {\n  if (target.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n  const targetValue = getNodeValue(target, optimised);\n  if (optimised && targetValue.indexOf('@id') > 0) {\n    return targetValue;\n  }\n  let xpath = '';\n  if (target.parentNode) {\n    xpath += getElementXPath(target.parentNode, false);\n  }\n  xpath += targetValue;\n\n  return xpath;\n}\n\n/**\n * get node index within the siblings\n * @param target\n */\nfunction getNodeIndex(target: HTMLElement): number {\n  if (!target.parentNode) {\n    return 0;\n  }\n  const allowedTypes = [target.nodeType];\n  if (target.nodeType === Node.CDATA_SECTION_NODE) {\n    allowedTypes.push(Node.TEXT_NODE);\n  }\n  let elements = Array.from(target.parentNode.childNodes);\n  elements = elements.filter((element: Node) => {\n    const localName = (element as HTMLElement).localName;\n    return (\n      allowedTypes.indexOf(element.nodeType) >= 0 &&\n      localName === target.localName\n    );\n  });\n  if (elements.length >= 1) {\n    return elements.indexOf(target) + 1; // xpath starts from 1\n  }\n  // if there are no other similar child xpath doesn't need index\n  return 0;\n}\n\n/**\n * get node value for xpath\n * @param target\n * @param optimised\n */\nfunction getNodeValue(target: HTMLElement, optimised?: boolean): string {\n  const nodeType = target.nodeType;\n  const index = getNodeIndex(target);\n  let nodeValue = '';\n  if (nodeType === Node.ELEMENT_NODE) {\n    const id = target.getAttribute('id');\n    if (optimised && id) {\n      return `//*[@id=\"${id}\"]`;\n    }\n    nodeValue = target.localName;\n  } else if (\n    nodeType === Node.TEXT_NODE ||\n    nodeType === Node.CDATA_SECTION_NODE\n  ) {\n    nodeValue = 'text()';\n  } else if (nodeType === Node.COMMENT_NODE) {\n    nodeValue = 'comment()';\n  } else {\n    return '';\n  }\n  // if index is 1 it can be omitted in xpath\n  if (nodeValue && index > 1) {\n    return `/${nodeValue}[${index}]`;\n  }\n  return `/${nodeValue}`;\n}\n\n/**\n * Checks if trace headers should be propagated\n * @param spanUrl\n * @private\n */\nexport function shouldPropagateTraceHeaders(\n  spanUrl: string,\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls\n): boolean {\n  let propagateTraceHeaderUrls = propagateTraceHeaderCorsUrls || [];\n  if (\n    typeof propagateTraceHeaderUrls === 'string' ||\n    propagateTraceHeaderUrls instanceof RegExp\n  ) {\n    propagateTraceHeaderUrls = [propagateTraceHeaderUrls];\n  }\n  const parsedSpanUrl = parseUrl(spanUrl);\n\n  if (parsedSpanUrl.origin === getOrigin()) {\n    return true;\n  } else {\n    return propagateTraceHeaderUrls.some(propagateTraceHeaderUrl =>\n      urlMatches(spanUrl, propagateTraceHeaderUrl)\n    );\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum EventNames {\n  METHOD_OPEN = 'open',\n  METHOD_SEND = 'send',\n  EVENT_ABORT = 'abort',\n  EVENT_ERROR = 'error',\n  EVENT_LOAD = 'loaded',\n  EVENT_TIMEOUT = 'timeout',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.53.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md\n */\nexport enum AttributeNames {\n  HTTP_STATUS_TEXT = 'http.status_text',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport { hrTime, isUrlIgnored, otperformance } from '@opentelemetry/core';\nimport {\n  SEMATTRS_HTTP_HOST,\n  SEMATTRS_HTTP_METHOD,\n  SEMATTRS_HTTP_SCHEME,\n  SEMATTRS_HTTP_STATUS_CODE,\n  SEMATTRS_HTTP_URL,\n  SEMATTRS_HTTP_USER_AGENT,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  addSpanNetworkEvents,\n  getResource,\n  PerformanceTimingNames as PTN,\n  shouldPropagateTraceHeaders,\n  parseUrl,\n} from '@opentelemetry/sdk-trace-web';\nimport { EventNames } from './enums/EventNames';\nimport {\n  OpenFunction,\n  PropagateTraceHeaderCorsUrls,\n  SendFunction,\n  XhrMem,\n} from './types';\nimport { VERSION } from './version';\nimport { AttributeNames } from './enums/AttributeNames';\n\n// how long to wait for observer to collect information about resources\n// this is needed as event \"load\" is called before observer\n// hard to say how long it should really wait, seems like 300ms is\n// safe enough\nconst OBSERVER_WAIT_TIME_MS = 300;\n\nexport type XHRCustomAttributeFunction = (\n  span: api.Span,\n  xhr: XMLHttpRequest\n) => void;\n\n/**\n * XMLHttpRequest config\n */\nexport interface XMLHttpRequestInstrumentationConfig\n  extends InstrumentationConfig {\n  /**\n   * The number of timing resources is limited, after the limit\n   * (chrome 250, safari 150) the information is not collected anymore.\n   * The only way to prevent that is to regularly clean the resources\n   * whenever it is possible. This is needed only when PerformanceObserver\n   * is not available\n   */\n  clearTimingResources?: boolean;\n  /** URLs which should include trace headers when origin doesn't match */\n  propagateTraceHeaderCorsUrls?: PropagateTraceHeaderCorsUrls;\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  ignoreUrls?: Array<string | RegExp>;\n  /** Function for adding custom attributes on the span */\n  applyCustomAttributesOnSpan?: XHRCustomAttributeFunction;\n  /** Ignore adding network events as span events */\n  ignoreNetworkEvents?: boolean;\n}\n\n/**\n * This class represents a XMLHttpRequest plugin for auto instrumentation\n */\nexport class XMLHttpRequestInstrumentation extends InstrumentationBase<XMLHttpRequestInstrumentationConfig> {\n  readonly component: string = 'xml-http-request';\n  readonly version: string = VERSION;\n  moduleName = this.component;\n\n  private _tasksCount = 0;\n  private _xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n  private _usedResources = new WeakSet<PerformanceResourceTiming>();\n\n  constructor(config: XMLHttpRequestInstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-xml-http-request', VERSION, config);\n  }\n\n  init() {}\n\n  /**\n   * Adds custom headers to XMLHttpRequest\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addHeaders(xhr: XMLHttpRequest, spanUrl: string) {\n    const url = parseUrl(spanUrl).href;\n    if (\n      !shouldPropagateTraceHeaders(\n        url,\n        this.getConfig().propagateTraceHeaderCorsUrls\n      )\n    ) {\n      const headers: Partial<Record<string, unknown>> = {};\n      api.propagation.inject(api.context.active(), headers);\n      if (Object.keys(headers).length > 0) {\n        this._diag.debug('headers inject skipped due to CORS policy');\n      }\n      return;\n    }\n    const headers: { [key: string]: unknown } = {};\n    api.propagation.inject(api.context.active(), headers);\n    Object.keys(headers).forEach(key => {\n      xhr.setRequestHeader(key, String(headers[key]));\n    });\n  }\n\n  /**\n   * Add cors pre flight child span\n   * @param span\n   * @param corsPreFlightRequest\n   * @private\n   */\n  private _addChildSpan(\n    span: api.Span,\n    corsPreFlightRequest: PerformanceResourceTiming\n  ): void {\n    api.context.with(api.trace.setSpan(api.context.active(), span), () => {\n      const childSpan = this.tracer.startSpan('CORS Preflight', {\n        startTime: corsPreFlightRequest[PTN.FETCH_START],\n      });\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvents(childSpan, corsPreFlightRequest);\n      }\n      childSpan.end(corsPreFlightRequest[PTN.RESPONSE_END]);\n    });\n  }\n\n  /**\n   * Add attributes when span is going to end\n   * @param span\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  _addFinalSpanAttributes(span: api.Span, xhrMem: XhrMem, spanUrl?: string) {\n    if (typeof spanUrl === 'string') {\n      const parsedUrl = parseUrl(spanUrl);\n      if (xhrMem.status !== undefined) {\n        span.setAttribute(SEMATTRS_HTTP_STATUS_CODE, xhrMem.status);\n      }\n      if (xhrMem.statusText !== undefined) {\n        span.setAttribute(AttributeNames.HTTP_STATUS_TEXT, xhrMem.statusText);\n      }\n      span.setAttribute(SEMATTRS_HTTP_HOST, parsedUrl.host);\n      span.setAttribute(\n        SEMATTRS_HTTP_SCHEME,\n        parsedUrl.protocol.replace(':', '')\n      );\n\n      // @TODO do we want to collect this or it will be collected earlier once only or\n      //    maybe when parent span is not available ?\n      span.setAttribute(SEMATTRS_HTTP_USER_AGENT, navigator.userAgent);\n    }\n  }\n\n  private _applyAttributesAfterXHR(span: api.Span, xhr: XMLHttpRequest) {\n    const applyCustomAttributesOnSpan =\n      this.getConfig().applyCustomAttributesOnSpan;\n    if (typeof applyCustomAttributesOnSpan === 'function') {\n      safeExecuteInTheMiddle(\n        () => applyCustomAttributesOnSpan(span, xhr),\n        error => {\n          if (!error) {\n            return;\n          }\n\n          this._diag.error('applyCustomAttributesOnSpan', error);\n        },\n        true\n      );\n    }\n  }\n\n  /**\n   * will collect information about all resources created\n   * between \"send\" and \"end\" with additional waiting for main resource\n   * @param xhr\n   * @param spanUrl\n   * @private\n   */\n  private _addResourceObserver(xhr: XMLHttpRequest, spanUrl: string) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (\n      !xhrMem ||\n      typeof PerformanceObserver !== 'function' ||\n      typeof PerformanceResourceTiming !== 'function'\n    ) {\n      return;\n    }\n    xhrMem.createdResources = {\n      observer: new PerformanceObserver(list => {\n        const entries = list.getEntries() as PerformanceResourceTiming[];\n        const parsedUrl = parseUrl(spanUrl);\n\n        entries.forEach(entry => {\n          if (\n            entry.initiatorType === 'xmlhttprequest' &&\n            entry.name === parsedUrl.href\n          ) {\n            if (xhrMem.createdResources) {\n              xhrMem.createdResources.entries.push(entry);\n            }\n          }\n        });\n      }),\n      entries: [],\n    };\n    xhrMem.createdResources.observer.observe({\n      entryTypes: ['resource'],\n    });\n  }\n\n  /**\n   * Clears the resource timings and all resources assigned with spans\n   *     when {@link XMLHttpRequestInstrumentationConfig.clearTimingResources} is\n   *     set to true (default false)\n   * @private\n   */\n  private _clearResources() {\n    if (this._tasksCount === 0 && this.getConfig().clearTimingResources) {\n      (otperformance as unknown as Performance).clearResourceTimings();\n      this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n      this._usedResources = new WeakSet<PerformanceResourceTiming>();\n    }\n  }\n\n  /**\n   * Finds appropriate resource and add network events to the span\n   * @param span\n   */\n  private _findResourceAndAddNetworkEvents(\n    xhrMem: XhrMem,\n    span: api.Span,\n    spanUrl?: string,\n    startTime?: api.HrTime,\n    endTime?: api.HrTime\n  ): void {\n    if (!spanUrl || !startTime || !endTime || !xhrMem.createdResources) {\n      return;\n    }\n\n    let resources: PerformanceResourceTiming[] =\n      xhrMem.createdResources.entries;\n\n    if (!resources || !resources.length) {\n      // fallback - either Observer is not available or it took longer\n      // then OBSERVER_WAIT_TIME_MS and observer didn't collect enough\n      // information\n      // ts thinks this is the perf_hooks module, but it is the browser performance api\n      resources = (otperformance as unknown as Performance).getEntriesByType(\n        'resource'\n      ) as PerformanceResourceTiming[];\n    }\n\n    const resource = getResource(\n      parseUrl(spanUrl).href,\n      startTime,\n      endTime,\n      resources,\n      this._usedResources\n    );\n\n    if (resource.mainRequest) {\n      const mainRequest = resource.mainRequest;\n      this._markResourceAsUsed(mainRequest);\n\n      const corsPreFlightRequest = resource.corsPreFlightRequest;\n      if (corsPreFlightRequest) {\n        this._addChildSpan(span, corsPreFlightRequest);\n        this._markResourceAsUsed(corsPreFlightRequest);\n      }\n      if (!this.getConfig().ignoreNetworkEvents) {\n        addSpanNetworkEvents(span, mainRequest);\n      }\n    }\n  }\n\n  /**\n   * Removes the previous information about span.\n   * This might happened when the same xhr is used again.\n   * @param xhr\n   * @private\n   */\n  private _cleanPreviousSpanInformation(xhr: XMLHttpRequest) {\n    const xhrMem = this._xhrMem.get(xhr);\n    if (xhrMem) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n      if (callbackToRemoveEvents) {\n        callbackToRemoveEvents();\n      }\n      this._xhrMem.delete(xhr);\n    }\n  }\n\n  /**\n   * Creates a new span when method \"open\" is called\n   * @param xhr\n   * @param url\n   * @param method\n   * @private\n   */\n  private _createSpan(\n    xhr: XMLHttpRequest,\n    url: string,\n    method: string\n  ): api.Span | undefined {\n    if (isUrlIgnored(url, this.getConfig().ignoreUrls)) {\n      this._diag.debug('ignoring span as url matches ignored url');\n      return;\n    }\n    const spanName = method.toUpperCase();\n\n    const currentSpan = this.tracer.startSpan(spanName, {\n      kind: api.SpanKind.CLIENT,\n      attributes: {\n        [SEMATTRS_HTTP_METHOD]: method,\n        [SEMATTRS_HTTP_URL]: parseUrl(url).toString(),\n      },\n    });\n\n    currentSpan.addEvent(EventNames.METHOD_OPEN);\n\n    this._cleanPreviousSpanInformation(xhr);\n\n    this._xhrMem.set(xhr, {\n      span: currentSpan,\n      spanUrl: url,\n    });\n\n    return currentSpan;\n  }\n\n  /**\n   * Marks certain [resource]{@link PerformanceResourceTiming} when information\n   * from this is used to add events to span.\n   * This is done to avoid reusing the same resource again for next span\n   * @param resource\n   * @private\n   */\n  private _markResourceAsUsed(resource: PerformanceResourceTiming) {\n    this._usedResources.add(resource);\n  }\n\n  /**\n   * Patches the method open\n   * @private\n   */\n  protected _patchOpen() {\n    return (original: OpenFunction): OpenFunction => {\n      const plugin = this;\n      return function patchOpen(this: XMLHttpRequest, ...args): void {\n        const method: string = args[0];\n        const url: string = args[1];\n        plugin._createSpan(this, url, method);\n\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * Patches the method send\n   * @private\n   */\n  protected _patchSend() {\n    const plugin = this;\n\n    function endSpanTimeout(\n      eventName: string,\n      xhrMem: XhrMem,\n      performanceEndTime: api.HrTime,\n      endTime: number\n    ) {\n      const callbackToRemoveEvents = xhrMem.callbackToRemoveEvents;\n\n      if (typeof callbackToRemoveEvents === 'function') {\n        callbackToRemoveEvents();\n      }\n\n      const { span, spanUrl, sendStartTime } = xhrMem;\n\n      if (span) {\n        plugin._findResourceAndAddNetworkEvents(\n          xhrMem,\n          span,\n          spanUrl,\n          sendStartTime,\n          performanceEndTime\n        );\n        span.addEvent(eventName, endTime);\n        plugin._addFinalSpanAttributes(span, xhrMem, spanUrl);\n        span.end(endTime);\n        plugin._tasksCount--;\n      }\n      plugin._clearResources();\n    }\n\n    function endSpan(eventName: string, xhr: XMLHttpRequest) {\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (!xhrMem) {\n        return;\n      }\n      xhrMem.status = xhr.status;\n      xhrMem.statusText = xhr.statusText;\n      plugin._xhrMem.delete(xhr);\n\n      if (xhrMem.span) {\n        plugin._applyAttributesAfterXHR(xhrMem.span, xhr);\n      }\n      const performanceEndTime = hrTime();\n      const endTime = Date.now();\n\n      // the timeout is needed as observer doesn't have yet information\n      // when event \"load\" is called. Also the time may differ depends on\n      // browser and speed of computer\n      setTimeout(() => {\n        endSpanTimeout(eventName, xhrMem, performanceEndTime, endTime);\n      }, OBSERVER_WAIT_TIME_MS);\n    }\n\n    function onError(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ERROR, this);\n    }\n\n    function onAbort(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_ABORT, this);\n    }\n\n    function onTimeout(this: XMLHttpRequest) {\n      endSpan(EventNames.EVENT_TIMEOUT, this);\n    }\n\n    function onLoad(this: XMLHttpRequest) {\n      if (this.status < 299) {\n        endSpan(EventNames.EVENT_LOAD, this);\n      } else {\n        endSpan(EventNames.EVENT_ERROR, this);\n      }\n    }\n\n    function unregister(xhr: XMLHttpRequest) {\n      xhr.removeEventListener('abort', onAbort);\n      xhr.removeEventListener('error', onError);\n      xhr.removeEventListener('load', onLoad);\n      xhr.removeEventListener('timeout', onTimeout);\n      const xhrMem = plugin._xhrMem.get(xhr);\n      if (xhrMem) {\n        xhrMem.callbackToRemoveEvents = undefined;\n      }\n    }\n\n    return (original: SendFunction): SendFunction => {\n      return function patchSend(this: XMLHttpRequest, ...args): void {\n        const xhrMem = plugin._xhrMem.get(this);\n        if (!xhrMem) {\n          return original.apply(this, args);\n        }\n        const currentSpan = xhrMem.span;\n        const spanUrl = xhrMem.spanUrl;\n\n        if (currentSpan && spanUrl) {\n          api.context.with(\n            api.trace.setSpan(api.context.active(), currentSpan),\n            () => {\n              plugin._tasksCount++;\n              xhrMem.sendStartTime = hrTime();\n              currentSpan.addEvent(EventNames.METHOD_SEND);\n\n              this.addEventListener('abort', onAbort);\n              this.addEventListener('error', onError);\n              this.addEventListener('load', onLoad);\n              this.addEventListener('timeout', onTimeout);\n\n              xhrMem.callbackToRemoveEvents = () => {\n                unregister(this);\n                if (xhrMem.createdResources) {\n                  xhrMem.createdResources.observer.disconnect();\n                }\n              };\n              plugin._addHeaders(this, spanUrl);\n              plugin._addResourceObserver(this, spanUrl);\n            }\n          );\n        }\n        return original.apply(this, args);\n      };\n    };\n  }\n\n  /**\n   * implements enable function\n   */\n  override enable() {\n    this._diag.debug('applying patch to', this.moduleName, this.version);\n\n    if (isWrapped(XMLHttpRequest.prototype.open)) {\n      this._unwrap(XMLHttpRequest.prototype, 'open');\n      this._diag.debug('removing previous patch from method open');\n    }\n\n    if (isWrapped(XMLHttpRequest.prototype.send)) {\n      this._unwrap(XMLHttpRequest.prototype, 'send');\n      this._diag.debug('removing previous patch from method send');\n    }\n\n    this._wrap(XMLHttpRequest.prototype, 'open', this._patchOpen());\n    this._wrap(XMLHttpRequest.prototype, 'send', this._patchSend());\n  }\n\n  /**\n   * implements disable function\n   */\n  override disable() {\n    this._diag.debug('removing patch from', this.moduleName, this.version);\n\n    this._unwrap(XMLHttpRequest.prototype, 'open');\n    this._unwrap(XMLHttpRequest.prototype, 'send');\n\n    this._tasksCount = 0;\n    this._xhrMem = new WeakMap<XMLHttpRequest, XhrMem>();\n    this._usedResources = new WeakSet<PerformanceResourceTiming>();\n  }\n}\n","import type { Span } from '@opentelemetry/api';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport type { XMLHttpRequestInstrumentationConfig } from '@opentelemetry/instrumentation-xml-http-request';\nimport type { OpenFunction } from '@opentelemetry/instrumentation-xml-http-request/build/src/types';\n\ntype Parent = {\n  _createSpan: (xhr: XMLHttpRequest, url: string, method: string) => Span | undefined;\n};\n\nexport class FaroXhrInstrumentation extends XMLHttpRequestInstrumentation {\n  private parentCreateSpan: Parent['_createSpan'];\n\n  constructor(config: XMLHttpRequestInstrumentationConfig = {}) {\n    super(config);\n\n    const self = this as any as Parent;\n    this.parentCreateSpan = self._createSpan.bind(this);\n  }\n\n  // Patching the parent's private method to handle url type string or URL\n  protected override _patchOpen() {\n    return (original: OpenFunction): OpenFunction => {\n      const plugin = this;\n      return function patchOpen(this: XMLHttpRequest, ...args): void {\n        const method: string = args[0];\n        let url: string | URL = args[1];\n\n        if (isInstanceOfURL(url)) {\n          url = url.href;\n        }\n\n        plugin.parentCreateSpan(this, url, method);\n\n        return original.apply(this, args);\n      };\n    };\n  }\n}\n\nfunction isInstanceOfURL(item: any): item is URL {\n  return item instanceof URL;\n}\n","import { Span, SpanStatusCode } from '@opentelemetry/api';\nimport type { FetchCustomAttributeFunction } from '@opentelemetry/instrumentation-fetch';\nimport type { XHRCustomAttributeFunction } from '@opentelemetry/instrumentation-xml-http-request';\n\nexport interface FetchError {\n  status?: number;\n  message: string;\n}\n\n/**\n * Adds HTTP status code to every span.\n *\n * The fetch instrumentation does not always set the span status to error as defined by the spec.\n * To work around that issue we manually set the span status.\n *\n * Issue: https://github.com/open-telemetry/opentelemetry-js/issues/3564\n * Spec: https://github.com/open-telemetry/opentelemetry-specification/blob/v1.20.0/specification/trace/semantic_conventions/http.md#status\n */\nexport function setSpanStatusOnFetchError(span: Span, _request: Request | RequestInit, result: Response | FetchError) {\n  const httpStatusCode = result instanceof Error ? 0 : result.status;\n  setSpanStatus(span, httpStatusCode);\n}\n\nexport function setSpanStatusOnXMLHttpRequestError(span: Span, xhr: XMLHttpRequest) {\n  setSpanStatus(span, xhr.status);\n}\n\nfunction setSpanStatus(span: Span, httpStatusCode?: number) {\n  if (httpStatusCode == null) {\n    return;\n  }\n\n  const isError = httpStatusCode === 0;\n  const isClientOrServerError = httpStatusCode >= 400 && httpStatusCode < 600;\n\n  if (isError || isClientOrServerError) {\n    span.setStatus({ code: SpanStatusCode.ERROR });\n  }\n}\n\nexport function fetchCustomAttributeFunctionWithDefaults(callback?: FetchCustomAttributeFunction) {\n  return (span: Span, request: Request | RequestInit, result: Response | FetchError) => {\n    setSpanStatusOnFetchError(span, request, result);\n    callback?.(span, request, result);\n  };\n}\n\nexport function xhrCustomAttributeFunctionWithDefaults(callback?: XHRCustomAttributeFunction) {\n  return (span: Span, xhr: XMLHttpRequest) => {\n    setSpanStatusOnXMLHttpRequestError(span, xhr);\n    callback?.(span, xhr);\n  };\n}\n","import { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\n\nimport { FaroXhrInstrumentation } from './faroXhrInstrumentation';\nimport {\n  fetchCustomAttributeFunctionWithDefaults,\n  xhrCustomAttributeFunctionWithDefaults,\n} from './instrumentationUtils';\nimport type { DefaultInstrumentationsOptions, InstrumentationOption } from './types';\n\nexport function getDefaultOTELInstrumentations(options: DefaultInstrumentationsOptions = {}): InstrumentationOption[] {\n  const { fetchInstrumentationOptions, xhrInstrumentationOptions, ...sharedOptions } = options;\n\n  const fetchOpts = createFetchInstrumentationOptions(fetchInstrumentationOptions, sharedOptions);\n  const xhrOpts = createXhrInstrumentationOptions(xhrInstrumentationOptions, sharedOptions);\n\n  return [new FetchInstrumentation(fetchOpts), new FaroXhrInstrumentation(xhrOpts)];\n}\nfunction createFetchInstrumentationOptions(\n  fetchInstrumentationOptions: DefaultInstrumentationsOptions['fetchInstrumentationOptions'],\n  sharedOptions: Record<string, unknown>\n) {\n  return {\n    ...sharedOptions,\n    ignoreNetworkEvents: true,\n    // keep this here to overwrite the defaults above if provided by the users\n    ...fetchInstrumentationOptions,\n    // always keep this function\n    applyCustomAttributesOnSpan: fetchCustomAttributeFunctionWithDefaults(\n      fetchInstrumentationOptions?.applyCustomAttributesOnSpan\n    ),\n  };\n}\n\nfunction createXhrInstrumentationOptions(\n  xhrInstrumentationOptions: DefaultInstrumentationsOptions['xhrInstrumentationOptions'],\n  sharedOptions: Record<string, unknown>\n) {\n  return {\n    ...sharedOptions,\n    ignoreNetworkEvents: true,\n    // keep this here to overwrite the defaults above if provided by the users\n    ...xhrInstrumentationOptions,\n    // always keep this function\n    applyCustomAttributesOnSpan: xhrCustomAttributeFunctionWithDefaults(\n      xhrInstrumentationOptions?.applyCustomAttributesOnSpan\n    ),\n  };\n}\n","import { SamplingDecision } from '@opentelemetry/sdk-trace-web';\n\nimport type { MetaSession } from '@grafana/faro-web-sdk';\n\nexport function getSamplingDecision(sessionMeta: MetaSession = {}): SamplingDecision {\n  const isSessionSampled = sessionMeta.attributes?.['isSampled'] === 'true';\n  const samplingDecision = isSessionSampled ? SamplingDecision.RECORD_AND_SAMPLED : SamplingDecision.NOT_RECORD;\n\n  return samplingDecision;\n}\n","import type { Context } from '@opentelemetry/api';\nimport type { ReadableSpan, Span, SpanProcessor } from '@opentelemetry/sdk-trace-web';\n// False positive. Package can be resolved.\n// eslint-disable-next-line import/no-unresolved\nimport { ATTR_SESSION_ID } from '@opentelemetry/semantic-conventions/incubating';\n\nimport type { Metas } from '@grafana/faro-web-sdk';\n\nexport class FaroSessionSpanProcessor implements SpanProcessor {\n  constructor(\n    private processor: SpanProcessor,\n    private metas: Metas\n  ) {}\n\n  forceFlush(): Promise<void> {\n    return this.processor.forceFlush();\n  }\n\n  onStart(span: Span, parentContext: Context): void {\n    const session = this.metas.value.session;\n\n    if (session?.id) {\n      span.attributes[ATTR_SESSION_ID] = session.id;\n      /**\n       * @deprecated will be removed in the future and has been replaced by ATTR_SESSION_ID (session.id)\n       */\n      span.attributes['session_id'] = session.id;\n    }\n\n    this.processor.onStart(span, parentContext);\n  }\n\n  onEnd(span: ReadableSpan): void {\n    this.processor.onEnd(span);\n  }\n\n  shutdown(): Promise<void> {\n    return this.processor.shutdown();\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n/**\n * The ID of a running ECS task. The ID **MUST** be extracted from `task.arn`.\n * \n * @example 10838bed-421f-43ef-870a-f43feacbbb5b\n * @example 23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_TASK_ID = 'aws.ecs.task.id' as const;\n\n/**\n * Uniquely identifies the framework API revision offered by a version (`os.version`) of the android operating system. More information can be found [here](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels).\n * \n * @example 33\n * @example 32\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ANDROID_OS_API_LEVEL = 'android.os.api_level' as const;\n\n/**\n * Deprecated use the `device.app.lifecycle` event definition including `android.state` as a payload field instead.\n * \n * @note The Android lifecycle states are defined in [Activity lifecycle callbacks](https://developer.android.com/guide/components/activities/activity-lifecycle#lc), and from which the `OS identifiers` are derived.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `device.app.lifecycle`.\n */\nexport const ATTR_ANDROID_STATE = 'android.state' as const;\n\n/**\n  * Enum value \"background\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport const ANDROID_STATE_VALUE_BACKGROUND = \"background\" as const;\n\n/**\n  * Enum value \"created\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport const ANDROID_STATE_VALUE_CREATED = \"created\" as const;\n\n/**\n  * Enum value \"foreground\" for attribute {@link ATTR_ANDROID_STATE}.\n  */\nexport const ANDROID_STATE_VALUE_FOREGROUND = \"foreground\" as const;\n\n/**\n * The provenance filename of the built attestation which directly relates to the build artifact filename. This filename **SHOULD** accompany the artifact at publish time. See the [SLSA Relationship](https://slsa.dev/spec/v1.0/distributing-provenance#relationship-between-artifacts-and-attestations) specification for more information.\n * \n * @example golang-binary-amd64-v0.1.0.attestation\n * @example docker-image-amd64-v0.1.0.intoto.json1\n * @example release-1.tar.gz.attestation\n * @example file-name-package.tar.gz.intoto.json1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_ATTESTATION_FILENAME = 'artifact.attestation.filename' as const;\n\n/**\n * The full [hash value (see glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf), of the built attestation. Some envelopes in the software attestation space also refer to this as the [digest](https://github.com/in-toto/attestation/blob/main/spec/README.md#in-toto-attestation-framework-spec).\n * \n * @example 1b31dfcd5b7f9267bf2ff47651df1cfb9147b9e4df1f335accf65b4cda498408\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_ATTESTATION_HASH = 'artifact.attestation.hash' as const;\n\n/**\n * The id of the build [software attestation](https://slsa.dev/attestation-model).\n * \n * @example 123\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_ATTESTATION_ID = 'artifact.attestation.id' as const;\n\n/**\n * The human readable file name of the artifact, typically generated during build and release processes. Often includes the package name and version in the file name.\n * \n * @example golang-binary-amd64-v0.1.0\n * @example docker-image-amd64-v0.1.0\n * @example release-1.tar.gz\n * @example file-name-package.tar.gz\n * \n * @note This file name can also act as the [Package Name](https://slsa.dev/spec/v1.0/terminology#package-model)\n * in cases where the package ecosystem maps accordingly.\n * Additionally, the artifact [can be published](https://slsa.dev/spec/v1.0/terminology#software-supply-chain)\n * for others, but that is not a guarantee.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_FILENAME = 'artifact.filename' as const;\n\n/**\n * The full [hash value (see glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf), often found in checksum.txt on a release of the artifact and used to verify package integrity.\n * \n * @example 9ff4c52759e2c4ac70b7d517bc7fcdc1cda631ca0045271ddd1b192544f8a3e9\n * \n * @note The specific algorithm used to create the cryptographic hash value is\n * not defined. In situations where an artifact has multiple\n * cryptographic hashes, it is up to the implementer to choose which\n * hash value to set here; this should be the most secure hash algorithm\n * that is suitable for the situation and consistent with the\n * corresponding attestation. The implementer can then provide the other\n * hash values through an additional set of attribute extensions as they\n * deem necessary.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_HASH = 'artifact.hash' as const;\n\n/**\n * The [Package URL](https://github.com/package-url/purl-spec) of the [package artifact](https://slsa.dev/spec/v1.0/terminology#package-model) provides a standard way to identify and locate the packaged artifact.\n * \n * @example pkg:github/package-url/purl-spec@1209109710924\n * @example pkg:npm/foo@12.12.3\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_PURL = 'artifact.purl' as const;\n\n/**\n * The version of the artifact.\n * \n * @example v0.1.0\n * @example 1.2.1\n * @example 122691-build\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_ARTIFACT_VERSION = 'artifact.version' as const;\n\n/**\n * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n * \n * @example [\"{ \"AttributeName\": \"string\", \"AttributeType\": \"string\" }\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS = 'aws.dynamodb.attribute_definitions' as const;\n\n/**\n * The value of the `AttributesToGet` request parameter.\n * \n * @example [\"lives\", \"id\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_ATTRIBUTES_TO_GET = 'aws.dynamodb.attributes_to_get' as const;\n\n/**\n * The value of the `ConsistentRead` request parameter.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_CONSISTENT_READ = 'aws.dynamodb.consistent_read' as const;\n\n/**\n * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n * \n * @example [\"{ \"CapacityUnits\": number, \"GlobalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"LocalSecondaryIndexes\": { \"string\" : { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }, \"ReadCapacityUnits\": number, \"Table\": { \"CapacityUnits\": number, \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number }, \"TableName\": \"string\", \"WriteCapacityUnits\": number }\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_CONSUMED_CAPACITY = 'aws.dynamodb.consumed_capacity' as const;\n\n/**\n * The value of the `Count` response parameter.\n * \n * @example 10\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_COUNT = 'aws.dynamodb.count' as const;\n\n/**\n * The value of the `ExclusiveStartTableName` request parameter.\n * \n * @example Users\n * @example CatsTable\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_EXCLUSIVE_START_TABLE = 'aws.dynamodb.exclusive_start_table' as const;\n\n/**\n * The JSON-serialized value of each item in the `GlobalSecondaryIndexUpdates` request field.\n * \n * @example [\"{ \"Create\": { \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES = 'aws.dynamodb.global_secondary_index_updates' as const;\n\n/**\n * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field\n * \n * @example [\"{ \"IndexName\": \"string\", \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" }, \"ProvisionedThroughput\": { \"ReadCapacityUnits\": number, \"WriteCapacityUnits\": number } }\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES = 'aws.dynamodb.global_secondary_indexes' as const;\n\n/**\n * The value of the `IndexName` request parameter.\n * \n * @example name_to_group\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_INDEX_NAME = 'aws.dynamodb.index_name' as const;\n\n/**\n * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n * \n * @example { \"string\" : [ { \"ItemCollectionKey\": { \"string\" : { \"B\": blob, \"BOOL\": boolean, \"BS\": [ blob ], \"L\": [ \"AttributeValue\" ], \"M\": { \"string\" : \"AttributeValue\" }, \"N\": \"string\", \"NS\": [ \"string\" ], \"NULL\": boolean, \"S\": \"string\", \"SS\": [ \"string\" ] } }, \"SizeEstimateRangeGB\": [ number ] } ] }\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_ITEM_COLLECTION_METRICS = 'aws.dynamodb.item_collection_metrics' as const;\n\n/**\n * The value of the `Limit` request parameter.\n * \n * @example 10\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_LIMIT = 'aws.dynamodb.limit' as const;\n\n/**\n * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n * \n * @example [\"{ \"IndexArn\": \"string\", \"IndexName\": \"string\", \"IndexSizeBytes\": number, \"ItemCount\": number, \"KeySchema\": [ { \"AttributeName\": \"string\", \"KeyType\": \"string\" } ], \"Projection\": { \"NonKeyAttributes\": [ \"string\" ], \"ProjectionType\": \"string\" } }\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES = 'aws.dynamodb.local_secondary_indexes' as const;\n\n/**\n * The value of the `ProjectionExpression` request parameter.\n * \n * @example Title\n * @example Title, Price, Color\n * @example Title, Description, RelatedItems, ProductReviews\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_PROJECTION = 'aws.dynamodb.projection' as const;\n\n/**\n * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n * \n * @example 1.0\n * @example 2.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_PROVISIONED_READ_CAPACITY = 'aws.dynamodb.provisioned_read_capacity' as const;\n\n/**\n * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n * \n * @example 1.0\n * @example 2.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY = 'aws.dynamodb.provisioned_write_capacity' as const;\n\n/**\n * The value of the `ScanIndexForward` request parameter.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_SCAN_FORWARD = 'aws.dynamodb.scan_forward' as const;\n\n/**\n * The value of the `ScannedCount` response parameter.\n * \n * @example 50\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_SCANNED_COUNT = 'aws.dynamodb.scanned_count' as const;\n\n/**\n * The value of the `Segment` request parameter.\n * \n * @example 10\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_SEGMENT = 'aws.dynamodb.segment' as const;\n\n/**\n * The value of the `Select` request parameter.\n * \n * @example ALL_ATTRIBUTES\n * @example COUNT\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_SELECT = 'aws.dynamodb.select' as const;\n\n/**\n * The number of items in the `TableNames` response parameter.\n * \n * @example 20\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_TABLE_COUNT = 'aws.dynamodb.table_count' as const;\n\n/**\n * The keys in the `RequestItems` object field.\n * \n * @example [\"Users\", \"Cats\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_TABLE_NAMES = 'aws.dynamodb.table_names' as const;\n\n/**\n * The value of the `TotalSegments` request parameter.\n * \n * @example 100\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_DYNAMODB_TOTAL_SEGMENTS = 'aws.dynamodb.total_segments' as const;\n\n/**\n * The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).\n * \n * @example arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_CLUSTER_ARN = 'aws.ecs.cluster.arn' as const;\n\n/**\n * The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).\n * \n * @example arn:aws:ecs:us-west-1:123456789123:container/32624152-9086-4f0e-acae-1a75b14fe4d9\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_CONTAINER_ARN = 'aws.ecs.container.arn' as const;\n\n/**\n * The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_LAUNCHTYPE = 'aws.ecs.launchtype' as const;\n\n/**\n  * Enum value \"ec2\" for attribute {@link ATTR_AWS_ECS_LAUNCHTYPE}.\n  */\nexport const AWS_ECS_LAUNCHTYPE_VALUE_EC2 = \"ec2\" as const;\n\n/**\n  * Enum value \"fargate\" for attribute {@link ATTR_AWS_ECS_LAUNCHTYPE}.\n  */\nexport const AWS_ECS_LAUNCHTYPE_VALUE_FARGATE = \"fargate\" as const;\n\n/**\n * The ARN of a running [ECS task](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-account-settings.html#ecs-resource-ids).\n * \n * @example arn:aws:ecs:us-west-1:123456789123:task/10838bed-421f-43ef-870a-f43feacbbb5b\n * @example arn:aws:ecs:us-west-1:123456789123:task/my-cluster/task-id/23ebb8ac-c18f-46c6-8bbe-d55d0e37cfbd\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_TASK_ARN = 'aws.ecs.task.arn' as const;\n\n/**\n * The family name of the [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html) used to create the ECS task.\n * \n * @example opentelemetry-family\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_TASK_FAMILY = 'aws.ecs.task.family' as const;\n\n/**\n * The revision for the task definition used to create the ECS task.\n * \n * @example 8\n * @example 26\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_ECS_TASK_REVISION = 'aws.ecs.task.revision' as const;\n\n/**\n * The ARN of an EKS cluster.\n * \n * @example arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_EKS_CLUSTER_ARN = 'aws.eks.cluster.arn' as const;\n\n/**\n * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n * \n * @example arn:aws:lambda:us-east-1:123456:function:myfunction:myalias\n * \n * @note This may be different from `cloud.resource_id` if an alias is involved.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_LAMBDA_INVOKED_ARN = 'aws.lambda.invoked_arn' as const;\n\n/**\n * The Amazon Resource Name(s) (ARN) of the AWS log group(s).\n * \n * @example [\"arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:*\"]\n * \n * @note See the [log group ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_LOG_GROUP_ARNS = 'aws.log.group.arns' as const;\n\n/**\n * The name(s) of the AWS log group(s) an application is writing to.\n * \n * @example [\"/aws/lambda/my-function\", \"opentelemetry-service\"]\n * \n * @note Multiple log groups must be supported for cases like multi-container applications, where a single application has sidecar containers, and each write to their own log group.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_LOG_GROUP_NAMES = 'aws.log.group.names' as const;\n\n/**\n * The ARN(s) of the AWS log stream(s).\n * \n * @example [\"arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:log-stream:logs/main/10838bed-421f-43ef-870a-f43feacbbb5b\"]\n * \n * @note See the [log stream ARN format documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-access-control-overview-cwl.html#CWL_ARN_Format). One log group can contain several log streams, so these ARNs necessarily identify both a log group and a log stream.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_LOG_STREAM_ARNS = 'aws.log.stream.arns' as const;\n\n/**\n * The name(s) of the AWS log stream(s) an application is writing to.\n * \n * @example [\"logs/main/10838bed-421f-43ef-870a-f43feacbbb5b\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_LOG_STREAM_NAMES = 'aws.log.stream.names' as const;\n\n/**\n * The AWS request ID as returned in the response headers `x-amz-request-id` or `x-amz-requestid`.\n * \n * @example 79b9da39-b7ae-508a-a6bc-864b2829c622\n * @example C9ER4AJX75574TDJ\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_REQUEST_ID = 'aws.request_id' as const;\n\n/**\n * The S3 bucket name the request refers to. Corresponds to the `--bucket` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.\n * \n * @example some-bucket-name\n * \n * @note The `bucket` attribute is applicable to all S3 operations that reference a bucket, i.e. that require the bucket name as a mandatory parameter.\n * This applies to almost all S3 operations except `list-buckets`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_BUCKET = 'aws.s3.bucket' as const;\n\n/**\n * The source object (in the form `bucket`/`key`) for the copy operation.\n * \n * @example someFile.yml\n * \n * @note The `copy_source` attribute applies to S3 copy operations and corresponds to the `--copy-source` parameter\n * of the [copy-object operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html).\n * This applies in particular to the following operations:\n * \n *   - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_COPY_SOURCE = 'aws.s3.copy_source' as const;\n\n/**\n * The delete request container that specifies the objects to be deleted.\n * \n * @example Objects=[{Key=string,VersionId=string},{Key=string,VersionId=string}],Quiet=boolean\n * \n * @note The `delete` attribute is only applicable to the [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html) operation.\n * The `delete` attribute corresponds to the `--delete` parameter of the\n * [delete-objects operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-objects.html).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_DELETE = 'aws.s3.delete' as const;\n\n/**\n * The S3 object key the request refers to. Corresponds to the `--key` parameter of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) operations.\n * \n * @example someFile.yml\n * \n * @note The `key` attribute is applicable to all object-related S3 operations, i.e. that require the object key as a mandatory parameter.\n * This applies in particular to the following operations:\n * \n *   - [copy-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/copy-object.html)\n *   - [delete-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/delete-object.html)\n *   - [get-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/get-object.html)\n *   - [head-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/head-object.html)\n *   - [put-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/put-object.html)\n *   - [restore-object](https://docs.aws.amazon.com/cli/latest/reference/s3api/restore-object.html)\n *   - [select-object-content](https://docs.aws.amazon.com/cli/latest/reference/s3api/select-object-content.html)\n *   - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)\n *   - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)\n *   - [create-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/create-multipart-upload.html)\n *   - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)\n *   - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_KEY = 'aws.s3.key' as const;\n\n/**\n * The part number of the part being uploaded in a multipart-upload operation. This is a positive integer between 1 and 10,000.\n * \n * @example 3456\n * \n * @note The `part_number` attribute is only applicable to the [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n * and [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html) operations.\n * The `part_number` attribute corresponds to the `--part-number` parameter of the\n * [upload-part operation within the S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_PART_NUMBER = 'aws.s3.part_number' as const;\n\n/**\n * Upload ID that identifies the multipart upload.\n * \n * @example dfRtDYWFbkRONycy.Yxwh66Yjlx.cph0gtNBtJ\n * \n * @note The `upload_id` attribute applies to S3 multipart-upload operations and corresponds to the `--upload-id` parameter\n * of the [S3 API](https://docs.aws.amazon.com/cli/latest/reference/s3api/index.html) multipart operations.\n * This applies in particular to the following operations:\n * \n *   - [abort-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/abort-multipart-upload.html)\n *   - [complete-multipart-upload](https://docs.aws.amazon.com/cli/latest/reference/s3api/complete-multipart-upload.html)\n *   - [list-parts](https://docs.aws.amazon.com/cli/latest/reference/s3api/list-parts.html)\n *   - [upload-part](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part.html)\n *   - [upload-part-copy](https://docs.aws.amazon.com/cli/latest/reference/s3api/upload-part-copy.html)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AWS_S3_UPLOAD_ID = 'aws.s3.upload_id' as const;\n\n/**\n * [Azure Resource Provider Namespace](https://learn.microsoft.com/azure/azure-resource-manager/management/azure-services-resource-providers) as recognized by the client.\n * \n * @example Microsoft.Storage\n * @example Microsoft.KeyVault\n * @example Microsoft.ServiceBus\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AZ_NAMESPACE = 'az.namespace' as const;\n\n/**\n * The unique identifier of the service request. It's generated by the Azure service and returned with the response.\n * \n * @example 00000000-0000-0000-0000-000000000000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_AZ_SERVICE_REQUEST_ID = 'az.service_request_id' as const;\n\n/**\n * Array of brand name and version separated by a space\n * \n * @example [\" Not A;Brand 99\", \"Chromium 99\", \"Chrome 99\"]\n * \n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.brands`).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_BROWSER_BRANDS = 'browser.brands' as const;\n\n/**\n * Preferred language of the user using the browser\n * \n * @example en\n * @example en-US\n * @example fr\n * @example fr-FR\n * \n * @note This value is intended to be taken from the Navigator API `navigator.language`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_BROWSER_LANGUAGE = 'browser.language' as const;\n\n/**\n * A boolean that is true if the browser is running on a mobile device\n * \n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.mobile`). If unavailable, this attribute **SHOULD** be left unset.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_BROWSER_MOBILE = 'browser.mobile' as const;\n\n/**\n * The platform on which the browser is running\n * \n * @example Windows\n * @example macOS\n * @example Android\n * \n * @note This value is intended to be taken from the [UA client hints API](https://wicg.github.io/ua-client-hints/#interface) (`navigator.userAgentData.platform`). If unavailable, the legacy `navigator.platform` API **SHOULD NOT** be used instead and this attribute **SHOULD** be left unset in order for the values to be consistent.\n * The list of possible values is defined in the [W3C User-Agent Client Hints specification](https://wicg.github.io/ua-client-hints/#sec-ch-ua-platform). Note that some (but not all) of these values can overlap with values in the [`os.type` and `os.name` attributes](./os.md). However, for consistency, the values in the `browser.platform` attribute should capture the exact value that the user agent provides.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_BROWSER_PLATFORM = 'browser.platform' as const;\n\n/**\n * The human readable name of the pipeline within a CI/CD system.\n * \n * @example Build and Test\n * @example Lint\n * @example Deploy Go Project\n * @example deploy_to_environment\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_NAME = 'cicd.pipeline.name' as const;\n\n/**\n * The unique identifier of a pipeline run within a CI/CD system.\n * \n * @example 120912\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_RUN_ID = 'cicd.pipeline.run.id' as const;\n\n/**\n * The human readable name of a task within a pipeline. Task here most closely aligns with a [computing process](https://en.wikipedia.org/wiki/Pipeline_(computing)) in a pipeline. Other terms for tasks include commands, steps, and procedures.\n * \n * @example Run GoLang Linter\n * @example Go Build\n * @example go-test\n * @example deploy_binary\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_TASK_NAME = 'cicd.pipeline.task.name' as const;\n\n/**\n * The unique identifier of a task run within a pipeline.\n * \n * @example 12097\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_TASK_RUN_ID = 'cicd.pipeline.task.run.id' as const;\n\n/**\n * The [URL](https://en.wikipedia.org/wiki/URL) of the pipeline run providing the complete address in order to locate and identify the pipeline run.\n * \n * @example https://github.com/open-telemetry/semantic-conventions/actions/runs/9753949763/job/26920038674?pr=1075\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_TASK_RUN_URL_FULL = 'cicd.pipeline.task.run.url.full' as const;\n\n/**\n * The type of the task within a pipeline.\n * \n * @example build\n * @example test\n * @example deploy\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CICD_PIPELINE_TASK_TYPE = 'cicd.pipeline.task.type' as const;\n\n/**\n  * Enum value \"build\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport const CICD_PIPELINE_TASK_TYPE_VALUE_BUILD = \"build\" as const;\n\n/**\n  * Enum value \"deploy\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport const CICD_PIPELINE_TASK_TYPE_VALUE_DEPLOY = \"deploy\" as const;\n\n/**\n  * Enum value \"test\" for attribute {@link ATTR_CICD_PIPELINE_TASK_TYPE}.\n  */\nexport const CICD_PIPELINE_TASK_TYPE_VALUE_TEST = \"test\" as const;\n\n/**\n * The cloud account ID the resource is assigned to.\n * \n * @example 111111111111\n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_ACCOUNT_ID = 'cloud.account.id' as const;\n\n/**\n * Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.\n * \n * @example us-east-1c\n * \n * @note Availability zones are called \"zones\" on Alibaba Cloud and Google Cloud.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_AVAILABILITY_ZONE = 'cloud.availability_zone' as const;\n\n/**\n * The cloud platform in use.\n * \n * @note The prefix of the service **SHOULD** match the one specified in `cloud.provider`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_PLATFORM = 'cloud.platform' as const;\n\n/**\n  * Enum value \"alibaba_cloud_ecs\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_ECS = \"alibaba_cloud_ecs\" as const;\n\n/**\n  * Enum value \"alibaba_cloud_fc\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_FC = \"alibaba_cloud_fc\" as const;\n\n/**\n  * Enum value \"alibaba_cloud_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_ALIBABA_CLOUD_OPENSHIFT = \"alibaba_cloud_openshift\" as const;\n\n/**\n  * Enum value \"aws_app_runner\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_APP_RUNNER = \"aws_app_runner\" as const;\n\n/**\n  * Enum value \"aws_ec2\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_EC2 = \"aws_ec2\" as const;\n\n/**\n  * Enum value \"aws_ecs\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_ECS = \"aws_ecs\" as const;\n\n/**\n  * Enum value \"aws_eks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_EKS = \"aws_eks\" as const;\n\n/**\n  * Enum value \"aws_elastic_beanstalk\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_ELASTIC_BEANSTALK = \"aws_elastic_beanstalk\" as const;\n\n/**\n  * Enum value \"aws_lambda\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_LAMBDA = \"aws_lambda\" as const;\n\n/**\n  * Enum value \"aws_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AWS_OPENSHIFT = \"aws_openshift\" as const;\n\n/**\n  * Enum value \"azure_aks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_AKS = \"azure_aks\" as const;\n\n/**\n  * Enum value \"azure_app_service\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_APP_SERVICE = \"azure_app_service\" as const;\n\n/**\n  * Enum value \"azure_container_apps\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_APPS = \"azure_container_apps\" as const;\n\n/**\n  * Enum value \"azure_container_instances\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_CONTAINER_INSTANCES = \"azure_container_instances\" as const;\n\n/**\n  * Enum value \"azure_functions\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_FUNCTIONS = \"azure_functions\" as const;\n\n/**\n  * Enum value \"azure_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_OPENSHIFT = \"azure_openshift\" as const;\n\n/**\n  * Enum value \"azure_vm\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_AZURE_VM = \"azure_vm\" as const;\n\n/**\n  * Enum value \"gcp_app_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_APP_ENGINE = \"gcp_app_engine\" as const;\n\n/**\n  * Enum value \"gcp_bare_metal_solution\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_BARE_METAL_SOLUTION = \"gcp_bare_metal_solution\" as const;\n\n/**\n  * Enum value \"gcp_cloud_functions\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_CLOUD_FUNCTIONS = \"gcp_cloud_functions\" as const;\n\n/**\n  * Enum value \"gcp_cloud_run\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_CLOUD_RUN = \"gcp_cloud_run\" as const;\n\n/**\n  * Enum value \"gcp_compute_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_COMPUTE_ENGINE = \"gcp_compute_engine\" as const;\n\n/**\n  * Enum value \"gcp_kubernetes_engine\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_KUBERNETES_ENGINE = \"gcp_kubernetes_engine\" as const;\n\n/**\n  * Enum value \"gcp_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_GCP_OPENSHIFT = \"gcp_openshift\" as const;\n\n/**\n  * Enum value \"ibm_cloud_openshift\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_IBM_CLOUD_OPENSHIFT = \"ibm_cloud_openshift\" as const;\n\n/**\n  * Enum value \"tencent_cloud_cvm\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_CVM = \"tencent_cloud_cvm\" as const;\n\n/**\n  * Enum value \"tencent_cloud_eks\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_EKS = \"tencent_cloud_eks\" as const;\n\n/**\n  * Enum value \"tencent_cloud_scf\" for attribute {@link ATTR_CLOUD_PLATFORM}.\n  */\nexport const CLOUD_PLATFORM_VALUE_TENCENT_CLOUD_SCF = \"tencent_cloud_scf\" as const;\n\n/**\n * Name of the cloud provider.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_PROVIDER = 'cloud.provider' as const;\n\n/**\n  * Enum value \"alibaba_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_ALIBABA_CLOUD = \"alibaba_cloud\" as const;\n\n/**\n  * Enum value \"aws\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_AWS = \"aws\" as const;\n\n/**\n  * Enum value \"azure\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_AZURE = \"azure\" as const;\n\n/**\n  * Enum value \"gcp\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_GCP = \"gcp\" as const;\n\n/**\n  * Enum value \"heroku\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_HEROKU = \"heroku\" as const;\n\n/**\n  * Enum value \"ibm_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_IBM_CLOUD = \"ibm_cloud\" as const;\n\n/**\n  * Enum value \"tencent_cloud\" for attribute {@link ATTR_CLOUD_PROVIDER}.\n  */\nexport const CLOUD_PROVIDER_VALUE_TENCENT_CLOUD = \"tencent_cloud\" as const;\n\n/**\n * The geographical region the resource is running.\n * \n * @example us-central1\n * @example us-east-1\n * \n * @note Refer to your provider's docs to see the available regions, for example [Alibaba Cloud regions](https://www.alibabacloud.com/help/doc-detail/40654.htm), [AWS regions](https://aws.amazon.com/about-aws/global-infrastructure/regions_az/), [Azure regions](https://azure.microsoft.com/global-infrastructure/geographies/), [Google Cloud regions](https://cloud.google.com/about/locations), or [Tencent Cloud regions](https://www.tencentcloud.com/document/product/213/6091).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_REGION = 'cloud.region' as const;\n\n/**\n * Cloud provider-specific native identifier of the monitored cloud resource (e.g. an [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) on AWS, a [fully qualified resource ID](https://learn.microsoft.com/rest/api/resources/resources/get-by-id) on Azure, a [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name) on GCP)\n * \n * @example arn:aws:lambda:REGION:ACCOUNT_ID:function:my-function\n * @example //run.googleapis.com/projects/PROJECT_ID/locations/LOCATION_ID/services/SERVICE_ID\n * @example /subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>\n * \n * @note On some cloud providers, it may not be possible to determine the full ID at startup,\n * so it may be necessary to set `cloud.resource_id` as a span attribute instead.\n * \n * The exact value to use for `cloud.resource_id` depends on the cloud provider.\n * The following well-known definitions **MUST** be used if you set this attribute and they apply:\n * \n *   - **AWS Lambda:** The function [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html).\n *     Take care not to use the \"invoked ARN\" directly but replace any\n *     [alias suffix](https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html)\n *     with the resolved function version, as the same runtime instance may be invocable with\n *     multiple different aliases.\n *   - **GCP:** The [URI of the resource](https://cloud.google.com/iam/docs/full-resource-names)\n *   - **Azure:** The [Fully Qualified Resource ID](https://docs.microsoft.com/rest/api/resources/resources/get-by-id) of the invoked function,\n *     *not* the function app, having the form\n *     `/subscriptions/<SUBSCRIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>`.\n *     This means that a span attribute **MUST** be used, as an Azure function app can host multiple functions that would usually share\n *     a TracerProvider.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUD_RESOURCE_ID = 'cloud.resource_id' as const;\n\n/**\n * The [event_id](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#id) uniquely identifies the event.\n * \n * @example 123e4567-e89b-12d3-a456-426614174000\n * @example 0001\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDEVENTS_EVENT_ID = 'cloudevents.event_id' as const;\n\n/**\n * The [source](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#source-1) identifies the context in which an event happened.\n * \n * @example https://github.com/cloudevents\n * @example /cloudevents/spec/pull/123\n * @example my-service\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDEVENTS_EVENT_SOURCE = 'cloudevents.event_source' as const;\n\n/**\n * The [version of the CloudEvents specification](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#specversion) which the event uses.\n * \n * @example \"1.0\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDEVENTS_EVENT_SPEC_VERSION = 'cloudevents.event_spec_version' as const;\n\n/**\n * The [subject](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#subject) of the event in the context of the event producer (identified by source).\n * \n * @example \"mynewfile.jpg\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDEVENTS_EVENT_SUBJECT = 'cloudevents.event_subject' as const;\n\n/**\n * The [event_type](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#type) contains a value describing the type of event related to the originating occurrence.\n * \n * @example com.github.pull_request.opened\n * @example com.example.object.deleted.v2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDEVENTS_EVENT_TYPE = 'cloudevents.event_type' as const;\n\n/**\n * The guid of the application.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.application_id`. This is the same value as\n * reported by `cf app <app-name> --guid`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_APP_ID = 'cloudfoundry.app.id' as const;\n\n/**\n * The index of the application instance. 0 when just one instance is active.\n * \n * @example 0\n * @example 1\n * \n * @note CloudFoundry defines the `instance_id` in the [Loggegator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the application instance index for applications\n * deployed on the runtime.\n * \n * Application instrumentation should use the value from environment\n * variable `CF_INSTANCE_INDEX`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_APP_INSTANCE_ID = 'cloudfoundry.app.instance.id' as const;\n\n/**\n * The name of the application.\n * \n * @example my-app-name\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.application_name`. This is the same value\n * as reported by `cf apps`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_APP_NAME = 'cloudfoundry.app.name' as const;\n\n/**\n * The guid of the CloudFoundry org the application is running in.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.org_id`. This is the same value as\n * reported by `cf org <org-name> --guid`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_ORG_ID = 'cloudfoundry.org.id' as const;\n\n/**\n * The name of the CloudFoundry organization the app is running in.\n * \n * @example my-org-name\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.org_name`. This is the same value as\n * reported by `cf orgs`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_ORG_NAME = 'cloudfoundry.org.name' as const;\n\n/**\n * The UID identifying the process.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.process_id`. It is supposed to be equal to\n * `VCAP_APPLICATION.app_id` for applications deployed to the runtime.\n * For system components, this could be the actual PID.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_PROCESS_ID = 'cloudfoundry.process.id' as const;\n\n/**\n * The type of process.\n * \n * @example web\n * \n * @note CloudFoundry applications can consist of multiple jobs. Usually the\n * main process will be of type `web`. There can be additional background\n * tasks or side-cars with different process types.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_PROCESS_TYPE = 'cloudfoundry.process.type' as const;\n\n/**\n * The guid of the CloudFoundry space the application is running in.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.space_id`. This is the same value as\n * reported by `cf space <space-name> --guid`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_SPACE_ID = 'cloudfoundry.space.id' as const;\n\n/**\n * The name of the CloudFoundry space the application is running in.\n * \n * @example my-space-name\n * \n * @note Application instrumentation should use the value from environment\n * variable `VCAP_APPLICATION.space_name`. This is the same value as\n * reported by `cf spaces`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_SPACE_NAME = 'cloudfoundry.space.name' as const;\n\n/**\n * A guid or another name describing the event source.\n * \n * @example cf/gorouter\n * \n * @note CloudFoundry defines the `source_id` in the [Loggregator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the component name, e.g. \"gorouter\", for\n * CloudFoundry components.\n * \n * When system components are instrumented, values from the\n * [Bosh spec](https://bosh.io/docs/jobs/#properties-spec)\n * should be used. The `system.id` should be set to\n * `spec.deployment/spec.name`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_SYSTEM_ID = 'cloudfoundry.system.id' as const;\n\n/**\n * A guid describing the concrete instance of the event source.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note CloudFoundry defines the `instance_id` in the [Loggregator v2 envelope](https://github.com/cloudfoundry/loggregator-api#v2-envelope).\n * It is used for logs and metrics emitted by CloudFoundry. It is\n * supposed to contain the vm id for CloudFoundry components.\n * \n * When system components are instrumented, values from the\n * [Bosh spec](https://bosh.io/docs/jobs/#properties-spec)\n * should be used. The `system.instance.id` should be set to `spec.id`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CLOUDFOUNDRY_SYSTEM_INSTANCE_ID = 'cloudfoundry.system.instance.id' as const;\n\n/**\n * The column number in `code.filepath` best representing the operation. It **SHOULD** point within the code unit named in `code.function`.\n * \n * @example 16\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_COLUMN = 'code.column' as const;\n\n/**\n * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n * \n * @example \"/usr/local/MyApplication/content_root/app/index.php\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_FILEPATH = 'code.filepath' as const;\n\n/**\n * The method or function name, or equivalent (usually rightmost part of the code unit's name).\n * \n * @example \"serveRequest\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_FUNCTION = 'code.function' as const;\n\n/**\n * The line number in `code.filepath` best representing the operation. It **SHOULD** point within the code unit named in `code.function`.\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_LINENO = 'code.lineno' as const;\n\n/**\n * The \"namespace\" within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n * \n * @example \"com.example.MyHttpService\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_NAMESPACE = 'code.namespace' as const;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n * \n * @example \"at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CODE_STACKTRACE = 'code.stacktrace' as const;\n\n/**\n * The command used to run the container (i.e. the command name).\n * \n * @example otelcontribcol\n * \n * @note If using embedded credentials or sensitive data, it is recommended to remove them to prevent potential leakage.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_COMMAND = 'container.command' as const;\n\n/**\n * All the command arguments (including the command/executable itself) run by the container.\n * \n * @example [\"otelcontribcol\", \"--config\", \"config.yaml\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_COMMAND_ARGS = 'container.command_args' as const;\n\n/**\n * The full command run by the container as a single string representing the full command.\n * \n * @example otelcontribcol --config config.yaml\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_COMMAND_LINE = 'container.command_line' as const;\n\n/**\n * Deprecated, use `cpu.mode` instead.\n * \n * @example user\n * @example kernel\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `cpu.mode`\n */\nexport const ATTR_CONTAINER_CPU_STATE = 'container.cpu.state' as const;\n\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport const CONTAINER_CPU_STATE_VALUE_KERNEL = \"kernel\" as const;\n\n/**\n  * Enum value \"system\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport const CONTAINER_CPU_STATE_VALUE_SYSTEM = \"system\" as const;\n\n/**\n  * Enum value \"user\" for attribute {@link ATTR_CONTAINER_CPU_STATE}.\n  */\nexport const CONTAINER_CPU_STATE_VALUE_USER = \"user\" as const;\n\n/**\n * The name of the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin used by the volume.\n * \n * @example pd.csi.storage.gke.io\n * \n * @note This can sometimes be referred to as a \"driver\" in CSI implementations. This should represent the `name` field of the GetPluginInfo RPC.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_CSI_PLUGIN_NAME = 'container.csi.plugin.name' as const;\n\n/**\n * The unique volume ID returned by the CSI ([Container Storage Interface](https://github.com/container-storage-interface/spec)) plugin.\n * \n * @example projects/my-gcp-project/zones/my-gcp-zone/disks/my-gcp-disk\n * \n * @note This can sometimes be referred to as a \"volume handle\" in CSI implementations. This should represent the `Volume.volume_id` field in CSI spec.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_CSI_VOLUME_ID = 'container.csi.volume.id' as const;\n\n/**\n * Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/containers/run/#container-identification). The UUID might be abbreviated.\n * \n * @example a3bf90e006b2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_ID = 'container.id' as const;\n\n/**\n * Runtime specific image identifier. Usually a hash algorithm followed by a UUID.\n * \n * @example sha256:19c92d0a00d1b66d897bceaa7319bee0dd38a10a851c60bcec9474aa3f01e50f\n * \n * @note Docker defines a sha256 of the image id; `container.image.id` corresponds to the `Image` field from the Docker container inspect [API](https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerInspect) endpoint.\n * K8s defines a link to the container registry repository with digest `\"imageID\": \"registry.azurecr.io /namespace/service/dockerfile@sha256:bdeabd40c3a8a492eaf9e8e44d0ebbb84bac7ee25ac0cf8a7159d25f62555625\"`.\n * The ID is assigned by the container runtime and can vary in different environments. Consider using `oci.manifest.digest` if it is important to identify the same image in different environments/runtimes.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_IMAGE_ID = 'container.image.id' as const;\n\n/**\n * Name of the image the container was built on.\n * \n * @example gcr.io/opentelemetry/operator\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_IMAGE_NAME = 'container.image.name' as const;\n\n/**\n * Repo digests of the container image as provided by the container runtime.\n * \n * @example [\"example@sha256:afcc7f1ac1b49db317a7196c902e61c6c3c4607d63599ee1a82d702d249a0ccb\", \"internal.registry.example.com:5000/example@sha256:b69959407d21e8a062e0416bf13405bb2b71ed7a84dde4158ebafacfa06f5578\"]\n * \n * @note [Docker](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect) and [CRI](https://github.com/kubernetes/cri-api/blob/c75ef5b473bbe2d0a4fc92f82235efd665ea8e9f/pkg/apis/runtime/v1/api.proto#L1237-L1238) report those under the `RepoDigests` field.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_IMAGE_REPO_DIGESTS = 'container.image.repo_digests' as const;\n\n/**\n * Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.\n * \n * @example [\"v1.27.1\", \"3.5.7-0\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_IMAGE_TAGS = 'container.image.tags' as const;\n\n/**\n * Container labels, `<key>` being the label name, the value being the label value.\n * \n * @example container.label.app=nginx\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_LABEL = (key: string) => `container.label.${key}`;\n\n/**\n * Deprecated, use `container.label` instead.\n * \n * @example container.label.app=nginx\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `container.label`.\n */\nexport const ATTR_CONTAINER_LABELS = (key: string) => `container.labels.${key}`;\n\n/**\n * Container name used by container runtime.\n * \n * @example opentelemetry-autoconf\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_NAME = 'container.name' as const;\n\n/**\n * The container runtime managing this container.\n * \n * @example docker\n * @example containerd\n * @example rkt\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CONTAINER_RUNTIME = 'container.runtime' as const;\n\n/**\n * The mode of the CPU\n * \n * @example user\n * @example system\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_CPU_MODE = 'cpu.mode' as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_IDLE = \"idle\" as const;\n\n/**\n  * Enum value \"interrupt\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_INTERRUPT = \"interrupt\" as const;\n\n/**\n  * Enum value \"iowait\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_IOWAIT = \"iowait\" as const;\n\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_KERNEL = \"kernel\" as const;\n\n/**\n  * Enum value \"nice\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_NICE = \"nice\" as const;\n\n/**\n  * Enum value \"steal\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_STEAL = \"steal\" as const;\n\n/**\n  * Enum value \"system\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_SYSTEM = \"system\" as const;\n\n/**\n  * Enum value \"user\" for attribute {@link ATTR_CPU_MODE}.\n  */\nexport const CPU_MODE_VALUE_USER = \"user\" as const;\n\n/**\n * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL = 'db.cassandra.consistency_level' as const;\n\n/**\n  * Enum value \"all\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ALL = \"all\" as const;\n\n/**\n  * Enum value \"any\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ANY = \"any\" as const;\n\n/**\n  * Enum value \"each_quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_EACH_QUORUM = \"each_quorum\" as const;\n\n/**\n  * Enum value \"local_one\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_ONE = \"local_one\" as const;\n\n/**\n  * Enum value \"local_quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_QUORUM = \"local_quorum\" as const;\n\n/**\n  * Enum value \"local_serial\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_LOCAL_SERIAL = \"local_serial\" as const;\n\n/**\n  * Enum value \"one\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_ONE = \"one\" as const;\n\n/**\n  * Enum value \"quorum\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_QUORUM = \"quorum\" as const;\n\n/**\n  * Enum value \"serial\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_SERIAL = \"serial\" as const;\n\n/**\n  * Enum value \"three\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_THREE = \"three\" as const;\n\n/**\n  * Enum value \"two\" for attribute {@link ATTR_DB_CASSANDRA_CONSISTENCY_LEVEL}.\n  */\nexport const DB_CASSANDRA_CONSISTENCY_LEVEL_VALUE_TWO = \"two\" as const;\n\n/**\n * The data center of the coordinating node for a query.\n * \n * @example \"us-west-2\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_COORDINATOR_DC = 'db.cassandra.coordinator.dc' as const;\n\n/**\n * The ID of the coordinating node for a query.\n * \n * @example \"be13faa2-8574-4d71-926d-27f16cf8a7af\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_COORDINATOR_ID = 'db.cassandra.coordinator.id' as const;\n\n/**\n * Whether or not the query is idempotent.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_IDEMPOTENCE = 'db.cassandra.idempotence' as const;\n\n/**\n * The fetch size used for paging, i.e. how many rows will be returned at once.\n * \n * @example 5000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_PAGE_SIZE = 'db.cassandra.page_size' as const;\n\n/**\n * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n * \n * @example 0\n * @example 2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT = 'db.cassandra.speculative_execution_count' as const;\n\n/**\n * Deprecated, use `db.collection.name` instead.\n * \n * @example \"mytable\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.collection.name`.\n */\nexport const ATTR_DB_CASSANDRA_TABLE = 'db.cassandra.table' as const;\n\n/**\n * The name of the connection pool; unique within the instrumented application. In case the connection pool implementation doesn't provide a name, instrumentation **SHOULD** use a combination of parameters that would make the name unique, for example, combining attributes `server.address`, `server.port`, and `db.namespace`, formatted as `server.address:server.port/db.namespace`. Instrumentations that generate connection pool name following different patterns **SHOULD** document it.\n * \n * @example myDataSource\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CLIENT_CONNECTION_POOL_NAME = 'db.client.connection.pool.name' as const;\n\n/**\n * The state of a connection in the pool\n * \n * @example idle\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_CLIENT_CONNECTION_STATE = 'db.client.connection.state' as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_DB_CLIENT_CONNECTION_STATE}.\n  */\nexport const DB_CLIENT_CONNECTION_STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_DB_CLIENT_CONNECTION_STATE}.\n  */\nexport const DB_CLIENT_CONNECTION_STATE_VALUE_USED = \"used\" as const;\n\n/**\n * Deprecated, use `db.client.connection.pool.name` instead.\n * \n * @example myDataSource\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.client.connection.pool.name`.\n */\nexport const ATTR_DB_CLIENT_CONNECTIONS_POOL_NAME = 'db.client.connections.pool.name' as const;\n\n/**\n * Deprecated, use `db.client.connection.state` instead.\n * \n * @example idle\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.client.connection.state`.\n */\nexport const ATTR_DB_CLIENT_CONNECTIONS_STATE = 'db.client.connections.state' as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_DB_CLIENT_CONNECTIONS_STATE}.\n  */\nexport const DB_CLIENT_CONNECTIONS_STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_DB_CLIENT_CONNECTIONS_STATE}.\n  */\nexport const DB_CLIENT_CONNECTIONS_STATE_VALUE_USED = \"used\" as const;\n\n/**\n * The name of a collection (table, container) within the database.\n * \n * @example public.users\n * @example customers\n * \n * @note It is **RECOMMENDED** to capture the value as provided by the application without attempting to do any case normalization.\n * If the collection name is parsed from the query text, it **SHOULD** be the first collection name found in the query and it **SHOULD** match the value provided in the query text including any schema and database name prefix.\n * For batch operations, if the individual operations are known to have the same collection name then that collection name **SHOULD** be used, otherwise `db.collection.name` **SHOULD NOT** be captured.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COLLECTION_NAME = 'db.collection.name' as const;\n\n/**\n * Deprecated, use `server.address`, `server.port` attributes instead.\n * \n * @example \"Server=(localdb)\\\\v11.0;Integrated Security=true;\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.address` and `server.port`.\n */\nexport const ATTR_DB_CONNECTION_STRING = 'db.connection_string' as const;\n\n/**\n * Unique Cosmos client instance id.\n * \n * @example \"3ba4827d-4422-483f-b59f-85b74211c11d\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_CLIENT_ID = 'db.cosmosdb.client_id' as const;\n\n/**\n * Cosmos client connection mode.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_CONNECTION_MODE = 'db.cosmosdb.connection_mode' as const;\n\n/**\n  * Enum value \"direct\" for attribute {@link ATTR_DB_COSMOSDB_CONNECTION_MODE}.\n  */\nexport const DB_COSMOSDB_CONNECTION_MODE_VALUE_DIRECT = \"direct\" as const;\n\n/**\n  * Enum value \"gateway\" for attribute {@link ATTR_DB_COSMOSDB_CONNECTION_MODE}.\n  */\nexport const DB_COSMOSDB_CONNECTION_MODE_VALUE_GATEWAY = \"gateway\" as const;\n\n/**\n * Deprecated, use `db.collection.name` instead.\n * \n * @example \"mytable\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.collection.name`.\n */\nexport const ATTR_DB_COSMOSDB_CONTAINER = 'db.cosmosdb.container' as const;\n\n/**\n * Cosmos DB Operation Type.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_OPERATION_TYPE = 'db.cosmosdb.operation_type' as const;\n\n/**\n  * Enum value \"batch\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_BATCH = \"batch\" as const;\n\n/**\n  * Enum value \"create\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_CREATE = \"create\" as const;\n\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_DELETE = \"delete\" as const;\n\n/**\n  * Enum value \"execute\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE = \"execute\" as const;\n\n/**\n  * Enum value \"execute_javascript\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_EXECUTE_JAVASCRIPT = \"execute_javascript\" as const;\n\n/**\n  * Enum value \"head\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD = \"head\" as const;\n\n/**\n  * Enum value \"head_feed\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_HEAD_FEED = \"head_feed\" as const;\n\n/**\n  * Enum value \"invalid\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_INVALID = \"invalid\" as const;\n\n/**\n  * Enum value \"patch\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_PATCH = \"patch\" as const;\n\n/**\n  * Enum value \"query\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY = \"query\" as const;\n\n/**\n  * Enum value \"query_plan\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_QUERY_PLAN = \"query_plan\" as const;\n\n/**\n  * Enum value \"read\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_READ = \"read\" as const;\n\n/**\n  * Enum value \"read_feed\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_READ_FEED = \"read_feed\" as const;\n\n/**\n  * Enum value \"replace\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_REPLACE = \"replace\" as const;\n\n/**\n  * Enum value \"upsert\" for attribute {@link ATTR_DB_COSMOSDB_OPERATION_TYPE}.\n  */\nexport const DB_COSMOSDB_OPERATION_TYPE_VALUE_UPSERT = \"upsert\" as const;\n\n/**\n * RU consumed for that operation\n * \n * @example 46.18\n * @example 1.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_REQUEST_CHARGE = 'db.cosmosdb.request_charge' as const;\n\n/**\n * Request payload size in bytes\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_REQUEST_CONTENT_LENGTH = 'db.cosmosdb.request_content_length' as const;\n\n/**\n * Deprecated, use `db.response.status_code` instead.\n * \n * @example 200\n * @example 201\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.response.status_code`.\n */\nexport const ATTR_DB_COSMOSDB_STATUS_CODE = 'db.cosmosdb.status_code' as const;\n\n/**\n * Cosmos DB sub status code.\n * \n * @example 1000\n * @example 1002\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_COSMOSDB_SUB_STATUS_CODE = 'db.cosmosdb.sub_status_code' as const;\n\n/**\n * Deprecated, use `db.namespace` instead.\n * \n * @example e9106fc68e3044f0b1475b04bf4ffd5f\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.namespace`.\n */\nexport const ATTR_DB_ELASTICSEARCH_CLUSTER_NAME = 'db.elasticsearch.cluster.name' as const;\n\n/**\n * Represents the human-readable identifier of the node/instance to which a request was routed.\n * \n * @example instance-0000000001\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_ELASTICSEARCH_NODE_NAME = 'db.elasticsearch.node.name' as const;\n\n/**\n * A dynamic value in the url path.\n * \n * @example db.elasticsearch.path_parts.index=test-index\n * @example db.elasticsearch.path_parts.doc_id=123\n * \n * @note Many Elasticsearch url paths allow dynamic values. These **SHOULD** be recorded in span attributes in the format `db.elasticsearch.path_parts.<key>`, where `<key>` is the url path part name. The implementation **SHOULD** reference the [elasticsearch schema](https://raw.githubusercontent.com/elastic/elasticsearch-specification/main/output/schema/schema.json) in order to map the path part values to their names.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_ELASTICSEARCH_PATH_PARTS = (key: string) => `db.elasticsearch.path_parts.${key}`;\n\n/**\n * Deprecated, no general replacement at this time. For Elasticsearch, use `db.elasticsearch.node.name` instead.\n * \n * @example \"mysql-e26b99z.example.com\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Deprecated, no general replacement at this time. For Elasticsearch, use `db.elasticsearch.node.name` instead.\n */\nexport const ATTR_DB_INSTANCE_ID = 'db.instance.id' as const;\n\n/**\n * Removed, no replacement at this time.\n * \n * @example org.postgresql.Driver\n * @example com.microsoft.sqlserver.jdbc.SQLServerDriver\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Removed as not used.\n */\nexport const ATTR_DB_JDBC_DRIVER_CLASSNAME = 'db.jdbc.driver_classname' as const;\n\n/**\n * Deprecated, use `db.collection.name` instead.\n * \n * @example \"mytable\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.collection.name`.\n */\nexport const ATTR_DB_MONGODB_COLLECTION = 'db.mongodb.collection' as const;\n\n/**\n * Deprecated, SQL Server instance is now populated as a part of `db.namespace` attribute.\n * \n * @example \"MSSQLSERVER\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Deprecated, no replacement at this time.\n */\nexport const ATTR_DB_MSSQL_INSTANCE_NAME = 'db.mssql.instance_name' as const;\n\n/**\n * Deprecated, use `db.namespace` instead.\n * \n * @example customers\n * @example main\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.namespace`.\n */\nexport const ATTR_DB_NAME = 'db.name' as const;\n\n/**\n * The name of the database, fully qualified within the server address and port.\n * \n * @example customers\n * @example test.users\n * \n * @note If a database system has multiple namespace components, they **SHOULD** be concatenated (potentially using database system specific conventions) from most general to most specific namespace component, and more specific namespaces **SHOULD NOT** be captured without the more general namespaces, to ensure that \"startswith\" queries for the more general namespaces will be valid.\n * Semantic conventions for individual database systems **SHOULD** document what `db.namespace` means in the context of that system.\n * It is **RECOMMENDED** to capture the value as provided by the application without attempting to do any case normalization.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_NAMESPACE = 'db.namespace' as const;\n\n/**\n * Deprecated, use `db.operation.name` instead.\n * \n * @example findAndModify\n * @example HMSET\n * @example SELECT\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.operation.name`.\n */\nexport const ATTR_DB_OPERATION = 'db.operation' as const;\n\n/**\n * The number of queries included in a batch operation.\n * \n * @example 2\n * @example 3\n * @example 4\n * \n * @note Operations are only considered batches when they contain two or more operations, and so `db.operation.batch.size` **SHOULD** never be `1`.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_OPERATION_BATCH_SIZE = 'db.operation.batch.size' as const;\n\n/**\n * The name of the operation or command being executed.\n * \n * @example findAndModify\n * @example HMSET\n * @example SELECT\n * \n * @note It is **RECOMMENDED** to capture the value as provided by the application without attempting to do any case normalization.\n * If the operation name is parsed from the query text, it **SHOULD** be the first operation name found in the query.\n * For batch operations, if the individual operations are known to have the same operation name then that operation name **SHOULD** be used prepended by `BATCH `, otherwise `db.operation.name` **SHOULD** be `BATCH` or some other database system specific term if more applicable.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_OPERATION_NAME = 'db.operation.name' as const;\n\n/**\n * A query parameter used in `db.query.text`, with `<key>` being the parameter name, and the attribute value being a string representation of the parameter value.\n * \n * @example someval\n * @example 55\n * \n * @note Query parameters should only be captured when `db.query.text` is parameterized with placeholders.\n * If a parameter has no name and instead is referenced only by index, then `<key>` **SHOULD** be the 0-based index.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_QUERY_PARAMETER = (key: string) => `db.query.parameter.${key}`;\n\n/**\n * The database query being executed.\n * \n * @example SELECT * FROM wuser_table where username = ?\n * @example SET mykey \"WuValue\"\n * \n * @note For sanitization see [Sanitization of `db.query.text`](../../docs/database/database-spans.md#sanitization-of-dbquerytext).\n * For batch operations, if the individual operations are known to have the same query text then that query text **SHOULD** be used, otherwise all of the individual query texts **SHOULD** be concatenated with separator `; ` or some other database system specific separator if more applicable.\n * Even though parameterized query text can potentially have sensitive data, by using a parameterized query the user is giving a strong signal that any sensitive data will be passed as parameter values, and the benefit to observability of capturing the static part of the query text by default outweighs the risk.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_QUERY_TEXT = 'db.query.text' as const;\n\n/**\n * Deprecated, use `db.namespace` instead.\n * \n * @example 0\n * @example 1\n * @example 15\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.namespace`.\n */\nexport const ATTR_DB_REDIS_DATABASE_INDEX = 'db.redis.database_index' as const;\n\n/**\n * Database response status code.\n * \n * @example 102\n * @example ORA-17002\n * @example 08P01\n * @example 404\n * \n * @note The status code returned by the database. Usually it represents an error code, but may also represent partial success, warning, or differentiate between various types of successful outcomes.\n * Semantic conventions for individual database systems **SHOULD** document what `db.response.status_code` means in the context of that system.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_RESPONSE_STATUS_CODE = 'db.response.status_code' as const;\n\n/**\n * Deprecated, use `db.collection.name` instead.\n * \n * @example \"mytable\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.collection.name`.\n */\nexport const ATTR_DB_SQL_TABLE = 'db.sql.table' as const;\n\n/**\n * The database statement being executed.\n * \n * @example SELECT * FROM wuser_table\n * @example SET mykey \"WuValue\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.query.text`.\n */\nexport const ATTR_DB_STATEMENT = 'db.statement' as const;\n\n/**\n * The database management system (DBMS) product as identified by the client instrumentation.\n * \n * @note The actual DBMS may differ from the one identified by the client. For example, when using PostgreSQL client libraries to connect to a CockroachDB, the `db.system` is set to `postgresql` based on the instrumentation's best knowledge.\n * This attribute has stability level RELEASE CANDIDATE.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DB_SYSTEM = 'db.system' as const;\n\n/**\n  * Enum value \"adabas\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_ADABAS = \"adabas\" as const;\n\n/**\n  * Enum value \"cache\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_CACHE = \"cache\" as const;\n\n/**\n  * Enum value \"cassandra\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_CASSANDRA = \"cassandra\" as const;\n\n/**\n  * Enum value \"clickhouse\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_CLICKHOUSE = \"clickhouse\" as const;\n\n/**\n  * Enum value \"cloudscape\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_CLOUDSCAPE = \"cloudscape\" as const;\n\n/**\n  * Enum value \"cockroachdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_COCKROACHDB = \"cockroachdb\" as const;\n\n/**\n  * Enum value \"coldfusion\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_COLDFUSION = \"coldfusion\" as const;\n\n/**\n  * Enum value \"cosmosdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_COSMOSDB = \"cosmosdb\" as const;\n\n/**\n  * Enum value \"couchbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_COUCHBASE = \"couchbase\" as const;\n\n/**\n  * Enum value \"couchdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_COUCHDB = \"couchdb\" as const;\n\n/**\n  * Enum value \"db2\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_DB2 = \"db2\" as const;\n\n/**\n  * Enum value \"derby\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_DERBY = \"derby\" as const;\n\n/**\n  * Enum value \"dynamodb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_DYNAMODB = \"dynamodb\" as const;\n\n/**\n  * Enum value \"edb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_EDB = \"edb\" as const;\n\n/**\n  * Enum value \"elasticsearch\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_ELASTICSEARCH = \"elasticsearch\" as const;\n\n/**\n  * Enum value \"filemaker\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_FILEMAKER = \"filemaker\" as const;\n\n/**\n  * Enum value \"firebird\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_FIREBIRD = \"firebird\" as const;\n\n/**\n  * Enum value \"firstsql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_FIRSTSQL = \"firstsql\" as const;\n\n/**\n  * Enum value \"geode\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_GEODE = \"geode\" as const;\n\n/**\n  * Enum value \"h2\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_H2 = \"h2\" as const;\n\n/**\n  * Enum value \"hanadb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_HANADB = \"hanadb\" as const;\n\n/**\n  * Enum value \"hbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_HBASE = \"hbase\" as const;\n\n/**\n  * Enum value \"hive\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_HIVE = \"hive\" as const;\n\n/**\n  * Enum value \"hsqldb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_HSQLDB = \"hsqldb\" as const;\n\n/**\n  * Enum value \"influxdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INFLUXDB = \"influxdb\" as const;\n\n/**\n  * Enum value \"informix\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INFORMIX = \"informix\" as const;\n\n/**\n  * Enum value \"ingres\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INGRES = \"ingres\" as const;\n\n/**\n  * Enum value \"instantdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INSTANTDB = \"instantdb\" as const;\n\n/**\n  * Enum value \"interbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INTERBASE = \"interbase\" as const;\n\n/**\n  * Enum value \"intersystems_cache\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_INTERSYSTEMS_CACHE = \"intersystems_cache\" as const;\n\n/**\n  * Enum value \"mariadb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MARIADB = \"mariadb\" as const;\n\n/**\n  * Enum value \"maxdb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MAXDB = \"maxdb\" as const;\n\n/**\n  * Enum value \"memcached\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MEMCACHED = \"memcached\" as const;\n\n/**\n  * Enum value \"mongodb\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MONGODB = \"mongodb\" as const;\n\n/**\n  * Enum value \"mssql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MSSQL = \"mssql\" as const;\n\n/**\n  * Enum value \"mssqlcompact\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MSSQLCOMPACT = \"mssqlcompact\" as const;\n\n/**\n  * Enum value \"mysql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_MYSQL = \"mysql\" as const;\n\n/**\n  * Enum value \"neo4j\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_NEO4J = \"neo4j\" as const;\n\n/**\n  * Enum value \"netezza\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_NETEZZA = \"netezza\" as const;\n\n/**\n  * Enum value \"opensearch\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_OPENSEARCH = \"opensearch\" as const;\n\n/**\n  * Enum value \"oracle\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_ORACLE = \"oracle\" as const;\n\n/**\n  * Enum value \"other_sql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_OTHER_SQL = \"other_sql\" as const;\n\n/**\n  * Enum value \"pervasive\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_PERVASIVE = \"pervasive\" as const;\n\n/**\n  * Enum value \"pointbase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_POINTBASE = \"pointbase\" as const;\n\n/**\n  * Enum value \"postgresql\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_POSTGRESQL = \"postgresql\" as const;\n\n/**\n  * Enum value \"progress\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_PROGRESS = \"progress\" as const;\n\n/**\n  * Enum value \"redis\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_REDIS = \"redis\" as const;\n\n/**\n  * Enum value \"redshift\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_REDSHIFT = \"redshift\" as const;\n\n/**\n  * Enum value \"spanner\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_SPANNER = \"spanner\" as const;\n\n/**\n  * Enum value \"sqlite\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_SQLITE = \"sqlite\" as const;\n\n/**\n  * Enum value \"sybase\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_SYBASE = \"sybase\" as const;\n\n/**\n  * Enum value \"teradata\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_TERADATA = \"teradata\" as const;\n\n/**\n  * Enum value \"trino\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_TRINO = \"trino\" as const;\n\n/**\n  * Enum value \"vertica\" for attribute {@link ATTR_DB_SYSTEM}.\n  */\nexport const DB_SYSTEM_VALUE_VERTICA = \"vertica\" as const;\n\n/**\n * Deprecated, no replacement at this time.\n * \n * @example readonly_user\n * @example reporting_user\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated No replacement at this time.\n */\nexport const ATTR_DB_USER = 'db.user' as const;\n\n/**\n * 'Deprecated, use `deployment.environment.name` instead.'\n * \n * @example staging\n * @example production\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Deprecated, use `deployment.environment.name` instead.\n */\nexport const ATTR_DEPLOYMENT_ENVIRONMENT = 'deployment.environment' as const;\n\n/**\n * Name of the [deployment environment](https://wikipedia.org/wiki/Deployment_environment) (aka deployment tier).\n * \n * @example staging\n * @example production\n * \n * @note `deployment.environment.name` does not affect the uniqueness constraints defined through\n * the `service.namespace`, `service.name` and `service.instance.id` resource attributes.\n * This implies that resources carrying the following attribute combinations **MUST** be\n * considered to be identifying the same service:\n * \n *   - `service.name=frontend`, `deployment.environment.name=production`\n *   - `service.name=frontend`, `deployment.environment.name=staging`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEPLOYMENT_ENVIRONMENT_NAME = 'deployment.environment.name' as const;\n\n/**\n * The id of the deployment.\n * \n * @example 1208\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEPLOYMENT_ID = 'deployment.id' as const;\n\n/**\n * The name of the deployment.\n * \n * @example deploy my app\n * @example deploy-frontend\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEPLOYMENT_NAME = 'deployment.name' as const;\n\n/**\n * The status of the deployment.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEPLOYMENT_STATUS = 'deployment.status' as const;\n\n/**\n  * Enum value \"failed\" for attribute {@link ATTR_DEPLOYMENT_STATUS}.\n  */\nexport const DEPLOYMENT_STATUS_VALUE_FAILED = \"failed\" as const;\n\n/**\n  * Enum value \"succeeded\" for attribute {@link ATTR_DEPLOYMENT_STATUS}.\n  */\nexport const DEPLOYMENT_STATUS_VALUE_SUCCEEDED = \"succeeded\" as const;\n\n/**\n * Destination address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example destination.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the source side, and when communicating through an intermediary, `destination.address` **SHOULD** represent the destination address behind any intermediaries, for example proxies, if it's available.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DESTINATION_ADDRESS = 'destination.address' as const;\n\n/**\n * Destination port number\n * \n * @example 3389\n * @example 2888\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DESTINATION_PORT = 'destination.port' as const;\n\n/**\n * A unique identifier representing the device\n * \n * @example 2ab2916d-a51f-4ac8-80ee-45ac31a28092\n * \n * @note The device identifier **MUST** only be defined using the values outlined below. This value is not an advertising identifier and **MUST NOT** be used as such. On iOS (Swift or Objective-C), this value **MUST** be equal to the [vendor identifier](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android (Java or Kotlin), this value **MUST** be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application. More information can be found [here](https://developer.android.com/training/articles/user-data-ids) on best practices and exact implementation details. Caution should be taken when storing personal data or anything which can identify a user. GDPR and data protection laws may apply, ensure you do your own due diligence.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEVICE_ID = 'device.id' as const;\n\n/**\n * The name of the device manufacturer\n * \n * @example Apple\n * @example Samsung\n * \n * @note The Android OS provides this field via [Build](https://developer.android.com/reference/android/os/Build#MANUFACTURER). iOS apps **SHOULD** hardcode the value `Apple`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEVICE_MANUFACTURER = 'device.manufacturer' as const;\n\n/**\n * The model identifier for the device\n * \n * @example iPhone3,4\n * @example SM-G920F\n * \n * @note It's recommended this value represents a machine-readable version of the model identifier rather than the market or consumer-friendly name of the device.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEVICE_MODEL_IDENTIFIER = 'device.model.identifier' as const;\n\n/**\n * The marketing name for the device model\n * \n * @example iPhone 6s Plus\n * @example Samsung Galaxy S6\n * \n * @note It's recommended this value represents a human-readable version of the device model rather than a machine-readable alternative.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DEVICE_MODEL_NAME = 'device.model.name' as const;\n\n/**\n * The disk IO operation direction.\n * \n * @example read\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DISK_IO_DIRECTION = 'disk.io.direction' as const;\n\n/**\n  * Enum value \"read\" for attribute {@link ATTR_DISK_IO_DIRECTION}.\n  */\nexport const DISK_IO_DIRECTION_VALUE_READ = \"read\" as const;\n\n/**\n  * Enum value \"write\" for attribute {@link ATTR_DISK_IO_DIRECTION}.\n  */\nexport const DISK_IO_DIRECTION_VALUE_WRITE = \"write\" as const;\n\n/**\n * The name being queried.\n * \n * @example www.example.com\n * @example opentelemetry.io\n * \n * @note If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\\\\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \\\\t, \\\\r, and \\\\n respectively.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DNS_QUESTION_NAME = 'dns.question.name' as const;\n\n/**\n * Name of the garbage collector managed heap generation.\n * \n * @example gen0\n * @example gen1\n * @example gen2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_DOTNET_GC_HEAP_GENERATION = 'dotnet.gc.heap.generation' as const;\n\n/**\n  * Enum value \"gen0\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport const DOTNET_GC_HEAP_GENERATION_VALUE_GEN0 = \"gen0\" as const;\n\n/**\n  * Enum value \"gen1\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport const DOTNET_GC_HEAP_GENERATION_VALUE_GEN1 = \"gen1\" as const;\n\n/**\n  * Enum value \"gen2\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport const DOTNET_GC_HEAP_GENERATION_VALUE_GEN2 = \"gen2\" as const;\n\n/**\n  * Enum value \"loh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport const DOTNET_GC_HEAP_GENERATION_VALUE_LOH = \"loh\" as const;\n\n/**\n  * Enum value \"poh\" for attribute {@link ATTR_DOTNET_GC_HEAP_GENERATION}.\n  */\nexport const DOTNET_GC_HEAP_GENERATION_VALUE_POH = \"poh\" as const;\n\n/**\n * Deprecated, use `user.id` instead.\n * \n * @example \"username\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `user.id` attribute.\n */\nexport const ATTR_ENDUSER_ID = 'enduser.id' as const;\n\n/**\n * Deprecated, use `user.roles` instead.\n * \n * @example \"admin\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `user.roles` attribute.\n */\nexport const ATTR_ENDUSER_ROLE = 'enduser.role' as const;\n\n/**\n * Deprecated, no replacement at this time.\n * \n * @example \"read:message, write:files\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Removed.\n */\nexport const ATTR_ENDUSER_SCOPE = 'enduser.scope' as const;\n\n/**\n * Identifies the class / type of event.\n * \n * @example browser.mouse.click\n * @example device.app.lifecycle\n * \n * @note Event names are subject to the same rules as [attribute names](/docs/general/attribute-naming.md). Notably, event names are namespaced to avoid collisions and provide a clean separation of semantics for events in separate domains like browser, mobile, and kubernetes.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_EVENT_NAME = 'event.name' as const;\n\n/**\n * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_COLDSTART = 'faas.coldstart' as const;\n\n/**\n * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n * \n * @example \"0/5 * * * ? *\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_CRON = 'faas.cron' as const;\n\n/**\n * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n * \n * @example myBucketName\n * @example myDbName\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_DOCUMENT_COLLECTION = 'faas.document.collection' as const;\n\n/**\n * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n * \n * @example myFile.txt\n * @example myTableName\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_DOCUMENT_NAME = 'faas.document.name' as const;\n\n/**\n * Describes the type of the operation that was performed on the data.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_DOCUMENT_OPERATION = 'faas.document.operation' as const;\n\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport const FAAS_DOCUMENT_OPERATION_VALUE_DELETE = \"delete\" as const;\n\n/**\n  * Enum value \"edit\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport const FAAS_DOCUMENT_OPERATION_VALUE_EDIT = \"edit\" as const;\n\n/**\n  * Enum value \"insert\" for attribute {@link ATTR_FAAS_DOCUMENT_OPERATION}.\n  */\nexport const FAAS_DOCUMENT_OPERATION_VALUE_INSERT = \"insert\" as const;\n\n/**\n * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n * \n * @example \"2020-01-23T13:47:06Z\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_DOCUMENT_TIME = 'faas.document.time' as const;\n\n/**\n * The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.\n * \n * @example 2021/06/28/[$LATEST]2f399eb14537447da05ab2a2e39309de\n * \n * @note * **AWS Lambda:** Use the (full) log stream name.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_INSTANCE = 'faas.instance' as const;\n\n/**\n * The invocation ID of the current function invocation.\n * \n * @example \"af9d5aa4-a685-4c5f-a22b-444f80b3cc28\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_INVOCATION_ID = 'faas.invocation_id' as const;\n\n/**\n * The name of the invoked function.\n * \n * @example \"my-function\"\n * \n * @note **SHOULD** be equal to the `faas.name` resource attribute of the invoked function.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_INVOKED_NAME = 'faas.invoked_name' as const;\n\n/**\n * The cloud provider of the invoked function.\n * \n * @note **SHOULD** be equal to the `cloud.provider` resource attribute of the invoked function.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_INVOKED_PROVIDER = 'faas.invoked_provider' as const;\n\n/**\n  * Enum value \"alibaba_cloud\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport const FAAS_INVOKED_PROVIDER_VALUE_ALIBABA_CLOUD = \"alibaba_cloud\" as const;\n\n/**\n  * Enum value \"aws\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport const FAAS_INVOKED_PROVIDER_VALUE_AWS = \"aws\" as const;\n\n/**\n  * Enum value \"azure\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport const FAAS_INVOKED_PROVIDER_VALUE_AZURE = \"azure\" as const;\n\n/**\n  * Enum value \"gcp\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport const FAAS_INVOKED_PROVIDER_VALUE_GCP = \"gcp\" as const;\n\n/**\n  * Enum value \"tencent_cloud\" for attribute {@link ATTR_FAAS_INVOKED_PROVIDER}.\n  */\nexport const FAAS_INVOKED_PROVIDER_VALUE_TENCENT_CLOUD = \"tencent_cloud\" as const;\n\n/**\n * The cloud region of the invoked function.\n * \n * @example \"eu-central-1\"\n * \n * @note **SHOULD** be equal to the `cloud.region` resource attribute of the invoked function.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_INVOKED_REGION = 'faas.invoked_region' as const;\n\n/**\n * The amount of memory available to the serverless function converted to Bytes.\n * \n * @example 134217728\n * \n * @note It's recommended to set this attribute since e.g. too little memory can easily stop a Java AWS Lambda function from working correctly. On AWS Lambda, the environment variable `AWS_LAMBDA_FUNCTION_MEMORY_SIZE` provides this information (which must be multiplied by 1,048,576).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_MAX_MEMORY = 'faas.max_memory' as const;\n\n/**\n * The name of the single function that this runtime instance executes.\n * \n * @example my-function\n * @example myazurefunctionapp/some-function-name\n * \n * @note This is the name of the function as configured/deployed on the FaaS\n * platform and is usually different from the name of the callback\n * function (which may be stored in the\n * [`code.namespace`/`code.function`](/docs/general/attributes.md#source-code-attributes)\n * span attributes).\n * \n * For some cloud providers, the above definition is ambiguous. The following\n * definition of function name **MUST** be used for this attribute\n * (and consequently the span name) for the listed cloud providers/products:\n * \n *   - **Azure:**  The full name `<FUNCAPP>/<FUNC>`, i.e., function app name\n *     followed by a forward slash followed by the function name (this form\n *     can also be seen in the resource JSON for the function).\n *     This means that a span attribute **MUST** be used, as an Azure function\n *     app can host multiple functions that would usually share\n *     a TracerProvider (see also the `cloud.resource_id` attribute).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_NAME = 'faas.name' as const;\n\n/**\n * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n * \n * @example \"2020-01-23T13:47:06Z\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_TIME = 'faas.time' as const;\n\n/**\n * Type of the trigger which caused this function invocation.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_TRIGGER = 'faas.trigger' as const;\n\n/**\n  * Enum value \"datasource\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport const FAAS_TRIGGER_VALUE_DATASOURCE = \"datasource\" as const;\n\n/**\n  * Enum value \"http\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport const FAAS_TRIGGER_VALUE_HTTP = \"http\" as const;\n\n/**\n  * Enum value \"other\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport const FAAS_TRIGGER_VALUE_OTHER = \"other\" as const;\n\n/**\n  * Enum value \"pubsub\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport const FAAS_TRIGGER_VALUE_PUBSUB = \"pubsub\" as const;\n\n/**\n  * Enum value \"timer\" for attribute {@link ATTR_FAAS_TRIGGER}.\n  */\nexport const FAAS_TRIGGER_VALUE_TIMER = \"timer\" as const;\n\n/**\n * The immutable version of the function being executed.\n * \n * @example 26\n * @example pinkfroid-00002\n * \n * @note Depending on the cloud provider and platform, use:\n * \n *   - **AWS Lambda:** The [function version](https://docs.aws.amazon.com/lambda/latest/dg/configuration-versions.html)\n *     (an integer represented as a decimal string).\n *   - **Google Cloud Run (Services):** The [revision](https://cloud.google.com/run/docs/managing/revisions)\n *     (i.e., the function name plus the revision suffix).\n *   - **Google Cloud Functions:** The value of the\n *     [`K_REVISION` environment variable](https://cloud.google.com/functions/docs/env-var#runtime_environment_variables_set_automatically).\n *   - **Azure Functions:** Not applicable. Do not set this attribute.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FAAS_VERSION = 'faas.version' as const;\n\n/**\n * The unique identifier of the feature flag.\n * \n * @example logo-color\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FEATURE_FLAG_KEY = 'feature_flag.key' as const;\n\n/**\n * The name of the service provider that performs the flag evaluation.\n * \n * @example Flag Manager\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FEATURE_FLAG_PROVIDER_NAME = 'feature_flag.provider_name' as const;\n\n/**\n * **SHOULD** be a semantic identifier for a value. If one is unavailable, a stringified version of the value can be used.\n * \n * @example red\n * @example true\n * @example on\n * \n * @note A semantic identifier, commonly referred to as a variant, provides a means\n * for referring to a value without including the value itself. This can\n * provide additional context for understanding the meaning behind a value.\n * For example, the variant `red` maybe be used for the value `#c05543`.\n * \n * A stringified version of the value can be used in situations where a\n * semantic identifier is unavailable. String representation of the value\n * should be determined by the implementer.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FEATURE_FLAG_VARIANT = 'feature_flag.variant' as const;\n\n/**\n * Time when the file was last accessed, in ISO 8601 format.\n * \n * @example 2021-01-01T12:00:00Z\n * \n * @note This attribute might not be supported by some file systems — NFS, FAT32, in embedded OS, etc.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_ACCESSED = 'file.accessed' as const;\n\n/**\n * Array of file attributes.\n * \n * @example [\"readonly\", \"hidden\"]\n * \n * @note Attributes names depend on the OS or file system. Here’s a non-exhaustive list of values expected for this attribute: `archive`, `compressed`, `directory`, `encrypted`, `execute`, `hidden`, `immutable`, `journaled`, `read`, `readonly`, `symbolic link`, `system`, `temporary`, `write`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_ATTRIBUTES = 'file.attributes' as const;\n\n/**\n * Time when the file attributes or metadata was last changed, in ISO 8601 format.\n * \n * @example 2021-01-01T12:00:00Z\n * \n * @note `file.changed` captures the time when any of the file's properties or attributes (including the content) are changed, while `file.modified` captures the timestamp when the file content is modified.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_CHANGED = 'file.changed' as const;\n\n/**\n * Time when the file was created, in ISO 8601 format.\n * \n * @example 2021-01-01T12:00:00Z\n * \n * @note This attribute might not be supported by some file systems — NFS, FAT32, in embedded OS, etc.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_CREATED = 'file.created' as const;\n\n/**\n * Directory where the file is located. It should include the drive letter, when appropriate.\n * \n * @example /home/user\n * @example C:\\\\Program Files\\\\MyApp\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_DIRECTORY = 'file.directory' as const;\n\n/**\n * File extension, excluding the leading dot.\n * \n * @example png\n * @example gz\n * \n * @note When the file name has multiple extensions (example.tar.gz), only the last one should be captured (\"gz\", not \"tar.gz\").\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_EXTENSION = 'file.extension' as const;\n\n/**\n * Name of the fork. A fork is additional data associated with a filesystem object.\n * \n * @example Zone.Identifer\n * \n * @note On Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\n * On NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: C:\\\\path\\\\to\\\\filename.extension:some_fork_name, and some_fork_name is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_FORK_NAME = 'file.fork_name' as const;\n\n/**\n * Primary Group ID (GID) of the file.\n * \n * @example 1000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_GROUP_ID = 'file.group.id' as const;\n\n/**\n * Primary group name of the file.\n * \n * @example users\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_GROUP_NAME = 'file.group.name' as const;\n\n/**\n * Inode representing the file in the filesystem.\n * \n * @example 256383\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_INODE = 'file.inode' as const;\n\n/**\n * Mode of the file in octal representation.\n * \n * @example 0640\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_MODE = 'file.mode' as const;\n\n/**\n * Time when the file content was last modified, in ISO 8601 format.\n * \n * @example 2021-01-01T12:00:00Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_MODIFIED = 'file.modified' as const;\n\n/**\n * Name of the file including the extension, without the directory.\n * \n * @example example.png\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_NAME = 'file.name' as const;\n\n/**\n * The user ID (UID) or security identifier (SID) of the file owner.\n * \n * @example 1000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_OWNER_ID = 'file.owner.id' as const;\n\n/**\n * Username of the file owner.\n * \n * @example root\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_OWNER_NAME = 'file.owner.name' as const;\n\n/**\n * Full path to the file, including the file name. It should include the drive letter, when appropriate.\n * \n * @example /home/alice/example.png\n * @example C:\\\\Program Files\\\\MyApp\\\\myapp.exe\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_PATH = 'file.path' as const;\n\n/**\n * File size in bytes.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_SIZE = 'file.size' as const;\n\n/**\n * Path to the target of a symbolic link.\n * \n * @example /usr/bin/python3\n * \n * @note This attribute is only applicable to symbolic links.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_FILE_SYMBOLIC_LINK_TARGET_PATH = 'file.symbolic_link.target_path' as const;\n\n/**\n * Identifies the Google Cloud service for which the official client library is intended.\n * \n * @example appengine\n * @example run\n * @example firestore\n * @example alloydb\n * @example spanner\n * \n * @note Intended to be a stable identifier for Google Cloud client libraries that is uniform across implementation languages. The value should be derived from the canonical service domain for the service; for example, 'foo.googleapis.com' should result in a value of 'foo'.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GCP_CLIENT_SERVICE = 'gcp.client.service' as const;\n\n/**\n * The name of the Cloud Run [execution](https://cloud.google.com/run/docs/managing/job-executions) being run for the Job, as set by the [`CLOUD_RUN_EXECUTION`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.\n * \n * @example job-name-xxxx\n * @example sample-job-mdw84\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GCP_CLOUD_RUN_JOB_EXECUTION = 'gcp.cloud_run.job.execution' as const;\n\n/**\n * The index for a task within an execution as provided by the [`CLOUD_RUN_TASK_INDEX`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.\n * \n * @example 0\n * @example 1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GCP_CLOUD_RUN_JOB_TASK_INDEX = 'gcp.cloud_run.job.task_index' as const;\n\n/**\n * The hostname of a GCE instance. This is the full value of the default or [custom hostname](https://cloud.google.com/compute/docs/instances/custom-hostname-vm).\n * \n * @example my-host1234.example.com\n * @example sample-vm.us-west1-b.c.my-project.internal\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GCP_GCE_INSTANCE_HOSTNAME = 'gcp.gce.instance.hostname' as const;\n\n/**\n * The instance name of a GCE instance. This is the value provided by `host.name`, the visible name of the instance in the Cloud Console UI, and the prefix for the default hostname of the instance as defined by the [default internal DNS name](https://cloud.google.com/compute/docs/internal-dns#instance-fully-qualified-domain-names).\n * \n * @example instance-1\n * @example my-vm-name\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GCP_GCE_INSTANCE_NAME = 'gcp.gce.instance.name' as const;\n\n/**\n * Deprecated, use Event API to report completions contents.\n * \n * @example [{'role': 'assistant', 'content': 'The capital of France is Paris.'}]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Removed, no replacement at this time.\n */\nexport const ATTR_GEN_AI_COMPLETION = 'gen_ai.completion' as const;\n\n/**\n * The response format that is requested.\n * \n * @example json\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT = 'gen_ai.openai.request.response_format' as const;\n\n/**\n  * Enum value \"json_object\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_OBJECT = \"json_object\" as const;\n\n/**\n  * Enum value \"json_schema\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_JSON_SCHEMA = \"json_schema\" as const;\n\n/**\n  * Enum value \"text\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT}.\n  */\nexport const GEN_AI_OPENAI_REQUEST_RESPONSE_FORMAT_VALUE_TEXT = \"text\" as const;\n\n/**\n * Requests with same seed value more likely to return same result.\n * \n * @example 100\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_OPENAI_REQUEST_SEED = 'gen_ai.openai.request.seed' as const;\n\n/**\n * The service tier requested. May be a specific tier, detault, or auto.\n * \n * @example auto\n * @example default\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER = 'gen_ai.openai.request.service_tier' as const;\n\n/**\n  * Enum value \"auto\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER}.\n  */\nexport const GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_AUTO = \"auto\" as const;\n\n/**\n  * Enum value \"default\" for attribute {@link ATTR_GEN_AI_OPENAI_REQUEST_SERVICE_TIER}.\n  */\nexport const GEN_AI_OPENAI_REQUEST_SERVICE_TIER_VALUE_DEFAULT = \"default\" as const;\n\n/**\n * The service tier used for the response.\n * \n * @example scale\n * @example detault\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_OPENAI_RESPONSE_SERVICE_TIER = 'gen_ai.openai.response.service_tier' as const;\n\n/**\n * The name of the operation being performed.\n * \n * @note If one of the predefined values applies, but specific system uses a different name it's **RECOMMENDED** to document it in the semantic conventions for specific GenAI system and use system-specific name in the instrumentation. If a different name is not documented, instrumentation libraries **SHOULD** use applicable predefined value.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_OPERATION_NAME = 'gen_ai.operation.name' as const;\n\n/**\n  * Enum value \"chat\" for attribute {@link ATTR_GEN_AI_OPERATION_NAME}.\n  */\nexport const GEN_AI_OPERATION_NAME_VALUE_CHAT = \"chat\" as const;\n\n/**\n  * Enum value \"text_completion\" for attribute {@link ATTR_GEN_AI_OPERATION_NAME}.\n  */\nexport const GEN_AI_OPERATION_NAME_VALUE_TEXT_COMPLETION = \"text_completion\" as const;\n\n/**\n * Deprecated, use Event API to report prompt contents.\n * \n * @example [{'role': 'user', 'content': 'What is the capital of France?'}]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Removed, no replacement at this time.\n */\nexport const ATTR_GEN_AI_PROMPT = 'gen_ai.prompt' as const;\n\n/**\n * The frequency penalty setting for the GenAI request.\n * \n * @example 0.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_FREQUENCY_PENALTY = 'gen_ai.request.frequency_penalty' as const;\n\n/**\n * The maximum number of tokens the model generates for a request.\n * \n * @example 100\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_MAX_TOKENS = 'gen_ai.request.max_tokens' as const;\n\n/**\n * The name of the GenAI model a request is being made to.\n * \n * @example \"gpt-4\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_MODEL = 'gen_ai.request.model' as const;\n\n/**\n * The presence penalty setting for the GenAI request.\n * \n * @example 0.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_PRESENCE_PENALTY = 'gen_ai.request.presence_penalty' as const;\n\n/**\n * List of sequences that the model will use to stop generating further tokens.\n * \n * @example [\"forest\", \"lived\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_STOP_SEQUENCES = 'gen_ai.request.stop_sequences' as const;\n\n/**\n * The temperature setting for the GenAI request.\n * \n * @example 0.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_TEMPERATURE = 'gen_ai.request.temperature' as const;\n\n/**\n * The top_k sampling setting for the GenAI request.\n * \n * @example 1.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_TOP_K = 'gen_ai.request.top_k' as const;\n\n/**\n * The top_p sampling setting for the GenAI request.\n * \n * @example 1.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_REQUEST_TOP_P = 'gen_ai.request.top_p' as const;\n\n/**\n * Array of reasons the model stopped generating tokens, corresponding to each generation received.\n * \n * @example [\"stop\"]\n * @example [\"stop\", \"length\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_RESPONSE_FINISH_REASONS = 'gen_ai.response.finish_reasons' as const;\n\n/**\n * The unique identifier for the completion.\n * \n * @example chatcmpl-123\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_RESPONSE_ID = 'gen_ai.response.id' as const;\n\n/**\n * The name of the model that generated the response.\n * \n * @example gpt-4-0613\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_RESPONSE_MODEL = 'gen_ai.response.model' as const;\n\n/**\n * The Generative AI product as identified by the client or server instrumentation.\n * \n * @example \"openai\"\n * \n * @note The `gen_ai.system` describes a family of GenAI models with specific model identified\n * by `gen_ai.request.model` and `gen_ai.response.model` attributes.\n * \n * The actual GenAI product may differ from the one identified by the client.\n * For example, when using OpenAI client libraries to communicate with Mistral, the `gen_ai.system`\n * is set to `openai` based on the instrumentation's best knowledge.\n * \n * For custom model, a custom friendly name **SHOULD** be used.\n * If none of these options apply, the `gen_ai.system` **SHOULD** be set to `_OTHER`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_SYSTEM = 'gen_ai.system' as const;\n\n/**\n  * Enum value \"anthropic\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport const GEN_AI_SYSTEM_VALUE_ANTHROPIC = \"anthropic\" as const;\n\n/**\n  * Enum value \"cohere\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport const GEN_AI_SYSTEM_VALUE_COHERE = \"cohere\" as const;\n\n/**\n  * Enum value \"openai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport const GEN_AI_SYSTEM_VALUE_OPENAI = \"openai\" as const;\n\n/**\n  * Enum value \"vertex_ai\" for attribute {@link ATTR_GEN_AI_SYSTEM}.\n  */\nexport const GEN_AI_SYSTEM_VALUE_VERTEX_AI = \"vertex_ai\" as const;\n\n/**\n * The type of token being counted.\n * \n * @example input\n * @example output\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_TOKEN_TYPE = 'gen_ai.token.type' as const;\n\n/**\n  * Enum value \"input\" for attribute {@link ATTR_GEN_AI_TOKEN_TYPE}.\n  */\nexport const GEN_AI_TOKEN_TYPE_VALUE_INPUT = \"input\" as const;\n\n/**\n  * Enum value \"output\" for attribute {@link ATTR_GEN_AI_TOKEN_TYPE}.\n  */\nexport const GEN_AI_TOKEN_TYPE_VALUE_COMPLETION = \"output\" as const;\n\n/**\n * Deprecated, use `gen_ai.usage.output_tokens` instead.\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `gen_ai.usage.output_tokens` attribute.\n */\nexport const ATTR_GEN_AI_USAGE_COMPLETION_TOKENS = 'gen_ai.usage.completion_tokens' as const;\n\n/**\n * The number of tokens used in the GenAI input (prompt).\n * \n * @example 100\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_USAGE_INPUT_TOKENS = 'gen_ai.usage.input_tokens' as const;\n\n/**\n * The number of tokens used in the GenAI response (completion).\n * \n * @example 180\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GEN_AI_USAGE_OUTPUT_TOKENS = 'gen_ai.usage.output_tokens' as const;\n\n/**\n * Deprecated, use `gen_ai.usage.input_tokens` instead.\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `gen_ai.usage.input_tokens` attribute.\n */\nexport const ATTR_GEN_AI_USAGE_PROMPT_TOKENS = 'gen_ai.usage.prompt_tokens' as const;\n\n/**\n * The type of memory.\n * \n * @example other\n * @example stack\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GO_MEMORY_TYPE = 'go.memory.type' as const;\n\n/**\n  * Enum value \"other\" for attribute {@link ATTR_GO_MEMORY_TYPE}.\n  */\nexport const GO_MEMORY_TYPE_VALUE_OTHER = \"other\" as const;\n\n/**\n  * Enum value \"stack\" for attribute {@link ATTR_GO_MEMORY_TYPE}.\n  */\nexport const GO_MEMORY_TYPE_VALUE_STACK = \"stack\" as const;\n\n/**\n * The GraphQL document being executed.\n * \n * @example \"query findBookById { bookById(id: ?) { name } }\"\n * \n * @note The value may be sanitized to exclude sensitive information.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GRAPHQL_DOCUMENT = 'graphql.document' as const;\n\n/**\n * The name of the operation being executed.\n * \n * @example \"findBookById\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GRAPHQL_OPERATION_NAME = 'graphql.operation.name' as const;\n\n/**\n * The type of the operation being executed.\n * \n * @example query\n * @example mutation\n * @example subscription\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_GRAPHQL_OPERATION_TYPE = 'graphql.operation.type' as const;\n\n/**\n  * Enum value \"mutation\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport const GRAPHQL_OPERATION_TYPE_VALUE_MUTATION = \"mutation\" as const;\n\n/**\n  * Enum value \"query\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport const GRAPHQL_OPERATION_TYPE_VALUE_QUERY = \"query\" as const;\n\n/**\n  * Enum value \"subscription\" for attribute {@link ATTR_GRAPHQL_OPERATION_TYPE}.\n  */\nexport const GRAPHQL_OPERATION_TYPE_VALUE_SUBSCRIPTION = \"subscription\" as const;\n\n/**\n * Unique identifier for the application\n * \n * @example 2daa2797-e42b-4624-9322-ec3f968df4da\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HEROKU_APP_ID = 'heroku.app.id' as const;\n\n/**\n * Commit hash for the current release\n * \n * @example e6134959463efd8966b20e75b913cafe3f5ec\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HEROKU_RELEASE_COMMIT = 'heroku.release.commit' as const;\n\n/**\n * Time and date the release was created\n * \n * @example 2022-10-23T18:00:42Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HEROKU_RELEASE_CREATION_TIMESTAMP = 'heroku.release.creation_timestamp' as const;\n\n/**\n * The CPU architecture the host system is running on.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_ARCH = 'host.arch' as const;\n\n/**\n  * Enum value \"amd64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_AMD64 = \"amd64\" as const;\n\n/**\n  * Enum value \"arm32\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_ARM32 = \"arm32\" as const;\n\n/**\n  * Enum value \"arm64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_ARM64 = \"arm64\" as const;\n\n/**\n  * Enum value \"ia64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_IA64 = \"ia64\" as const;\n\n/**\n  * Enum value \"ppc32\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_PPC32 = \"ppc32\" as const;\n\n/**\n  * Enum value \"ppc64\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_PPC64 = \"ppc64\" as const;\n\n/**\n  * Enum value \"s390x\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_S390X = \"s390x\" as const;\n\n/**\n  * Enum value \"x86\" for attribute {@link ATTR_HOST_ARCH}.\n  */\nexport const HOST_ARCH_VALUE_X86 = \"x86\" as const;\n\n/**\n * The amount of level 2 memory cache available to the processor (in Bytes).\n * \n * @example 12288000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_CACHE_L2_SIZE = 'host.cpu.cache.l2.size' as const;\n\n/**\n * Family or generation of the CPU.\n * \n * @example 6\n * @example PA-RISC 1.1e\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_FAMILY = 'host.cpu.family' as const;\n\n/**\n * Model identifier. It provides more granular information about the CPU, distinguishing it from other CPUs within the same family.\n * \n * @example 6\n * @example 9000/778/B180L\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_MODEL_ID = 'host.cpu.model.id' as const;\n\n/**\n * Model designation of the processor.\n * \n * @example 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_MODEL_NAME = 'host.cpu.model.name' as const;\n\n/**\n * Stepping or core revisions.\n * \n * @example 1\n * @example r1p1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_STEPPING = 'host.cpu.stepping' as const;\n\n/**\n * Processor manufacturer identifier. A maximum 12-character string.\n * \n * @example GenuineIntel\n * \n * @note [CPUID](https://wiki.osdev.org/CPUID) command returns the vendor ID string in EBX, EDX and ECX registers. Writing these to memory in this order results in a 12-character string.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_CPU_VENDOR_ID = 'host.cpu.vendor.id' as const;\n\n/**\n * Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.\n * \n * @example fdbf79e8af94cb7f9e8df36789187052\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_ID = 'host.id' as const;\n\n/**\n * VM image ID or host OS image ID. For Cloud, this value is from the provider.\n * \n * @example ami-07b06b442921831e5\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_IMAGE_ID = 'host.image.id' as const;\n\n/**\n * Name of the VM image or OS install the host was instantiated from.\n * \n * @example infra-ami-eks-worker-node-7d4ec78312\n * @example CentOS-8-x86_64-1905\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_IMAGE_NAME = 'host.image.name' as const;\n\n/**\n * The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n * \n * @example 0.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_IMAGE_VERSION = 'host.image.version' as const;\n\n/**\n * Available IP addresses of the host, excluding loopback interfaces.\n * \n * @example [\"192.168.1.140\", \"fe80::abc2:4a28:737a:609e\"]\n * \n * @note IPv4 Addresses **MUST** be specified in dotted-quad notation. IPv6 addresses **MUST** be specified in the [RFC 5952](https://www.rfc-editor.org/rfc/rfc5952.html) format.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_IP = 'host.ip' as const;\n\n/**\n * Available MAC addresses of the host, excluding loopback interfaces.\n * \n * @example [\"AC-DE-48-23-45-67\", \"AC-DE-48-23-45-67-01-9F\"]\n * \n * @note MAC Addresses **MUST** be represented in [IEEE RA hexadecimal form](https://standards.ieee.org/wp-content/uploads/import/documents/tutorials/eui.pdf): as hyphen-separated octets in uppercase hexadecimal form from most to least significant.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_MAC = 'host.mac' as const;\n\n/**\n * Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.\n * \n * @example opentelemetry-test\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_NAME = 'host.name' as const;\n\n/**\n * Type of host. For Cloud, this must be the machine type.\n * \n * @example n1-standard-1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HOST_TYPE = 'host.type' as const;\n\n/**\n * Deprecated, use `client.address` instead.\n * \n * @example \"83.164.160.102\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `client.address`.\n */\nexport const ATTR_HTTP_CLIENT_IP = 'http.client_ip' as const;\n\n/**\n * State of the HTTP connection in the HTTP connection pool.\n * \n * @example active\n * @example idle\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HTTP_CONNECTION_STATE = 'http.connection.state' as const;\n\n/**\n  * Enum value \"active\" for attribute {@link ATTR_HTTP_CONNECTION_STATE}.\n  */\nexport const HTTP_CONNECTION_STATE_VALUE_ACTIVE = \"active\" as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_HTTP_CONNECTION_STATE}.\n  */\nexport const HTTP_CONNECTION_STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n * Deprecated, use `network.protocol.name` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.protocol.name`.\n */\nexport const ATTR_HTTP_FLAVOR = 'http.flavor' as const;\n\n/**\n  * Enum value \"1.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_HTTP_1_0 = \"1.0\" as const;\n\n/**\n  * Enum value \"1.1\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_HTTP_1_1 = \"1.1\" as const;\n\n/**\n  * Enum value \"2.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_HTTP_2_0 = \"2.0\" as const;\n\n/**\n  * Enum value \"3.0\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_HTTP_3_0 = \"3.0\" as const;\n\n/**\n  * Enum value \"QUIC\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_QUIC = \"QUIC\" as const;\n\n/**\n  * Enum value \"SPDY\" for attribute {@link ATTR_HTTP_FLAVOR}.\n  */\nexport const HTTP_FLAVOR_VALUE_SPDY = \"SPDY\" as const;\n\n/**\n * Deprecated, use one of `server.address`, `client.address` or `http.request.header.host` instead, depending on the usage.\n * \n * @example www.example.org\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by one of `server.address`, `client.address` or `http.request.header.host`, depending on the usage.\n */\nexport const ATTR_HTTP_HOST = 'http.host' as const;\n\n/**\n * Deprecated, use `http.request.method` instead.\n * \n * @example GET\n * @example POST\n * @example HEAD\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `http.request.method`.\n */\nexport const ATTR_HTTP_METHOD = 'http.method' as const;\n\n/**\n * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n * \n * @example 3495\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HTTP_REQUEST_BODY_SIZE = 'http.request.body.size' as const;\n\n/**\n * The total size of the request in bytes. This should be the total number of bytes sent over the wire, including the request line (HTTP/1.1), framing (HTTP/2 and HTTP/3), headers, and request body if any.\n * \n * @example 1437\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HTTP_REQUEST_SIZE = 'http.request.size' as const;\n\n/**\n * Deprecated, use `http.request.header.<key>` instead.\n * \n * @example 3495\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `http.request.header.<key>`.\n */\nexport const ATTR_HTTP_REQUEST_CONTENT_LENGTH = 'http.request_content_length' as const;\n\n/**\n * Deprecated, use `http.request.body.size` instead.\n * \n * @example 5493\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `http.request.body.size`.\n */\nexport const ATTR_HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED = 'http.request_content_length_uncompressed' as const;\n\n/**\n * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.\n * \n * @example 3495\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HTTP_RESPONSE_BODY_SIZE = 'http.response.body.size' as const;\n\n/**\n * The total size of the response in bytes. This should be the total number of bytes sent over the wire, including the status line (HTTP/1.1), framing (HTTP/2 and HTTP/3), headers, and response body and trailers if any.\n * \n * @example 1437\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HTTP_RESPONSE_SIZE = 'http.response.size' as const;\n\n/**\n * Deprecated, use `http.response.header.<key>` instead.\n * \n * @example 3495\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `http.response.header.<key>`.\n */\nexport const ATTR_HTTP_RESPONSE_CONTENT_LENGTH = 'http.response_content_length' as const;\n\n/**\n * Deprecated, use `http.response.body.size` instead.\n * \n * @example 5493\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replace by `http.response.body.size`.\n */\nexport const ATTR_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED = 'http.response_content_length_uncompressed' as const;\n\n/**\n * Deprecated, use `url.scheme` instead.\n * \n * @example http\n * @example https\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `url.scheme` instead.\n */\nexport const ATTR_HTTP_SCHEME = 'http.scheme' as const;\n\n/**\n * Deprecated, use `server.address` instead.\n * \n * @example example.com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.address`.\n */\nexport const ATTR_HTTP_SERVER_NAME = 'http.server_name' as const;\n\n/**\n * Deprecated, use `http.response.status_code` instead.\n * \n * @example 200\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `http.response.status_code`.\n */\nexport const ATTR_HTTP_STATUS_CODE = 'http.status_code' as const;\n\n/**\n * Deprecated, use `url.path` and `url.query` instead.\n * \n * @example /search?q=OpenTelemetry#SemConv\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Split to `url.path` and `url.query.\n */\nexport const ATTR_HTTP_TARGET = 'http.target' as const;\n\n/**\n * Deprecated, use `url.full` instead.\n * \n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `url.full`.\n */\nexport const ATTR_HTTP_URL = 'http.url' as const;\n\n/**\n * Deprecated, use `user_agent.original` instead.\n * \n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `user_agent.original`.\n */\nexport const ATTR_HTTP_USER_AGENT = 'http.user_agent' as const;\n\n/**\n * An identifier for the hardware component, unique within the monitored host\n * \n * @example win32battery_battery_testsysa33_1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HW_ID = 'hw.id' as const;\n\n/**\n * An easily-recognizable name for the hardware component\n * \n * @example eth0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HW_NAME = 'hw.name' as const;\n\n/**\n * Unique identifier of the parent component (typically the `hw.id` attribute of the enclosure, or disk controller)\n * \n * @example dellStorage_perc_0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HW_PARENT = 'hw.parent' as const;\n\n/**\n * The current state of the component\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HW_STATE = 'hw.state' as const;\n\n/**\n  * Enum value \"degraded\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport const HW_STATE_VALUE_DEGRADED = \"degraded\" as const;\n\n/**\n  * Enum value \"failed\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport const HW_STATE_VALUE_FAILED = \"failed\" as const;\n\n/**\n  * Enum value \"ok\" for attribute {@link ATTR_HW_STATE}.\n  */\nexport const HW_STATE_VALUE_OK = \"ok\" as const;\n\n/**\n * Type of the component\n * \n * @note Describes the category of the hardware component for which `hw.state` is being reported. For example, `hw.type=temperature` along with `hw.state=degraded` would indicate that the temperature of the hardware component has been reported as `degraded`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_HW_TYPE = 'hw.type' as const;\n\n/**\n  * Enum value \"battery\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_BATTERY = \"battery\" as const;\n\n/**\n  * Enum value \"cpu\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_CPU = \"cpu\" as const;\n\n/**\n  * Enum value \"disk_controller\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_DISK_CONTROLLER = \"disk_controller\" as const;\n\n/**\n  * Enum value \"enclosure\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_ENCLOSURE = \"enclosure\" as const;\n\n/**\n  * Enum value \"fan\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_FAN = \"fan\" as const;\n\n/**\n  * Enum value \"gpu\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_GPU = \"gpu\" as const;\n\n/**\n  * Enum value \"logical_disk\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_LOGICAL_DISK = \"logical_disk\" as const;\n\n/**\n  * Enum value \"memory\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_MEMORY = \"memory\" as const;\n\n/**\n  * Enum value \"network\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_NETWORK = \"network\" as const;\n\n/**\n  * Enum value \"physical_disk\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_PHYSICAL_DISK = \"physical_disk\" as const;\n\n/**\n  * Enum value \"power_supply\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_POWER_SUPPLY = \"power_supply\" as const;\n\n/**\n  * Enum value \"tape_drive\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_TAPE_DRIVE = \"tape_drive\" as const;\n\n/**\n  * Enum value \"temperature\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_TEMPERATURE = \"temperature\" as const;\n\n/**\n  * Enum value \"voltage\" for attribute {@link ATTR_HW_TYPE}.\n  */\nexport const HW_TYPE_VALUE_VOLTAGE = \"voltage\" as const;\n\n/**\n * Deprecated use the `device.app.lifecycle` event definition including `ios.state` as a payload field instead.\n * \n * @note The iOS lifecycle states are defined in the [UIApplicationDelegate documentation](https://developer.apple.com/documentation/uikit/uiapplicationdelegate#1656902), and from which the `OS terminology` column values are derived.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Moved to a payload field of `device.app.lifecycle`.\n */\nexport const ATTR_IOS_STATE = 'ios.state' as const;\n\n/**\n  * Enum value \"active\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport const IOS_STATE_VALUE_ACTIVE = \"active\" as const;\n\n/**\n  * Enum value \"background\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport const IOS_STATE_VALUE_BACKGROUND = \"background\" as const;\n\n/**\n  * Enum value \"foreground\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport const IOS_STATE_VALUE_FOREGROUND = \"foreground\" as const;\n\n/**\n  * Enum value \"inactive\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport const IOS_STATE_VALUE_INACTIVE = \"inactive\" as const;\n\n/**\n  * Enum value \"terminate\" for attribute {@link ATTR_IOS_STATE}.\n  */\nexport const IOS_STATE_VALUE_TERMINATE = \"terminate\" as const;\n\n/**\n * Name of the buffer pool.\n * \n * @example mapped\n * @example direct\n * \n * @note Pool names are generally obtained via [BufferPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/BufferPoolMXBean.html#getName()).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_JVM_BUFFER_POOL_NAME = 'jvm.buffer.pool.name' as const;\n\n/**\n * The name of the cluster.\n * \n * @example opentelemetry-cluster\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CLUSTER_NAME = 'k8s.cluster.name' as const;\n\n/**\n * A pseudo-ID for the cluster, set to the UID of the `kube-system` namespace.\n * \n * @example 218fc5a9-a5f1-4b54-aa05-46717d0ab26d\n * \n * @note K8s doesn't have support for obtaining a cluster ID. If this is ever\n * added, we will recommend collecting the `k8s.cluster.uid` through the\n * official APIs. In the meantime, we are able to use the `uid` of the\n * `kube-system` namespace as a proxy for cluster ID. Read on for the\n * rationale.\n * \n * Every object created in a K8s cluster is assigned a distinct UID. The\n * `kube-system` namespace is used by Kubernetes itself and will exist\n * for the lifetime of the cluster. Using the `uid` of the `kube-system`\n * namespace is a reasonable proxy for the K8s ClusterID as it will only\n * change if the cluster is rebuilt. Furthermore, Kubernetes UIDs are\n * UUIDs as standardized by\n * [ISO/IEC 9834-8 and ITU-T X.667](https://www.itu.int/ITU-T/studygroups/com17/oid.html).\n * Which states:\n * \n * > If generated according to one of the mechanisms defined in Rec.\n * > ITU-T X.667 | ISO/IEC 9834-8, a UUID is either guaranteed to be\n * > different from all other UUIDs generated before 3603 A.D., or is\n * > extremely likely to be different (depending on the mechanism chosen).\n * \n * Therefore, UIDs between clusters should be extremely unlikely to\n * conflict.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CLUSTER_UID = 'k8s.cluster.uid' as const;\n\n/**\n * The name of the Container from Pod specification, must be unique within a Pod. Container runtime usually uses different globally unique name (`container.name`).\n * \n * @example redis\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CONTAINER_NAME = 'k8s.container.name' as const;\n\n/**\n * Number of times the container was restarted. This attribute can be used to identify a particular container (running or stopped) within a container spec.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CONTAINER_RESTART_COUNT = 'k8s.container.restart_count' as const;\n\n/**\n * Last terminated reason of the Container.\n * \n * @example Evicted\n * @example Error\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CONTAINER_STATUS_LAST_TERMINATED_REASON = 'k8s.container.status.last_terminated_reason' as const;\n\n/**\n * The name of the CronJob.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CRONJOB_NAME = 'k8s.cronjob.name' as const;\n\n/**\n * The UID of the CronJob.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_CRONJOB_UID = 'k8s.cronjob.uid' as const;\n\n/**\n * The name of the DaemonSet.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_DAEMONSET_NAME = 'k8s.daemonset.name' as const;\n\n/**\n * The UID of the DaemonSet.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_DAEMONSET_UID = 'k8s.daemonset.uid' as const;\n\n/**\n * The name of the Deployment.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_DEPLOYMENT_NAME = 'k8s.deployment.name' as const;\n\n/**\n * The UID of the Deployment.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_DEPLOYMENT_UID = 'k8s.deployment.uid' as const;\n\n/**\n * The name of the Job.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_JOB_NAME = 'k8s.job.name' as const;\n\n/**\n * The UID of the Job.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_JOB_UID = 'k8s.job.uid' as const;\n\n/**\n * The name of the namespace that the pod is running in.\n * \n * @example default\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_NAMESPACE_NAME = 'k8s.namespace.name' as const;\n\n/**\n * The name of the Node.\n * \n * @example node-1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_NODE_NAME = 'k8s.node.name' as const;\n\n/**\n * The UID of the Node.\n * \n * @example 1eb3a0c6-0477-4080-a9cb-0cb7db65c6a2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_NODE_UID = 'k8s.node.uid' as const;\n\n/**\n * The annotation key-value pairs placed on the Pod, the `<key>` being the annotation name, the value being the annotation value.\n * \n * @example k8s.pod.annotation.kubernetes.io/enforce-mountable-secrets=true\n * @example k8s.pod.annotation.mycompany.io/arch=x64\n * @example k8s.pod.annotation.data=\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_POD_ANNOTATION = (key: string) => `k8s.pod.annotation.${key}`;\n\n/**\n * The label key-value pairs placed on the Pod, the `<key>` being the label name, the value being the label value.\n * \n * @example k8s.pod.label.app=my-app\n * @example k8s.pod.label.mycompany.io/arch=x64\n * @example k8s.pod.label.data=\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_POD_LABEL = (key: string) => `k8s.pod.label.${key}`;\n\n/**\n * Deprecated, use `k8s.pod.label` instead.\n * \n * @example k8s.pod.label.app=my-app\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `k8s.pod.label`.\n */\nexport const ATTR_K8S_POD_LABELS = (key: string) => `k8s.pod.labels.${key}`;\n\n/**\n * The name of the Pod.\n * \n * @example opentelemetry-pod-autoconf\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_POD_NAME = 'k8s.pod.name' as const;\n\n/**\n * The UID of the Pod.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_POD_UID = 'k8s.pod.uid' as const;\n\n/**\n * The name of the ReplicaSet.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_REPLICASET_NAME = 'k8s.replicaset.name' as const;\n\n/**\n * The UID of the ReplicaSet.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_REPLICASET_UID = 'k8s.replicaset.uid' as const;\n\n/**\n * The name of the StatefulSet.\n * \n * @example opentelemetry\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_STATEFULSET_NAME = 'k8s.statefulset.name' as const;\n\n/**\n * The UID of the StatefulSet.\n * \n * @example 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_STATEFULSET_UID = 'k8s.statefulset.uid' as const;\n\n/**\n * The name of the K8s volume.\n * \n * @example volume0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_VOLUME_NAME = 'k8s.volume.name' as const;\n\n/**\n * The type of the K8s volume.\n * \n * @example emptyDir\n * @example persistentVolumeClaim\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_K8S_VOLUME_TYPE = 'k8s.volume.type' as const;\n\n/**\n  * Enum value \"configMap\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_CONFIG_MAP = \"configMap\" as const;\n\n/**\n  * Enum value \"downwardAPI\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_DOWNWARD_API = \"downwardAPI\" as const;\n\n/**\n  * Enum value \"emptyDir\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_EMPTY_DIR = \"emptyDir\" as const;\n\n/**\n  * Enum value \"local\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_LOCAL = \"local\" as const;\n\n/**\n  * Enum value \"persistentVolumeClaim\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_PERSISTENT_VOLUME_CLAIM = \"persistentVolumeClaim\" as const;\n\n/**\n  * Enum value \"secret\" for attribute {@link ATTR_K8S_VOLUME_TYPE}.\n  */\nexport const K8S_VOLUME_TYPE_VALUE_SECRET = \"secret\" as const;\n\n/**\n * The Linux Slab memory state\n * \n * @example reclaimable\n * @example unreclaimable\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LINUX_MEMORY_SLAB_STATE = 'linux.memory.slab.state' as const;\n\n/**\n  * Enum value \"reclaimable\" for attribute {@link ATTR_LINUX_MEMORY_SLAB_STATE}.\n  */\nexport const LINUX_MEMORY_SLAB_STATE_VALUE_RECLAIMABLE = \"reclaimable\" as const;\n\n/**\n  * Enum value \"unreclaimable\" for attribute {@link ATTR_LINUX_MEMORY_SLAB_STATE}.\n  */\nexport const LINUX_MEMORY_SLAB_STATE_VALUE_UNRECLAIMABLE = \"unreclaimable\" as const;\n\n/**\n * The basename of the file.\n * \n * @example audit.log\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_FILE_NAME = 'log.file.name' as const;\n\n/**\n * The basename of the file, with symlinks resolved.\n * \n * @example uuid.log\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_FILE_NAME_RESOLVED = 'log.file.name_resolved' as const;\n\n/**\n * The full path to the file.\n * \n * @example /var/log/mysql/audit.log\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_FILE_PATH = 'log.file.path' as const;\n\n/**\n * The full path to the file, with symlinks resolved.\n * \n * @example /var/lib/docker/uuid.log\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_FILE_PATH_RESOLVED = 'log.file.path_resolved' as const;\n\n/**\n * The stream associated with the log. See below for a list of well-known values.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_IOSTREAM = 'log.iostream' as const;\n\n/**\n  * Enum value \"stderr\" for attribute {@link ATTR_LOG_IOSTREAM}.\n  */\nexport const LOG_IOSTREAM_VALUE_STDERR = \"stderr\" as const;\n\n/**\n  * Enum value \"stdout\" for attribute {@link ATTR_LOG_IOSTREAM}.\n  */\nexport const LOG_IOSTREAM_VALUE_STDOUT = \"stdout\" as const;\n\n/**\n * The complete original Log Record.\n * \n * @example 77 <86>1 2015-08-06T21:58:59.694Z 192.168.2.133 inactive - - - Something happened\n * @example [INFO] 8/3/24 12:34:56 Something happened\n * \n * @note This value **MAY** be added when processing a Log Record which was originally transmitted as a string or equivalent data type AND the Body field of the Log Record does not contain the same value. (e.g. a syslog or a log record read from a file.)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_RECORD_ORIGINAL = 'log.record.original' as const;\n\n/**\n * A unique identifier for the Log Record.\n * \n * @example 01ARZ3NDEKTSV4RRFFQ69G5FAV\n * \n * @note If an id is provided, other log records with the same id will be considered duplicates and can be removed safely. This means, that two distinguishable log records **MUST** have different values.\n * The id **MAY** be an [Universally Unique Lexicographically Sortable Identifier (ULID)](https://github.com/ulid/spec), but other identifiers (e.g. UUID) may be used as needed.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_LOG_RECORD_UID = 'log.record.uid' as const;\n\n/**\n * Deprecated, use `rpc.message.compressed_size` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `rpc.message.compressed_size`.\n */\nexport const ATTR_MESSAGE_COMPRESSED_SIZE = 'message.compressed_size' as const;\n\n/**\n * Deprecated, use `rpc.message.id` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `rpc.message.id`.\n */\nexport const ATTR_MESSAGE_ID = 'message.id' as const;\n\n/**\n * Deprecated, use `rpc.message.type` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `rpc.message.type`.\n */\nexport const ATTR_MESSAGE_TYPE = 'message.type' as const;\n\n/**\n  * Enum value \"RECEIVED\" for attribute {@link ATTR_MESSAGE_TYPE}.\n  */\nexport const MESSAGE_TYPE_VALUE_RECEIVED = \"RECEIVED\" as const;\n\n/**\n  * Enum value \"SENT\" for attribute {@link ATTR_MESSAGE_TYPE}.\n  */\nexport const MESSAGE_TYPE_VALUE_SENT = \"SENT\" as const;\n\n/**\n * Deprecated, use `rpc.message.uncompressed_size` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `rpc.message.uncompressed_size`.\n */\nexport const ATTR_MESSAGE_UNCOMPRESSED_SIZE = 'message.uncompressed_size' as const;\n\n/**\n * The number of messages sent, received, or processed in the scope of the batching operation.\n * \n * @example 0\n * @example 1\n * @example 2\n * \n * @note Instrumentations **SHOULD NOT** set `messaging.batch.message_count` on spans that operate with a single message. When a messaging client library supports both batch and single-message API for the same operation, instrumentations **SHOULD** use `messaging.batch.message_count` for batching APIs and **SHOULD NOT** use it for single-message APIs.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_BATCH_MESSAGE_COUNT = 'messaging.batch.message_count' as const;\n\n/**\n * A unique identifier for the client that consumes or produces a message.\n * \n * @example client-5\n * @example myhost@8742@s8083jm\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_CLIENT_ID = 'messaging.client.id' as const;\n\n/**\n * The name of the consumer group with which a consumer is associated.\n * \n * @example my-group\n * @example indexer\n * \n * @note Semantic conventions for individual messaging systems **SHOULD** document whether `messaging.consumer.group.name` is applicable and what it means in the context of that system.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_CONSUMER_GROUP_NAME = 'messaging.consumer.group.name' as const;\n\n/**\n * A boolean that is true if the message destination is anonymous (could be unnamed or have auto-generated name).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_ANONYMOUS = 'messaging.destination.anonymous' as const;\n\n/**\n * The message destination name\n * \n * @example MyQueue\n * @example MyTopic\n * \n * @note Destination name **SHOULD** uniquely identify a specific queue, topic or other entity within the broker. If\n * the broker doesn't have such notion, the destination name **SHOULD** uniquely identify the broker.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_NAME = 'messaging.destination.name' as const;\n\n/**\n * The identifier of the partition messages are sent to or received from, unique within the `messaging.destination.name`.\n * \n * @example \"1\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_PARTITION_ID = 'messaging.destination.partition.id' as const;\n\n/**\n * The name of the destination subscription from which a message is consumed.\n * \n * @example subscription-a\n * \n * @note Semantic conventions for individual messaging systems **SHOULD** document whether `messaging.destination.subscription.name` is applicable and what it means in the context of that system.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_SUBSCRIPTION_NAME = 'messaging.destination.subscription.name' as const;\n\n/**\n * Low cardinality representation of the messaging destination name\n * \n * @example /customers/{customerId}\n * \n * @note Destination names could be constructed from templates. An example would be a destination name involving a user name or product id. Although the destination name in this case is of high cardinality, the underlying template is of low cardinality and can be effectively used for grouping and aggregation.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_TEMPLATE = 'messaging.destination.template' as const;\n\n/**\n * A boolean that is true if the message destination is temporary and might not exist anymore after messages are processed.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_DESTINATION_TEMPORARY = 'messaging.destination.temporary' as const;\n\n/**\n * Deprecated, no replacement at this time.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated No replacement at this time.\n */\nexport const ATTR_MESSAGING_DESTINATION_PUBLISH_ANONYMOUS = 'messaging.destination_publish.anonymous' as const;\n\n/**\n * Deprecated, no replacement at this time.\n * \n * @example MyQueue\n * @example MyTopic\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated No replacement at this time.\n */\nexport const ATTR_MESSAGING_DESTINATION_PUBLISH_NAME = 'messaging.destination_publish.name' as const;\n\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n * \n * @example \"$Default\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.consumer.group.name`.\n */\nexport const ATTR_MESSAGING_EVENTHUBS_CONSUMER_GROUP = 'messaging.eventhubs.consumer.group' as const;\n\n/**\n * The UTC epoch seconds at which the message has been accepted and stored in the entity.\n * \n * @example 1701393730\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_EVENTHUBS_MESSAGE_ENQUEUED_TIME = 'messaging.eventhubs.message.enqueued_time' as const;\n\n/**\n * The ack deadline in seconds set for the modify ack deadline request.\n * \n * @example 10\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_DEADLINE = 'messaging.gcp_pubsub.message.ack_deadline' as const;\n\n/**\n * The ack id for a given message.\n * \n * @example \"ack_id\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ACK_ID = 'messaging.gcp_pubsub.message.ack_id' as const;\n\n/**\n * The delivery attempt for a given message.\n * \n * @example 2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_DELIVERY_ATTEMPT = 'messaging.gcp_pubsub.message.delivery_attempt' as const;\n\n/**\n * The ordering key for a given message. If the attribute is not present, the message does not have an ordering key.\n * \n * @example \"ordering_key\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_GCP_PUBSUB_MESSAGE_ORDERING_KEY = 'messaging.gcp_pubsub.message.ordering_key' as const;\n\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n * \n * @example \"my-group\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.consumer.group.name`.\n */\nexport const ATTR_MESSAGING_KAFKA_CONSUMER_GROUP = 'messaging.kafka.consumer.group' as const;\n\n/**\n * Deprecated, use `messaging.destination.partition.id` instead.\n * \n * @example 2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.destination.partition.id`.\n */\nexport const ATTR_MESSAGING_KAFKA_DESTINATION_PARTITION = 'messaging.kafka.destination.partition' as const;\n\n/**\n * Message keys in Kafka are used for grouping alike messages to ensure they're processed on the same partition. They differ from `messaging.message.id` in that they're not unique. If the key is `null`, the attribute **MUST NOT** be set.\n * \n * @example \"myKey\"\n * \n * @note If the key type is not string, it's string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don't include its value.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_KAFKA_MESSAGE_KEY = 'messaging.kafka.message.key' as const;\n\n/**\n * Deprecated, use `messaging.kafka.offset` instead.\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.kafka.offset`.\n */\nexport const ATTR_MESSAGING_KAFKA_MESSAGE_OFFSET = 'messaging.kafka.message.offset' as const;\n\n/**\n * A boolean that is true if the message is a tombstone.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_KAFKA_MESSAGE_TOMBSTONE = 'messaging.kafka.message.tombstone' as const;\n\n/**\n * The offset of a record in the corresponding Kafka partition.\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_KAFKA_OFFSET = 'messaging.kafka.offset' as const;\n\n/**\n * The size of the message body in bytes.\n * \n * @example 1439\n * \n * @note This can refer to both the compressed or uncompressed body size. If both sizes are known, the uncompressed\n * body size should be used.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_MESSAGE_BODY_SIZE = 'messaging.message.body.size' as const;\n\n/**\n * The conversation ID identifying the conversation to which the message belongs, represented as a string. Sometimes called \"Correlation ID\".\n * \n * @example \"MyConversationId\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_MESSAGE_CONVERSATION_ID = 'messaging.message.conversation_id' as const;\n\n/**\n * The size of the message body and metadata in bytes.\n * \n * @example 2738\n * \n * @note This can refer to both the compressed or uncompressed size. If both sizes are known, the uncompressed\n * size should be used.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_MESSAGE_ENVELOPE_SIZE = 'messaging.message.envelope.size' as const;\n\n/**\n * A value used by the messaging system as an identifier for the message, represented as a string.\n * \n * @example \"452a7c7c7c7048c2f887f61572b18fc2\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_MESSAGE_ID = 'messaging.message.id' as const;\n\n/**\n * Deprecated, use `messaging.operation.type` instead.\n * \n * @example publish\n * @example create\n * @example process\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.operation.type`.\n */\nexport const ATTR_MESSAGING_OPERATION = 'messaging.operation' as const;\n\n/**\n * The system-specific name of the messaging operation.\n * \n * @example ack\n * @example nack\n * @example send\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_OPERATION_NAME = 'messaging.operation.name' as const;\n\n/**\n * A string identifying the type of the messaging operation.\n * \n * @note If a custom value is used, it **MUST** be of low cardinality.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_OPERATION_TYPE = 'messaging.operation.type' as const;\n\n/**\n  * Enum value \"create\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_CREATE = \"create\" as const;\n\n/**\n  * Enum value \"deliver\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_DELIVER = \"deliver\" as const;\n\n/**\n  * Enum value \"process\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_PROCESS = \"process\" as const;\n\n/**\n  * Enum value \"publish\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_PUBLISH = \"publish\" as const;\n\n/**\n  * Enum value \"receive\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_RECEIVE = \"receive\" as const;\n\n/**\n  * Enum value \"send\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_SEND = \"send\" as const;\n\n/**\n  * Enum value \"settle\" for attribute {@link ATTR_MESSAGING_OPERATION_TYPE}.\n  */\nexport const MESSAGING_OPERATION_TYPE_VALUE_SETTLE = \"settle\" as const;\n\n/**\n * RabbitMQ message routing key.\n * \n * @example \"myKey\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_RABBITMQ_DESTINATION_ROUTING_KEY = 'messaging.rabbitmq.destination.routing_key' as const;\n\n/**\n * RabbitMQ message delivery tag\n * \n * @example 123\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_RABBITMQ_MESSAGE_DELIVERY_TAG = 'messaging.rabbitmq.message.delivery_tag' as const;\n\n/**\n * Deprecated, use `messaging.consumer.group.name` instead.\n * \n * @example \"myConsumerGroup\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.consumer.group.name` on the consumer spans. No replacement for producer spans.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_CLIENT_GROUP = 'messaging.rocketmq.client_group' as const;\n\n/**\n * Model of message consumption. This only applies to consumer spans.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL = 'messaging.rocketmq.consumption_model' as const;\n\n/**\n  * Enum value \"broadcasting\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL}.\n  */\nexport const MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_BROADCASTING = \"broadcasting\" as const;\n\n/**\n  * Enum value \"clustering\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_CONSUMPTION_MODEL}.\n  */\nexport const MESSAGING_ROCKETMQ_CONSUMPTION_MODEL_VALUE_CLUSTERING = \"clustering\" as const;\n\n/**\n * The delay time level for delay message, which determines the message delay time.\n * \n * @example 3\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELAY_TIME_LEVEL = 'messaging.rocketmq.message.delay_time_level' as const;\n\n/**\n * The timestamp in milliseconds that the delay message is expected to be delivered to consumer.\n * \n * @example 1665987217045\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_DELIVERY_TIMESTAMP = 'messaging.rocketmq.message.delivery_timestamp' as const;\n\n/**\n * It is essential for FIFO message. Messages that belong to the same message group are always processed one by one within the same consumer group.\n * \n * @example \"myMessageGroup\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_GROUP = 'messaging.rocketmq.message.group' as const;\n\n/**\n * Key(s) of message, another way to mark message besides message id.\n * \n * @example [\"keyA\", \"keyB\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_KEYS = 'messaging.rocketmq.message.keys' as const;\n\n/**\n * The secondary classifier of message besides topic.\n * \n * @example \"tagA\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_TAG = 'messaging.rocketmq.message.tag' as const;\n\n/**\n * Type of message.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE = 'messaging.rocketmq.message.type' as const;\n\n/**\n  * Enum value \"delay\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_DELAY = \"delay\" as const;\n\n/**\n  * Enum value \"fifo\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_FIFO = \"fifo\" as const;\n\n/**\n  * Enum value \"normal\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_NORMAL = \"normal\" as const;\n\n/**\n  * Enum value \"transaction\" for attribute {@link ATTR_MESSAGING_ROCKETMQ_MESSAGE_TYPE}.\n  */\nexport const MESSAGING_ROCKETMQ_MESSAGE_TYPE_VALUE_TRANSACTION = \"transaction\" as const;\n\n/**\n * Namespace of RocketMQ resources, resources in different namespaces are individual.\n * \n * @example \"myNamespace\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_ROCKETMQ_NAMESPACE = 'messaging.rocketmq.namespace' as const;\n\n/**\n * Deprecated, use `messaging.destination.subscription.name` instead.\n * \n * @example \"subscription-a\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `messaging.destination.subscription.name`.\n */\nexport const ATTR_MESSAGING_SERVICEBUS_DESTINATION_SUBSCRIPTION_NAME = 'messaging.servicebus.destination.subscription_name' as const;\n\n/**\n * Describes the [settlement type](https://learn.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement#peeklock).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS = 'messaging.servicebus.disposition_status' as const;\n\n/**\n  * Enum value \"abandon\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_ABANDON = \"abandon\" as const;\n\n/**\n  * Enum value \"complete\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_COMPLETE = \"complete\" as const;\n\n/**\n  * Enum value \"dead_letter\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEAD_LETTER = \"dead_letter\" as const;\n\n/**\n  * Enum value \"defer\" for attribute {@link ATTR_MESSAGING_SERVICEBUS_DISPOSITION_STATUS}.\n  */\nexport const MESSAGING_SERVICEBUS_DISPOSITION_STATUS_VALUE_DEFER = \"defer\" as const;\n\n/**\n * Number of deliveries that have been attempted for this message.\n * \n * @example 2\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_SERVICEBUS_MESSAGE_DELIVERY_COUNT = 'messaging.servicebus.message.delivery_count' as const;\n\n/**\n * The UTC epoch seconds at which the message has been accepted and stored in the entity.\n * \n * @example 1701393730\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_SERVICEBUS_MESSAGE_ENQUEUED_TIME = 'messaging.servicebus.message.enqueued_time' as const;\n\n/**\n * The messaging system as identified by the client instrumentation.\n * \n * @note The actual messaging system may differ from the one known by the client. For example, when using Kafka client libraries to communicate with Azure Event Hubs, the `messaging.system` is set to `kafka` based on the instrumentation's best knowledge.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_MESSAGING_SYSTEM = 'messaging.system' as const;\n\n/**\n  * Enum value \"activemq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_ACTIVEMQ = \"activemq\" as const;\n\n/**\n  * Enum value \"aws_sqs\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_AWS_SQS = \"aws_sqs\" as const;\n\n/**\n  * Enum value \"eventgrid\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_EVENTGRID = \"eventgrid\" as const;\n\n/**\n  * Enum value \"eventhubs\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_EVENTHUBS = \"eventhubs\" as const;\n\n/**\n  * Enum value \"gcp_pubsub\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_GCP_PUBSUB = \"gcp_pubsub\" as const;\n\n/**\n  * Enum value \"jms\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_JMS = \"jms\" as const;\n\n/**\n  * Enum value \"kafka\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_KAFKA = \"kafka\" as const;\n\n/**\n  * Enum value \"pulsar\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_PULSAR = \"pulsar\" as const;\n\n/**\n  * Enum value \"rabbitmq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_RABBITMQ = \"rabbitmq\" as const;\n\n/**\n  * Enum value \"rocketmq\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_ROCKETMQ = \"rocketmq\" as const;\n\n/**\n  * Enum value \"servicebus\" for attribute {@link ATTR_MESSAGING_SYSTEM}.\n  */\nexport const MESSAGING_SYSTEM_VALUE_SERVICEBUS = \"servicebus\" as const;\n\n/**\n * Deprecated, use `network.local.address`.\n * \n * @example \"192.168.0.1\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.local.address`.\n */\nexport const ATTR_NET_HOST_IP = 'net.host.ip' as const;\n\n/**\n * Deprecated, use `server.address`.\n * \n * @example example.com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.address`.\n */\nexport const ATTR_NET_HOST_NAME = 'net.host.name' as const;\n\n/**\n * Deprecated, use `server.port`.\n * \n * @example 8080\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.port`.\n */\nexport const ATTR_NET_HOST_PORT = 'net.host.port' as const;\n\n/**\n * Deprecated, use `network.peer.address`.\n * \n * @example \"127.0.0.1\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.peer.address`.\n */\nexport const ATTR_NET_PEER_IP = 'net.peer.ip' as const;\n\n/**\n * Deprecated, use `server.address` on client spans and `client.address` on server spans.\n * \n * @example example.com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.address` on client spans and `client.address` on server spans.\n */\nexport const ATTR_NET_PEER_NAME = 'net.peer.name' as const;\n\n/**\n * Deprecated, use `server.port` on client spans and `client.port` on server spans.\n * \n * @example 8080\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.port` on client spans and `client.port` on server spans.\n */\nexport const ATTR_NET_PEER_PORT = 'net.peer.port' as const;\n\n/**\n * Deprecated, use `network.protocol.name`.\n * \n * @example amqp\n * @example http\n * @example mqtt\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.protocol.name`.\n */\nexport const ATTR_NET_PROTOCOL_NAME = 'net.protocol.name' as const;\n\n/**\n * Deprecated, use `network.protocol.version`.\n * \n * @example \"3.1.1\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.protocol.version`.\n */\nexport const ATTR_NET_PROTOCOL_VERSION = 'net.protocol.version' as const;\n\n/**\n * Deprecated, use `network.transport` and `network.type`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Split to `network.transport` and `network.type`.\n */\nexport const ATTR_NET_SOCK_FAMILY = 'net.sock.family' as const;\n\n/**\n  * Enum value \"inet\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport const NET_SOCK_FAMILY_VALUE_INET = \"inet\" as const;\n\n/**\n  * Enum value \"inet6\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport const NET_SOCK_FAMILY_VALUE_INET6 = \"inet6\" as const;\n\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NET_SOCK_FAMILY}.\n  */\nexport const NET_SOCK_FAMILY_VALUE_UNIX = \"unix\" as const;\n\n/**\n * Deprecated, use `network.local.address`.\n * \n * @example /var/my.sock\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.local.address`.\n */\nexport const ATTR_NET_SOCK_HOST_ADDR = 'net.sock.host.addr' as const;\n\n/**\n * Deprecated, use `network.local.port`.\n * \n * @example 8080\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.local.port`.\n */\nexport const ATTR_NET_SOCK_HOST_PORT = 'net.sock.host.port' as const;\n\n/**\n * Deprecated, use `network.peer.address`.\n * \n * @example 192.168.0.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.peer.address`.\n */\nexport const ATTR_NET_SOCK_PEER_ADDR = 'net.sock.peer.addr' as const;\n\n/**\n * Deprecated, no replacement at this time.\n * \n * @example /var/my.sock\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Removed.\n */\nexport const ATTR_NET_SOCK_PEER_NAME = 'net.sock.peer.name' as const;\n\n/**\n * Deprecated, use `network.peer.port`.\n * \n * @example 65531\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.peer.port`.\n */\nexport const ATTR_NET_SOCK_PEER_PORT = 'net.sock.peer.port' as const;\n\n/**\n * Deprecated, use `network.transport`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `network.transport`.\n */\nexport const ATTR_NET_TRANSPORT = 'net.transport' as const;\n\n/**\n  * Enum value \"inproc\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport const NET_TRANSPORT_VALUE_INPROC = \"inproc\" as const;\n\n/**\n  * Enum value \"ip_tcp\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport const NET_TRANSPORT_VALUE_IP_TCP = \"ip_tcp\" as const;\n\n/**\n  * Enum value \"ip_udp\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport const NET_TRANSPORT_VALUE_IP_UDP = \"ip_udp\" as const;\n\n/**\n  * Enum value \"other\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport const NET_TRANSPORT_VALUE_OTHER = \"other\" as const;\n\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NET_TRANSPORT}.\n  */\nexport const NET_TRANSPORT_VALUE_PIPE = \"pipe\" as const;\n\n/**\n * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n * \n * @example \"DE\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CARRIER_ICC = 'network.carrier.icc' as const;\n\n/**\n * The mobile carrier country code.\n * \n * @example \"310\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CARRIER_MCC = 'network.carrier.mcc' as const;\n\n/**\n * The mobile carrier network code.\n * \n * @example \"001\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CARRIER_MNC = 'network.carrier.mnc' as const;\n\n/**\n * The name of the mobile carrier.\n * \n * @example \"sprint\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CARRIER_NAME = 'network.carrier.name' as const;\n\n/**\n * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n * \n * @example \"LTE\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CONNECTION_SUBTYPE = 'network.connection.subtype' as const;\n\n/**\n  * Enum value \"cdma\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA = \"cdma\" as const;\n\n/**\n  * Enum value \"cdma2000_1xrtt\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_CDMA2000_1XRTT = \"cdma2000_1xrtt\" as const;\n\n/**\n  * Enum value \"edge\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_EDGE = \"edge\" as const;\n\n/**\n  * Enum value \"ehrpd\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_EHRPD = \"ehrpd\" as const;\n\n/**\n  * Enum value \"evdo_0\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_0 = \"evdo_0\" as const;\n\n/**\n  * Enum value \"evdo_a\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_A = \"evdo_a\" as const;\n\n/**\n  * Enum value \"evdo_b\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_EVDO_B = \"evdo_b\" as const;\n\n/**\n  * Enum value \"gprs\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_GPRS = \"gprs\" as const;\n\n/**\n  * Enum value \"gsm\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_GSM = \"gsm\" as const;\n\n/**\n  * Enum value \"hsdpa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_HSDPA = \"hsdpa\" as const;\n\n/**\n  * Enum value \"hspa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_HSPA = \"hspa\" as const;\n\n/**\n  * Enum value \"hspap\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_HSPAP = \"hspap\" as const;\n\n/**\n  * Enum value \"hsupa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_HSUPA = \"hsupa\" as const;\n\n/**\n  * Enum value \"iden\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_IDEN = \"iden\" as const;\n\n/**\n  * Enum value \"iwlan\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_IWLAN = \"iwlan\" as const;\n\n/**\n  * Enum value \"lte\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_LTE = \"lte\" as const;\n\n/**\n  * Enum value \"lte_ca\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_LTE_CA = \"lte_ca\" as const;\n\n/**\n  * Enum value \"nr\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_NR = \"nr\" as const;\n\n/**\n  * Enum value \"nrnsa\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_NRNSA = \"nrnsa\" as const;\n\n/**\n  * Enum value \"td_scdma\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_TD_SCDMA = \"td_scdma\" as const;\n\n/**\n  * Enum value \"umts\" for attribute {@link ATTR_NETWORK_CONNECTION_SUBTYPE}.\n  */\nexport const NETWORK_CONNECTION_SUBTYPE_VALUE_UMTS = \"umts\" as const;\n\n/**\n * The internet connection type.\n * \n * @example \"wifi\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_CONNECTION_TYPE = 'network.connection.type' as const;\n\n/**\n  * Enum value \"cell\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport const NETWORK_CONNECTION_TYPE_VALUE_CELL = \"cell\" as const;\n\n/**\n  * Enum value \"unavailable\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport const NETWORK_CONNECTION_TYPE_VALUE_UNAVAILABLE = \"unavailable\" as const;\n\n/**\n  * Enum value \"unknown\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport const NETWORK_CONNECTION_TYPE_VALUE_UNKNOWN = \"unknown\" as const;\n\n/**\n  * Enum value \"wifi\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport const NETWORK_CONNECTION_TYPE_VALUE_WIFI = \"wifi\" as const;\n\n/**\n  * Enum value \"wired\" for attribute {@link ATTR_NETWORK_CONNECTION_TYPE}.\n  */\nexport const NETWORK_CONNECTION_TYPE_VALUE_WIRED = \"wired\" as const;\n\n/**\n * The network IO operation direction.\n * \n * @example transmit\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NETWORK_IO_DIRECTION = 'network.io.direction' as const;\n\n/**\n  * Enum value \"receive\" for attribute {@link ATTR_NETWORK_IO_DIRECTION}.\n  */\nexport const NETWORK_IO_DIRECTION_VALUE_RECEIVE = \"receive\" as const;\n\n/**\n  * Enum value \"transmit\" for attribute {@link ATTR_NETWORK_IO_DIRECTION}.\n  */\nexport const NETWORK_IO_DIRECTION_VALUE_TRANSMIT = \"transmit\" as const;\n\n/**\n * The state of event loop time.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_NODEJS_EVENTLOOP_STATE = 'nodejs.eventloop.state' as const;\n\n/**\n  * Enum value \"active\" for attribute {@link ATTR_NODEJS_EVENTLOOP_STATE}.\n  */\nexport const NODEJS_EVENTLOOP_STATE_VALUE_ACTIVE = \"active\" as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_NODEJS_EVENTLOOP_STATE}.\n  */\nexport const NODEJS_EVENTLOOP_STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n * The digest of the OCI image manifest. For container images specifically is the digest by which the container image is known.\n * \n * @example sha256:e4ca62c0d62f3e886e684806dfe9d4e0cda60d54986898173c1083856cfda0f4\n * \n * @note Follows [OCI Image Manifest Specification](https://github.com/opencontainers/image-spec/blob/main/manifest.md), and specifically the [Digest property](https://github.com/opencontainers/image-spec/blob/main/descriptor.md#digests).\n * An example can be found in [Example Image Manifest](https://docs.docker.com/registry/spec/manifest-v2-2/#example-image-manifest).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OCI_MANIFEST_DIGEST = 'oci.manifest.digest' as const;\n\n/**\n * Parent-child Reference type\n * \n * @note The causal relationship between a child Span and a parent Span.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OPENTRACING_REF_TYPE = 'opentracing.ref_type' as const;\n\n/**\n  * Enum value \"child_of\" for attribute {@link ATTR_OPENTRACING_REF_TYPE}.\n  */\nexport const OPENTRACING_REF_TYPE_VALUE_CHILD_OF = \"child_of\" as const;\n\n/**\n  * Enum value \"follows_from\" for attribute {@link ATTR_OPENTRACING_REF_TYPE}.\n  */\nexport const OPENTRACING_REF_TYPE_VALUE_FOLLOWS_FROM = \"follows_from\" as const;\n\n/**\n * Unique identifier for a particular build or compilation of the operating system.\n * \n * @example TQ3C.230805.001.B2\n * @example 20E247\n * @example 22621\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OS_BUILD_ID = 'os.build_id' as const;\n\n/**\n * Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.\n * \n * @example Microsoft Windows [Version 10.0.18363.778]\n * @example Ubuntu 18.04.1 LTS\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OS_DESCRIPTION = 'os.description' as const;\n\n/**\n * Human readable operating system name.\n * \n * @example iOS\n * @example Android\n * @example Ubuntu\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OS_NAME = 'os.name' as const;\n\n/**\n * The operating system type.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OS_TYPE = 'os.type' as const;\n\n/**\n  * Enum value \"aix\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_AIX = \"aix\" as const;\n\n/**\n  * Enum value \"darwin\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_DARWIN = \"darwin\" as const;\n\n/**\n  * Enum value \"dragonflybsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_DRAGONFLYBSD = \"dragonflybsd\" as const;\n\n/**\n  * Enum value \"freebsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_FREEBSD = \"freebsd\" as const;\n\n/**\n  * Enum value \"hpux\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_HPUX = \"hpux\" as const;\n\n/**\n  * Enum value \"linux\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_LINUX = \"linux\" as const;\n\n/**\n  * Enum value \"netbsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_NETBSD = \"netbsd\" as const;\n\n/**\n  * Enum value \"openbsd\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_OPENBSD = \"openbsd\" as const;\n\n/**\n  * Enum value \"solaris\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_SOLARIS = \"solaris\" as const;\n\n/**\n  * Enum value \"windows\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_WINDOWS = \"windows\" as const;\n\n/**\n  * Enum value \"z_os\" for attribute {@link ATTR_OS_TYPE}.\n  */\nexport const OS_TYPE_VALUE_Z_OS = \"z_os\" as const;\n\n/**\n * The version string of the operating system as defined in [Version Attributes](/docs/resource/README.md#version-attributes).\n * \n * @example 14.2.1\n * @example 18.04.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_OS_VERSION = 'os.version' as const;\n\n/**\n * Deprecated. Use the `otel.scope.name` attribute\n * \n * @example io.opentelemetry.contrib.mongodb\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Use the `otel.scope.name` attribute.\n */\nexport const ATTR_OTEL_LIBRARY_NAME = 'otel.library.name' as const;\n\n/**\n * Deprecated. Use the `otel.scope.version` attribute.\n * \n * @example 1.0.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Use the `otel.scope.version` attribute.\n */\nexport const ATTR_OTEL_LIBRARY_VERSION = 'otel.library.version' as const;\n\n/**\n * The [`service.name`](/docs/resource/README.md#service) of the remote service. **SHOULD** be equal to the actual `service.name` resource attribute of the remote service if any.\n * \n * @example \"AuthTokenCache\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PEER_SERVICE = 'peer.service' as const;\n\n/**\n * Deprecated, use `db.client.connection.pool.name` instead.\n * \n * @example myDataSource\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.client.connection.pool.name`.\n */\nexport const ATTR_POOL_NAME = 'pool.name' as const;\n\n/**\n * Length of the process.command_args array\n * \n * @example 4\n * \n * @note This field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_ARGS_COUNT = 'process.args_count' as const;\n\n/**\n * The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.\n * \n * @example cmd/otelcol\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_COMMAND = 'process.command' as const;\n\n/**\n * All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.\n * \n * @example [\"cmd/otecol\", \"--config=config.yaml\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_COMMAND_ARGS = 'process.command_args' as const;\n\n/**\n * The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.\n * \n * @example C:\\\\cmd\\\\otecol --config=\"my directory\\\\config.yaml\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_COMMAND_LINE = 'process.command_line' as const;\n\n/**\n * Specifies whether the context switches for this data point were voluntary or involuntary.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_CONTEXT_SWITCH_TYPE = 'process.context_switch_type' as const;\n\n/**\n  * Enum value \"involuntary\" for attribute {@link ATTR_PROCESS_CONTEXT_SWITCH_TYPE}.\n  */\nexport const PROCESS_CONTEXT_SWITCH_TYPE_VALUE_INVOLUNTARY = \"involuntary\" as const;\n\n/**\n  * Enum value \"voluntary\" for attribute {@link ATTR_PROCESS_CONTEXT_SWITCH_TYPE}.\n  */\nexport const PROCESS_CONTEXT_SWITCH_TYPE_VALUE_VOLUNTARY = \"voluntary\" as const;\n\n/**\n * Deprecated, use `cpu.mode` instead.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `cpu.mode`\n */\nexport const ATTR_PROCESS_CPU_STATE = 'process.cpu.state' as const;\n\n/**\n  * Enum value \"system\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport const PROCESS_CPU_STATE_VALUE_SYSTEM = \"system\" as const;\n\n/**\n  * Enum value \"user\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport const PROCESS_CPU_STATE_VALUE_USER = \"user\" as const;\n\n/**\n  * Enum value \"wait\" for attribute {@link ATTR_PROCESS_CPU_STATE}.\n  */\nexport const PROCESS_CPU_STATE_VALUE_WAIT = \"wait\" as const;\n\n/**\n * The date and time the process was created, in ISO 8601 format.\n * \n * @example 2023-11-21T09:25:34.853Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_CREATION_TIME = 'process.creation.time' as const;\n\n/**\n * The GNU build ID as found in the `.note.gnu.build-id` ELF section (hex string).\n * \n * @example c89b11207f6479603b0d49bf291c092c2b719293\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXECUTABLE_BUILD_ID_GNU = 'process.executable.build_id.gnu' as const;\n\n/**\n * The Go build ID as retrieved by `go tool buildid <go executable>`.\n * \n * @example foh3mEXu7BLZjsN9pOwG/kATcXlYVCDEFouRMQed_/WwRFB1hPo9LBkekthSPG/x8hMC8emW2cCjXD0_1aY\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXECUTABLE_BUILD_ID_GO = 'process.executable.build_id.go' as const;\n\n/**\n * Profiling specific build ID for executables. See the OTel specification for Profiles for more information.\n * \n * @example 600DCAFE4A110000F2BF38C493F5FB92\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXECUTABLE_BUILD_ID_PROFILING = 'process.executable.build_id.profiling' as const;\n\n/**\n * The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.\n * \n * @example otelcol\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXECUTABLE_NAME = 'process.executable.name' as const;\n\n/**\n * The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.\n * \n * @example /usr/bin/cmd/otelcol\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXECUTABLE_PATH = 'process.executable.path' as const;\n\n/**\n * The exit code of the process.\n * \n * @example 127\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXIT_CODE = 'process.exit.code' as const;\n\n/**\n * The date and time the process exited, in ISO 8601 format.\n * \n * @example 2023-11-21T09:26:12.315Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_EXIT_TIME = 'process.exit.time' as const;\n\n/**\n * The PID of the process's group leader. This is also the process group ID (PGID) of the process.\n * \n * @example 23\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_GROUP_LEADER_PID = 'process.group_leader.pid' as const;\n\n/**\n * Whether the process is connected to an interactive shell.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_INTERACTIVE = 'process.interactive' as const;\n\n/**\n * The username of the user that owns the process.\n * \n * @example root\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_OWNER = 'process.owner' as const;\n\n/**\n * The type of page fault for this data point. Type `major` is for major/hard page faults, and `minor` is for minor/soft page faults.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_PAGING_FAULT_TYPE = 'process.paging.fault_type' as const;\n\n/**\n  * Enum value \"major\" for attribute {@link ATTR_PROCESS_PAGING_FAULT_TYPE}.\n  */\nexport const PROCESS_PAGING_FAULT_TYPE_VALUE_MAJOR = \"major\" as const;\n\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_PROCESS_PAGING_FAULT_TYPE}.\n  */\nexport const PROCESS_PAGING_FAULT_TYPE_VALUE_MINOR = \"minor\" as const;\n\n/**\n * Parent Process identifier (PPID).\n * \n * @example 111\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_PARENT_PID = 'process.parent_pid' as const;\n\n/**\n * Process identifier (PID).\n * \n * @example 1234\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_PID = 'process.pid' as const;\n\n/**\n * The real user ID (RUID) of the process.\n * \n * @example 1000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_REAL_USER_ID = 'process.real_user.id' as const;\n\n/**\n * The username of the real user of the process.\n * \n * @example operator\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_REAL_USER_NAME = 'process.real_user.name' as const;\n\n/**\n * An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.\n * \n * @example \"Eclipse OpenJ9 Eclipse OpenJ9 VM openj9-0.21.0\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_RUNTIME_DESCRIPTION = 'process.runtime.description' as const;\n\n/**\n * The name of the runtime of this process.\n * \n * @example OpenJDK Runtime Environment\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_RUNTIME_NAME = 'process.runtime.name' as const;\n\n/**\n * The version of the runtime of this process, as returned by the runtime without modification.\n * \n * @example \"14.0.2\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_RUNTIME_VERSION = 'process.runtime.version' as const;\n\n/**\n * The saved user ID (SUID) of the process.\n * \n * @example 1002\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_SAVED_USER_ID = 'process.saved_user.id' as const;\n\n/**\n * The username of the saved user.\n * \n * @example operator\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_SAVED_USER_NAME = 'process.saved_user.name' as const;\n\n/**\n * The PID of the process's session leader. This is also the session ID (SID) of the process.\n * \n * @example 14\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_SESSION_LEADER_PID = 'process.session_leader.pid' as const;\n\n/**\n * Process title (proctitle)\n * \n * @example cat /etc/hostname\n * @example xfce4-session\n * @example bash\n * \n * @note In many Unix-like systems, process title (proctitle), is the string that represents the name or command line of a running process, displayed by system monitoring tools like ps, top, and htop.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_TITLE = 'process.title' as const;\n\n/**\n * The effective user ID (EUID) of the process.\n * \n * @example 1001\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_USER_ID = 'process.user.id' as const;\n\n/**\n * The username of the effective user of the process.\n * \n * @example root\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_USER_NAME = 'process.user.name' as const;\n\n/**\n * Virtual process identifier.\n * \n * @example 12\n * \n * @note The process ID within a PID namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_VPID = 'process.vpid' as const;\n\n/**\n * The working directory of the process.\n * \n * @example /root\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROCESS_WORKING_DIRECTORY = 'process.working_directory' as const;\n\n/**\n * Describes the interpreter or compiler of a single frame.\n * \n * @example cpython\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_PROFILE_FRAME_TYPE = 'profile.frame.type' as const;\n\n/**\n  * Enum value \"cpython\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_CPYTHON = \"cpython\" as const;\n\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_DOTNET = \"dotnet\" as const;\n\n/**\n  * Enum value \"jvm\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_JVM = \"jvm\" as const;\n\n/**\n  * Enum value \"kernel\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_KERNEL = \"kernel\" as const;\n\n/**\n  * Enum value \"native\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_NATIVE = \"native\" as const;\n\n/**\n  * Enum value \"perl\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_PERL = \"perl\" as const;\n\n/**\n  * Enum value \"php\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_PHP = \"php\" as const;\n\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_RUBY = \"ruby\" as const;\n\n/**\n  * Enum value \"v8js\" for attribute {@link ATTR_PROFILE_FRAME_TYPE}.\n  */\nexport const PROFILE_FRAME_TYPE_VALUE_V8JS = \"v8js\" as const;\n\n/**\n * The [error codes](https://connect.build/docs/protocol/#error-codes) of the Connect request. Error codes are always string values.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_CONNECT_RPC_ERROR_CODE = 'rpc.connect_rpc.error_code' as const;\n\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_ABORTED = \"aborted\" as const;\n\n/**\n  * Enum value \"already_exists\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_ALREADY_EXISTS = \"already_exists\" as const;\n\n/**\n  * Enum value \"cancelled\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_CANCELLED = \"cancelled\" as const;\n\n/**\n  * Enum value \"data_loss\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_DATA_LOSS = \"data_loss\" as const;\n\n/**\n  * Enum value \"deadline_exceeded\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_DEADLINE_EXCEEDED = \"deadline_exceeded\" as const;\n\n/**\n  * Enum value \"failed_precondition\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_FAILED_PRECONDITION = \"failed_precondition\" as const;\n\n/**\n  * Enum value \"internal\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_INTERNAL = \"internal\" as const;\n\n/**\n  * Enum value \"invalid_argument\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_INVALID_ARGUMENT = \"invalid_argument\" as const;\n\n/**\n  * Enum value \"not_found\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_NOT_FOUND = \"not_found\" as const;\n\n/**\n  * Enum value \"out_of_range\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_OUT_OF_RANGE = \"out_of_range\" as const;\n\n/**\n  * Enum value \"permission_denied\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_PERMISSION_DENIED = \"permission_denied\" as const;\n\n/**\n  * Enum value \"resource_exhausted\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_RESOURCE_EXHAUSTED = \"resource_exhausted\" as const;\n\n/**\n  * Enum value \"unauthenticated\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAUTHENTICATED = \"unauthenticated\" as const;\n\n/**\n  * Enum value \"unavailable\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNAVAILABLE = \"unavailable\" as const;\n\n/**\n  * Enum value \"unimplemented\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNIMPLEMENTED = \"unimplemented\" as const;\n\n/**\n  * Enum value \"unknown\" for attribute {@link ATTR_RPC_CONNECT_RPC_ERROR_CODE}.\n  */\nexport const RPC_CONNECT_RPC_ERROR_CODE_VALUE_UNKNOWN = \"unknown\" as const;\n\n/**\n * Connect request metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.\n * \n * @example rpc.request.metadata.my-custom-metadata-attribute=[\"1.2.3.4\", \"1.2.3.5\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all request metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_CONNECT_RPC_REQUEST_METADATA = (key: string) => `rpc.connect_rpc.request.metadata.${key}`;\n\n/**\n * Connect response metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.\n * \n * @example rpc.response.metadata.my-custom-metadata-attribute=[\"attribute_value\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all response metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_CONNECT_RPC_RESPONSE_METADATA = (key: string) => `rpc.connect_rpc.response.metadata.${key}`;\n\n/**\n * gRPC request metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.\n * \n * @example rpc.grpc.request.metadata.my-custom-metadata-attribute=[\"1.2.3.4\", \"1.2.3.5\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all request metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_GRPC_REQUEST_METADATA = (key: string) => `rpc.grpc.request.metadata.${key}`;\n\n/**\n * gRPC response metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.\n * \n * @example rpc.grpc.response.metadata.my-custom-metadata-attribute=[\"attribute_value\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which metadata values are to be captured. Including all response metadata values can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_GRPC_RESPONSE_METADATA = (key: string) => `rpc.grpc.response.metadata.${key}`;\n\n/**\n * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_GRPC_STATUS_CODE = 'rpc.grpc.status_code' as const;\n\n/**\n  * Enum value 0 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_OK = 0 as const;\n\n/**\n  * Enum value 1 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_CANCELLED = 1 as const;\n\n/**\n  * Enum value 2 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_UNKNOWN = 2 as const;\n\n/**\n  * Enum value 3 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_INVALID_ARGUMENT = 3 as const;\n\n/**\n  * Enum value 4 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_DEADLINE_EXCEEDED = 4 as const;\n\n/**\n  * Enum value 5 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_NOT_FOUND = 5 as const;\n\n/**\n  * Enum value 6 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_ALREADY_EXISTS = 6 as const;\n\n/**\n  * Enum value 7 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_PERMISSION_DENIED = 7 as const;\n\n/**\n  * Enum value 8 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_RESOURCE_EXHAUSTED = 8 as const;\n\n/**\n  * Enum value 9 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_FAILED_PRECONDITION = 9 as const;\n\n/**\n  * Enum value 10 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_ABORTED = 10 as const;\n\n/**\n  * Enum value 11 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_OUT_OF_RANGE = 11 as const;\n\n/**\n  * Enum value 12 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_UNIMPLEMENTED = 12 as const;\n\n/**\n  * Enum value 13 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_INTERNAL = 13 as const;\n\n/**\n  * Enum value 14 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_UNAVAILABLE = 14 as const;\n\n/**\n  * Enum value 15 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_DATA_LOSS = 15 as const;\n\n/**\n  * Enum value 16 for attribute {@link ATTR_RPC_GRPC_STATUS_CODE}.\n  */\nexport const RPC_GRPC_STATUS_CODE_VALUE_UNAUTHENTICATED = 16 as const;\n\n/**\n * `error.code` property of response if it is an error response.\n * \n * @example -32700\n * @example 100\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_JSONRPC_ERROR_CODE = 'rpc.jsonrpc.error_code' as const;\n\n/**\n * `error.message` property of response if it is an error response.\n * \n * @example Parse error\n * @example User already exists\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_JSONRPC_ERROR_MESSAGE = 'rpc.jsonrpc.error_message' as const;\n\n/**\n * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n * \n * @example 10\n * @example request-7\n * @example\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_JSONRPC_REQUEST_ID = 'rpc.jsonrpc.request_id' as const;\n\n/**\n * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 doesn't specify this, the value can be omitted.\n * \n * @example 2.0\n * @example 1.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_JSONRPC_VERSION = 'rpc.jsonrpc.version' as const;\n\n/**\n * Compressed size of the message in bytes.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_MESSAGE_COMPRESSED_SIZE = 'rpc.message.compressed_size' as const;\n\n/**\n * **MUST** be calculated as two different counters starting from `1` one for sent messages and one for received message.\n * \n * @note This way we guarantee that the values will be consistent between different implementations.\n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_MESSAGE_ID = 'rpc.message.id' as const;\n\n/**\n * Whether this is a received or sent message.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_MESSAGE_TYPE = 'rpc.message.type' as const;\n\n/**\n  * Enum value \"RECEIVED\" for attribute {@link ATTR_RPC_MESSAGE_TYPE}.\n  */\nexport const RPC_MESSAGE_TYPE_VALUE_RECEIVED = \"RECEIVED\" as const;\n\n/**\n  * Enum value \"SENT\" for attribute {@link ATTR_RPC_MESSAGE_TYPE}.\n  */\nexport const RPC_MESSAGE_TYPE_VALUE_SENT = \"SENT\" as const;\n\n/**\n * Uncompressed size of the message in bytes.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_MESSAGE_UNCOMPRESSED_SIZE = 'rpc.message.uncompressed_size' as const;\n\n/**\n * The name of the (logical) method being called, must be equal to the $method part in the span name.\n * \n * @example \"exampleMethod\"\n * \n * @note This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_METHOD = 'rpc.method' as const;\n\n/**\n * The full (logical) name of the service being called, including its package name, if applicable.\n * \n * @example \"myservice.EchoService\"\n * \n * @note This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_SERVICE = 'rpc.service' as const;\n\n/**\n * A string identifying the remoting system. See below for a list of well-known identifiers.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_RPC_SYSTEM = 'rpc.system' as const;\n\n/**\n  * Enum value \"apache_dubbo\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport const RPC_SYSTEM_VALUE_APACHE_DUBBO = \"apache_dubbo\" as const;\n\n/**\n  * Enum value \"connect_rpc\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport const RPC_SYSTEM_VALUE_CONNECT_RPC = \"connect_rpc\" as const;\n\n/**\n  * Enum value \"dotnet_wcf\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport const RPC_SYSTEM_VALUE_DOTNET_WCF = \"dotnet_wcf\" as const;\n\n/**\n  * Enum value \"grpc\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport const RPC_SYSTEM_VALUE_GRPC = \"grpc\" as const;\n\n/**\n  * Enum value \"java_rmi\" for attribute {@link ATTR_RPC_SYSTEM}.\n  */\nexport const RPC_SYSTEM_VALUE_JAVA_RMI = \"java_rmi\" as const;\n\n/**\n * The string ID of the service instance.\n * \n * @example 627cc493-f310-47de-96bd-71410b7dec09\n * \n * @note **MUST** be unique for each instance of the same `service.namespace,service.name` pair (in other words\n * `service.namespace,service.name,service.instance.id` triplet **MUST** be globally unique). The ID helps to\n * distinguish instances of the same service that exist at the same time (e.g. instances of a horizontally scaled\n * service).\n * \n * Implementations, such as SDKs, are recommended to generate a random Version 1 or Version 4 [RFC\n * 4122](https://www.ietf.org/rfc/rfc4122.txt) UUID, but are free to use an inherent unique ID as the source of\n * this value if stability is desirable. In that case, the ID **SHOULD** be used as source of a UUID Version 5 and\n * **SHOULD** use the following UUID as the namespace: `4d63009a-8d0f-11ee-aad7-4c796ed8e320`.\n * \n * UUIDs are typically recommended, as only an opaque value for the purposes of identifying a service instance is\n * needed. Similar to what can be seen in the man page for the\n * [`/etc/machine-id`](https://www.freedesktop.org/software/systemd/man/machine-id.html) file, the underlying\n * data, such as pod name and namespace should be treated as confidential, being the user's choice to expose it\n * or not via another resource attribute.\n * \n * For applications running behind an application server (like unicorn), we do not recommend using one identifier\n * for all processes participating in the application. Instead, it's recommended each division (e.g. a worker\n * thread in unicorn) to have its own instance.id.\n * \n * It's not recommended for a Collector to set `service.instance.id` if it can't unambiguously determine the\n * service instance that is generating that telemetry. For instance, creating an UUID based on `pod.name` will\n * likely be wrong, as the Collector might not know from which container within that pod the telemetry originated.\n * However, Collectors can set the `service.instance.id` if they can unambiguously determine the service instance\n * for that telemetry. This is typically the case for scraping receivers, as they know the target address and\n * port.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SERVICE_INSTANCE_ID = 'service.instance.id' as const;\n\n/**\n * A namespace for `service.name`.\n * \n * @example Shop\n * \n * @note A string value having a meaning that helps to distinguish a group of services, for example the team name that owns a group of services. `service.name` is expected to be unique within the same namespace. If `service.namespace` is not specified in the Resource then `service.name` is expected to be unique for all services that have no explicit namespace defined (so the empty/unspecified namespace is simply one more valid namespace). Zero-length namespace string is assumed equal to unspecified namespace.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SERVICE_NAMESPACE = 'service.namespace' as const;\n\n/**\n * A unique id to identify a session.\n * \n * @example \"00112233-4455-6677-8899-aabbccddeeff\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SESSION_ID = 'session.id' as const;\n\n/**\n * The previous `session.id` for this user, when known.\n * \n * @example \"00112233-4455-6677-8899-aabbccddeeff\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SESSION_PREVIOUS_ID = 'session.previous_id' as const;\n\n/**\n * Source address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example source.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the destination side, and when communicating through an intermediary, `source.address` **SHOULD** represent the source address behind any intermediaries, for example proxies, if it's available.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SOURCE_ADDRESS = 'source.address' as const;\n\n/**\n * Source port number\n * \n * @example 3389\n * @example 2888\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SOURCE_PORT = 'source.port' as const;\n\n/**\n * Deprecated, use `db.client.connection.state` instead.\n * \n * @example idle\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `db.client.connection.state`.\n */\nexport const ATTR_STATE = 'state' as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_STATE}.\n  */\nexport const STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_STATE}.\n  */\nexport const STATE_VALUE_USED = \"used\" as const;\n\n/**\n * The logical CPU number [0..n-1]\n * \n * @example 1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_CPU_LOGICAL_NUMBER = 'system.cpu.logical_number' as const;\n\n/**\n * Deprecated, use `cpu.mode` instead.\n * \n * @example idle\n * @example interrupt\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `cpu.mode`\n */\nexport const ATTR_SYSTEM_CPU_STATE = 'system.cpu.state' as const;\n\n/**\n  * Enum value \"idle\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_IDLE = \"idle\" as const;\n\n/**\n  * Enum value \"interrupt\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_INTERRUPT = \"interrupt\" as const;\n\n/**\n  * Enum value \"iowait\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_IOWAIT = \"iowait\" as const;\n\n/**\n  * Enum value \"nice\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_NICE = \"nice\" as const;\n\n/**\n  * Enum value \"steal\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_STEAL = \"steal\" as const;\n\n/**\n  * Enum value \"system\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_SYSTEM = \"system\" as const;\n\n/**\n  * Enum value \"user\" for attribute {@link ATTR_SYSTEM_CPU_STATE}.\n  */\nexport const SYSTEM_CPU_STATE_VALUE_USER = \"user\" as const;\n\n/**\n * The device identifier\n * \n * @example (identifier)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_DEVICE = 'system.device' as const;\n\n/**\n * The filesystem mode\n * \n * @example rw, ro\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_FILESYSTEM_MODE = 'system.filesystem.mode' as const;\n\n/**\n * The filesystem mount path\n * \n * @example /mnt/data\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_FILESYSTEM_MOUNTPOINT = 'system.filesystem.mountpoint' as const;\n\n/**\n * The filesystem state\n * \n * @example used\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_FILESYSTEM_STATE = 'system.filesystem.state' as const;\n\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport const SYSTEM_FILESYSTEM_STATE_VALUE_FREE = \"free\" as const;\n\n/**\n  * Enum value \"reserved\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport const SYSTEM_FILESYSTEM_STATE_VALUE_RESERVED = \"reserved\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_STATE}.\n  */\nexport const SYSTEM_FILESYSTEM_STATE_VALUE_USED = \"used\" as const;\n\n/**\n * The filesystem type\n * \n * @example ext4\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_FILESYSTEM_TYPE = 'system.filesystem.type' as const;\n\n/**\n  * Enum value \"exfat\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_EXFAT = \"exfat\" as const;\n\n/**\n  * Enum value \"ext4\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_EXT4 = \"ext4\" as const;\n\n/**\n  * Enum value \"fat32\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_FAT32 = \"fat32\" as const;\n\n/**\n  * Enum value \"hfsplus\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_HFSPLUS = \"hfsplus\" as const;\n\n/**\n  * Enum value \"ntfs\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_NTFS = \"ntfs\" as const;\n\n/**\n  * Enum value \"refs\" for attribute {@link ATTR_SYSTEM_FILESYSTEM_TYPE}.\n  */\nexport const SYSTEM_FILESYSTEM_TYPE_VALUE_REFS = \"refs\" as const;\n\n/**\n * The memory state\n * \n * @example free\n * @example cached\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_MEMORY_STATE = 'system.memory.state' as const;\n\n/**\n  * Enum value \"buffers\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport const SYSTEM_MEMORY_STATE_VALUE_BUFFERS = \"buffers\" as const;\n\n/**\n  * Enum value \"cached\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport const SYSTEM_MEMORY_STATE_VALUE_CACHED = \"cached\" as const;\n\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport const SYSTEM_MEMORY_STATE_VALUE_FREE = \"free\" as const;\n\n/**\n  * Enum value \"shared\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport const SYSTEM_MEMORY_STATE_VALUE_SHARED = \"shared\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_MEMORY_STATE}.\n  */\nexport const SYSTEM_MEMORY_STATE_VALUE_USED = \"used\" as const;\n\n/**\n * A stateless protocol **MUST NOT** set this attribute\n * \n * @example close_wait\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_NETWORK_STATE = 'system.network.state' as const;\n\n/**\n  * Enum value \"close\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_CLOSE = \"close\" as const;\n\n/**\n  * Enum value \"close_wait\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_CLOSE_WAIT = \"close_wait\" as const;\n\n/**\n  * Enum value \"closing\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_CLOSING = \"closing\" as const;\n\n/**\n  * Enum value \"delete\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_DELETE = \"delete\" as const;\n\n/**\n  * Enum value \"established\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_ESTABLISHED = \"established\" as const;\n\n/**\n  * Enum value \"fin_wait_1\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_1 = \"fin_wait_1\" as const;\n\n/**\n  * Enum value \"fin_wait_2\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_FIN_WAIT_2 = \"fin_wait_2\" as const;\n\n/**\n  * Enum value \"last_ack\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_LAST_ACK = \"last_ack\" as const;\n\n/**\n  * Enum value \"listen\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_LISTEN = \"listen\" as const;\n\n/**\n  * Enum value \"syn_recv\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_SYN_RECV = \"syn_recv\" as const;\n\n/**\n  * Enum value \"syn_sent\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_SYN_SENT = \"syn_sent\" as const;\n\n/**\n  * Enum value \"time_wait\" for attribute {@link ATTR_SYSTEM_NETWORK_STATE}.\n  */\nexport const SYSTEM_NETWORK_STATE_VALUE_TIME_WAIT = \"time_wait\" as const;\n\n/**\n * The paging access direction\n * \n * @example in\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_PAGING_DIRECTION = 'system.paging.direction' as const;\n\n/**\n  * Enum value \"in\" for attribute {@link ATTR_SYSTEM_PAGING_DIRECTION}.\n  */\nexport const SYSTEM_PAGING_DIRECTION_VALUE_IN = \"in\" as const;\n\n/**\n  * Enum value \"out\" for attribute {@link ATTR_SYSTEM_PAGING_DIRECTION}.\n  */\nexport const SYSTEM_PAGING_DIRECTION_VALUE_OUT = \"out\" as const;\n\n/**\n * The memory paging state\n * \n * @example free\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_PAGING_STATE = 'system.paging.state' as const;\n\n/**\n  * Enum value \"free\" for attribute {@link ATTR_SYSTEM_PAGING_STATE}.\n  */\nexport const SYSTEM_PAGING_STATE_VALUE_FREE = \"free\" as const;\n\n/**\n  * Enum value \"used\" for attribute {@link ATTR_SYSTEM_PAGING_STATE}.\n  */\nexport const SYSTEM_PAGING_STATE_VALUE_USED = \"used\" as const;\n\n/**\n * The memory paging type\n * \n * @example minor\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_PAGING_TYPE = 'system.paging.type' as const;\n\n/**\n  * Enum value \"major\" for attribute {@link ATTR_SYSTEM_PAGING_TYPE}.\n  */\nexport const SYSTEM_PAGING_TYPE_VALUE_MAJOR = \"major\" as const;\n\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_SYSTEM_PAGING_TYPE}.\n  */\nexport const SYSTEM_PAGING_TYPE_VALUE_MINOR = \"minor\" as const;\n\n/**\n * The process state, e.g., [Linux Process State Codes](https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES)\n * \n * @example running\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_SYSTEM_PROCESS_STATUS = 'system.process.status' as const;\n\n/**\n  * Enum value \"defunct\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport const SYSTEM_PROCESS_STATUS_VALUE_DEFUNCT = \"defunct\" as const;\n\n/**\n  * Enum value \"running\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport const SYSTEM_PROCESS_STATUS_VALUE_RUNNING = \"running\" as const;\n\n/**\n  * Enum value \"sleeping\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport const SYSTEM_PROCESS_STATUS_VALUE_SLEEPING = \"sleeping\" as const;\n\n/**\n  * Enum value \"stopped\" for attribute {@link ATTR_SYSTEM_PROCESS_STATUS}.\n  */\nexport const SYSTEM_PROCESS_STATUS_VALUE_STOPPED = \"stopped\" as const;\n\n/**\n * Deprecated, use `system.process.status` instead.\n * \n * @example running\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `system.process.status`.\n */\nexport const ATTR_SYSTEM_PROCESSES_STATUS = 'system.processes.status' as const;\n\n/**\n  * Enum value \"defunct\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport const SYSTEM_PROCESSES_STATUS_VALUE_DEFUNCT = \"defunct\" as const;\n\n/**\n  * Enum value \"running\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport const SYSTEM_PROCESSES_STATUS_VALUE_RUNNING = \"running\" as const;\n\n/**\n  * Enum value \"sleeping\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport const SYSTEM_PROCESSES_STATUS_VALUE_SLEEPING = \"sleeping\" as const;\n\n/**\n  * Enum value \"stopped\" for attribute {@link ATTR_SYSTEM_PROCESSES_STATUS}.\n  */\nexport const SYSTEM_PROCESSES_STATUS_VALUE_STOPPED = \"stopped\" as const;\n\n/**\n * The name of the auto instrumentation agent or distribution, if used.\n * \n * @example parts-unlimited-java\n * \n * @note Official auto instrumentation agents and distributions **SHOULD** set the `telemetry.distro.name` attribute to\n * a string starting with `opentelemetry-`, e.g. `opentelemetry-java-instrumentation`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TELEMETRY_DISTRO_NAME = 'telemetry.distro.name' as const;\n\n/**\n * The version string of the auto instrumentation agent or distribution, if used.\n * \n * @example 1.2.3\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TELEMETRY_DISTRO_VERSION = 'telemetry.distro.version' as const;\n\n/**\n * The fully qualified human readable name of the [test case](https://en.wikipedia.org/wiki/Test_case).\n * \n * @example org.example.TestCase1.test1\n * @example example/tests/TestCase1.test1\n * @example ExampleTestCase1_test1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TEST_CASE_NAME = 'test.case.name' as const;\n\n/**\n * The status of the actual test case result from test execution.\n * \n * @example pass\n * @example fail\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TEST_CASE_RESULT_STATUS = 'test.case.result.status' as const;\n\n/**\n  * Enum value \"fail\" for attribute {@link ATTR_TEST_CASE_RESULT_STATUS}.\n  */\nexport const TEST_CASE_RESULT_STATUS_VALUE_FAIL = \"fail\" as const;\n\n/**\n  * Enum value \"pass\" for attribute {@link ATTR_TEST_CASE_RESULT_STATUS}.\n  */\nexport const TEST_CASE_RESULT_STATUS_VALUE_PASS = \"pass\" as const;\n\n/**\n * The human readable name of a [test suite](https://en.wikipedia.org/wiki/Test_suite).\n * \n * @example TestSuite1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TEST_SUITE_NAME = 'test.suite.name' as const;\n\n/**\n * The status of the test suite run.\n * \n * @example success\n * @example failure\n * @example skipped\n * @example aborted\n * @example timed_out\n * @example in_progress\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TEST_SUITE_RUN_STATUS = 'test.suite.run.status' as const;\n\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_ABORTED = \"aborted\" as const;\n\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_FAILURE = \"failure\" as const;\n\n/**\n  * Enum value \"in_progress\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_IN_PROGRESS = \"in_progress\" as const;\n\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_SKIPPED = \"skipped\" as const;\n\n/**\n  * Enum value \"success\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_SUCCESS = \"success\" as const;\n\n/**\n  * Enum value \"timed_out\" for attribute {@link ATTR_TEST_SUITE_RUN_STATUS}.\n  */\nexport const TEST_SUITE_RUN_STATUS_VALUE_TIMED_OUT = \"timed_out\" as const;\n\n/**\n * Current \"managed\" thread ID (as opposed to OS thread ID).\n * \n * @example 42\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_THREAD_ID = 'thread.id' as const;\n\n/**\n * Current thread name.\n * \n * @example \"main\"\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_THREAD_NAME = 'thread.name' as const;\n\n/**\n * String indicating the [cipher](https://datatracker.ietf.org/doc/html/rfc5246#appendix-A.5) used during the current connection.\n * \n * @example TLS_RSA_WITH_3DES_EDE_CBC_SHA\n * @example TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\n * \n * @note The values allowed for `tls.cipher` **MUST** be one of the `Descriptions` of the [registered TLS Cipher Suits](https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#table-tls-parameters-4).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CIPHER = 'tls.cipher' as const;\n\n/**\n * PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.\n * \n * @example MII...\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_CERTIFICATE = 'tls.client.certificate' as const;\n\n/**\n * Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.\n * \n * @example [\"MII...\", \"MI...\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_CERTIFICATE_CHAIN = 'tls.client.certificate_chain' as const;\n\n/**\n * Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_HASH_MD5 = 'tls.client.hash.md5' as const;\n\n/**\n * Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 9E393D93138888D288266C2D915214D1D1CCEB2A\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_HASH_SHA1 = 'tls.client.hash.sha1' as const;\n\n/**\n * Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_HASH_SHA256 = 'tls.client.hash.sha256' as const;\n\n/**\n * Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client.\n * \n * @example CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_ISSUER = 'tls.client.issuer' as const;\n\n/**\n * A hash that identifies clients based on how they perform an SSL/TLS handshake.\n * \n * @example d4e5b18d6b55c71272893221c96ba240\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_JA3 = 'tls.client.ja3' as const;\n\n/**\n * Date/Time indicating when client certificate is no longer considered valid.\n * \n * @example 2021-01-01T00:00:00.000Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_NOT_AFTER = 'tls.client.not_after' as const;\n\n/**\n * Date/Time indicating when client certificate is first considered valid.\n * \n * @example 1970-01-01T00:00:00.000Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_NOT_BEFORE = 'tls.client.not_before' as const;\n\n/**\n * Deprecated, use `server.address` instead.\n * \n * @example opentelemetry.io\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n * \n * @deprecated Replaced by `server.address`.\n */\nexport const ATTR_TLS_CLIENT_SERVER_NAME = 'tls.client.server_name' as const;\n\n/**\n * Distinguished name of subject of the x.509 certificate presented by the client.\n * \n * @example CN=myclient, OU=Documentation Team, DC=example, DC=com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_SUBJECT = 'tls.client.subject' as const;\n\n/**\n * Array of ciphers offered by the client during the client hello.\n * \n * @example [\"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CLIENT_SUPPORTED_CIPHERS = 'tls.client.supported_ciphers' as const;\n\n/**\n * String indicating the curve used for the given cipher, when applicable\n * \n * @example secp256r1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_CURVE = 'tls.curve' as const;\n\n/**\n * Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.\n * \n * @example true\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_ESTABLISHED = 'tls.established' as const;\n\n/**\n * String indicating the protocol being tunneled. Per the values in the [IANA registry](https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.\n * \n * @example http/1.1\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_NEXT_PROTOCOL = 'tls.next_protocol' as const;\n\n/**\n * Normalized lowercase protocol name parsed from original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_PROTOCOL_NAME = 'tls.protocol.name' as const;\n\n/**\n  * Enum value \"ssl\" for attribute {@link ATTR_TLS_PROTOCOL_NAME}.\n  */\nexport const TLS_PROTOCOL_NAME_VALUE_SSL = \"ssl\" as const;\n\n/**\n  * Enum value \"tls\" for attribute {@link ATTR_TLS_PROTOCOL_NAME}.\n  */\nexport const TLS_PROTOCOL_NAME_VALUE_TLS = \"tls\" as const;\n\n/**\n * Numeric part of the version parsed from the original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)\n * \n * @example 1.2\n * @example 3\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_PROTOCOL_VERSION = 'tls.protocol.version' as const;\n\n/**\n * Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.\n * \n * @example true\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_RESUMED = 'tls.resumed' as const;\n\n/**\n * PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.\n * \n * @example MII...\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_CERTIFICATE = 'tls.server.certificate' as const;\n\n/**\n * Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.\n * \n * @example [\"MII...\", \"MI...\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_CERTIFICATE_CHAIN = 'tls.server.certificate_chain' as const;\n\n/**\n * Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_HASH_MD5 = 'tls.server.hash.md5' as const;\n\n/**\n * Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 9E393D93138888D288266C2D915214D1D1CCEB2A\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_HASH_SHA1 = 'tls.server.hash.sha1' as const;\n\n/**\n * Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.\n * \n * @example 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_HASH_SHA256 = 'tls.server.hash.sha256' as const;\n\n/**\n * Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6) of the issuer of the x.509 certificate presented by the client.\n * \n * @example CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_ISSUER = 'tls.server.issuer' as const;\n\n/**\n * A hash that identifies servers based on how they perform an SSL/TLS handshake.\n * \n * @example d4e5b18d6b55c71272893221c96ba240\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_JA3S = 'tls.server.ja3s' as const;\n\n/**\n * Date/Time indicating when server certificate is no longer considered valid.\n * \n * @example 2021-01-01T00:00:00.000Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_NOT_AFTER = 'tls.server.not_after' as const;\n\n/**\n * Date/Time indicating when server certificate is first considered valid.\n * \n * @example 1970-01-01T00:00:00.000Z\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_NOT_BEFORE = 'tls.server.not_before' as const;\n\n/**\n * Distinguished name of subject of the x.509 certificate presented by the server.\n * \n * @example CN=myserver, OU=Documentation Team, DC=example, DC=com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_TLS_SERVER_SUBJECT = 'tls.server.subject' as const;\n\n/**\n * Domain extracted from the `url.full`, such as \"opentelemetry.io\".\n * \n * @example www.foo.bar\n * @example opentelemetry.io\n * @example 3.12.167.2\n * @example [1080:0:0:0:8:800:200C:417A]\n * \n * @note In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the domain field. If the URL contains a [literal IPv6 address](https://www.rfc-editor.org/rfc/rfc2732#section-2) enclosed by `[` and `]`, the `[` and `]` characters should also be captured in the domain field.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_DOMAIN = 'url.domain' as const;\n\n/**\n * The file extension extracted from the `url.full`, excluding the leading dot.\n * \n * @example png\n * @example gz\n * \n * @note The file extension is only set if it exists, as not every url has a file extension. When the file name has multiple extensions `example.tar.gz`, only the last one should be captured `gz`, not `tar.gz`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_EXTENSION = 'url.extension' as const;\n\n/**\n * Unmodified original URL as seen in the event source.\n * \n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example search?q=OpenTelemetry\n * \n * @note In network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path. This field is meant to represent the URL as it was observed, complete or not.\n * `url.original` might contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case password and username **SHOULD NOT** be redacted and attribute's value **SHOULD** remain the same.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_ORIGINAL = 'url.original' as const;\n\n/**\n * Port extracted from the `url.full`\n * \n * @example 443\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_PORT = 'url.port' as const;\n\n/**\n * The highest registered url domain, stripped of the subdomain.\n * \n * @example example.com\n * @example foo.co.uk\n * \n * @note This value can be determined precisely with the [public suffix list](http://publicsuffix.org). For example, the registered domain for `foo.example.com` is `example.com`. Trying to approximate this by simply taking the last two labels will not work well for TLDs such as `co.uk`.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_REGISTERED_DOMAIN = 'url.registered_domain' as const;\n\n/**\n * The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain. In a partially qualified domain, or if the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\n * \n * @example east\n * @example sub2.sub1\n * \n * @note The subdomain portion of `www.east.mydomain.co.uk` is `east`. If the domain has multiple levels of subdomain, such as `sub2.sub1.example.com`, the subdomain field should contain `sub2.sub1`, with no trailing period.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_SUBDOMAIN = 'url.subdomain' as const;\n\n/**\n * The low-cardinality template of an [absolute path reference](https://www.rfc-editor.org/rfc/rfc3986#section-4.2).\n * \n * @example /users/{id}\n * @example /users/:id\n * @example /users?id={id}\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_TEMPLATE = 'url.template' as const;\n\n/**\n * The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is `com`.\n * \n * @example com\n * @example co.uk\n * \n * @note This value can be determined precisely with the [public suffix list](http://publicsuffix.org).\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_URL_TOP_LEVEL_DOMAIN = 'url.top_level_domain' as const;\n\n/**\n * User email address.\n * \n * @example a.einstein@example.com\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_EMAIL = 'user.email' as const;\n\n/**\n * User's full name\n * \n * @example Albert Einstein\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_FULL_NAME = 'user.full_name' as const;\n\n/**\n * Unique user hash to correlate information for a user in anonymized form.\n * \n * @example 364fc68eaf4c8acec74a4e52d7d1feaa\n * \n * @note Useful if `user.id` or `user.name` contain confidential information and cannot be used.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_HASH = 'user.hash' as const;\n\n/**\n * Unique identifier of the user.\n * \n * @example S-1-5-21-202424912787-2692429404-2351956786-1000\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_ID = 'user.id' as const;\n\n/**\n * Short name or login/username of the user.\n * \n * @example a.einstein\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_NAME = 'user.name' as const;\n\n/**\n * Array of user roles at the time of the event.\n * \n * @example [\"admin\", \"reporting_user\"]\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_ROLES = 'user.roles' as const;\n\n/**\n * Name of the user-agent extracted from original. Usually refers to the browser's name.\n * \n * @example Safari\n * @example YourApp\n * \n * @note [Example](https://www.whatsmyua.info) of extracting browser's name from original string. In the case of using a user-agent for non-browser products, such as microservices with multiple names/versions inside the `user_agent.original`, the most significant name **SHOULD** be selected. In such a scenario it should align with `user_agent.version`\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_AGENT_NAME = 'user_agent.name' as const;\n\n/**\n * Version of the user-agent extracted from original. Usually refers to the browser's version\n * \n * @example 14.1.2\n * @example 1.0.0\n * \n * @note [Example](https://www.whatsmyua.info) of extracting browser's version from original string. In the case of using a user-agent for non-browser products, such as microservices with multiple names/versions inside the `user_agent.original`, the most significant version **SHOULD** be selected. In such a scenario it should align with `user_agent.name`\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_USER_AGENT_VERSION = 'user_agent.version' as const;\n\n/**\n * The type of garbage collection.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_V8JS_GC_TYPE = 'v8js.gc.type' as const;\n\n/**\n  * Enum value \"incremental\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport const V8JS_GC_TYPE_VALUE_INCREMENTAL = \"incremental\" as const;\n\n/**\n  * Enum value \"major\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport const V8JS_GC_TYPE_VALUE_MAJOR = \"major\" as const;\n\n/**\n  * Enum value \"minor\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport const V8JS_GC_TYPE_VALUE_MINOR = \"minor\" as const;\n\n/**\n  * Enum value \"weakcb\" for attribute {@link ATTR_V8JS_GC_TYPE}.\n  */\nexport const V8JS_GC_TYPE_VALUE_WEAKCB = \"weakcb\" as const;\n\n/**\n * The name of the space type of heap memory.\n * \n * @note Value can be retrieved from value `space_name` of [`v8.getHeapSpaceStatistics()`](https://nodejs.org/api/v8.html#v8getheapspacestatistics)\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_V8JS_HEAP_SPACE_NAME = 'v8js.heap.space.name' as const;\n\n/**\n  * Enum value \"code_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport const V8JS_HEAP_SPACE_NAME_VALUE_CODE_SPACE = \"code_space\" as const;\n\n/**\n  * Enum value \"large_object_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport const V8JS_HEAP_SPACE_NAME_VALUE_LARGE_OBJECT_SPACE = \"large_object_space\" as const;\n\n/**\n  * Enum value \"map_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport const V8JS_HEAP_SPACE_NAME_VALUE_MAP_SPACE = \"map_space\" as const;\n\n/**\n  * Enum value \"new_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport const V8JS_HEAP_SPACE_NAME_VALUE_NEW_SPACE = \"new_space\" as const;\n\n/**\n  * Enum value \"old_space\" for attribute {@link ATTR_V8JS_HEAP_SPACE_NAME}.\n  */\nexport const V8JS_HEAP_SPACE_NAME_VALUE_OLD_SPACE = \"old_space\" as const;\n\n/**\n * The ID of the change (pull request/merge request) if applicable. This is usually a unique (within repository) identifier generated by the VCS system.\n * \n * @example 123\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_CHANGE_ID = 'vcs.repository.change.id' as const;\n\n/**\n * The human readable title of the change (pull request/merge request). This title is often a brief summary of the change and may get merged in to a ref as the commit summary.\n * \n * @example Fixes broken thing\n * @example feat: add my new feature\n * @example [chore] update dependency\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_CHANGE_TITLE = 'vcs.repository.change.title' as const;\n\n/**\n * The name of the [reference](https://git-scm.com/docs/gitglossary#def_ref) such as **branch** or **tag** in the repository.\n * \n * @example my-feature-branch\n * @example tag-1-test\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_REF_NAME = 'vcs.repository.ref.name' as const;\n\n/**\n * The revision, literally [revised version](https://www.merriam-webster.com/dictionary/revision), The revision most often refers to a commit object in Git, or a revision number in SVN.\n * \n * @example 9d59409acf479dfa0df1aa568182e43e43df8bbe28d60fcf2bc52e30068802cc\n * @example main\n * @example 123\n * @example HEAD\n * \n * @note The revision can be a full [hash value (see glossary)](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf),\n * of the recorded change to a ref within a repository pointing to a\n * commit [commit](https://git-scm.com/docs/git-commit) object. It does\n * not necessarily have to be a hash; it can simply define a\n * [revision number](https://svnbook.red-bean.com/en/1.7/svn.tour.revs.specifiers.html)\n * which is an integer that is monotonically increasing. In cases where\n * it is identical to the `ref.name`, it **SHOULD** still be included. It is\n * up to the implementer to decide which value to set as the revision\n * based on the VCS system and situational context.\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_REF_REVISION = 'vcs.repository.ref.revision' as const;\n\n/**\n * The type of the [reference](https://git-scm.com/docs/gitglossary#def_ref) in the repository.\n * \n * @example branch\n * @example tag\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_REF_TYPE = 'vcs.repository.ref.type' as const;\n\n/**\n  * Enum value \"branch\" for attribute {@link ATTR_VCS_REPOSITORY_REF_TYPE}.\n  */\nexport const VCS_REPOSITORY_REF_TYPE_VALUE_BRANCH = \"branch\" as const;\n\n/**\n  * Enum value \"tag\" for attribute {@link ATTR_VCS_REPOSITORY_REF_TYPE}.\n  */\nexport const VCS_REPOSITORY_REF_TYPE_VALUE_TAG = \"tag\" as const;\n\n/**\n * The [URL](https://en.wikipedia.org/wiki/URL) of the repository providing the complete address in order to locate and identify the repository.\n * \n * @example https://github.com/opentelemetry/open-telemetry-collector-contrib\n * @example https://gitlab.com/my-org/my-project/my-projects-project/repo\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_VCS_REPOSITORY_URL_FULL = 'vcs.repository.url.full' as const;\n\n/**\n * Additional description of the web engine (e.g. detailed version and edition information).\n * \n * @example WildFly Full 21.0.0.Final (WildFly Core 13.0.1.Final) - 2.2.2.Final\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_WEBENGINE_DESCRIPTION = 'webengine.description' as const;\n\n/**\n * The name of the web engine.\n * \n * @example WildFly\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_WEBENGINE_NAME = 'webengine.name' as const;\n\n/**\n * The version of the web engine.\n * \n * @example 21.0.0\n * \n * @experimental This attribute is experimental and is subject to breaking changes in minor releases of `@opentelemetry/semantic-conventions`.\n */\nexport const ATTR_WEBENGINE_VERSION = 'webengine.version' as const;\n\n","import { context, trace } from '@opentelemetry/api';\nimport { ZoneContextManager } from '@opentelemetry/context-zone';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\nimport { registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { Resource, ResourceAttributes } from '@opentelemetry/resources';\nimport { BatchSpanProcessor, WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport {\n  ATTR_SERVICE_NAME,\n  ATTR_SERVICE_VERSION,\n  SEMRESATTRS_DEPLOYMENT_ENVIRONMENT,\n} from '@opentelemetry/semantic-conventions';\nimport {\n  ATTR_DEPLOYMENT_ENVIRONMENT_NAME,\n  ATTR_SERVICE_NAMESPACE,\n  // False positive. Package can be resolved.\n  // eslint-disable-next-line import/no-unresolved\n} from '@opentelemetry/semantic-conventions/incubating';\n\nimport { BaseInstrumentation, Transport, VERSION } from '@grafana/faro-web-sdk';\n\nimport { FaroTraceExporter } from './faroTraceExporter';\nimport { getDefaultOTELInstrumentations } from './getDefaultOTELInstrumentations';\nimport { getSamplingDecision } from './sampler';\nimport { FaroSessionSpanProcessor } from './sessionSpanProcessor';\nimport type { TracingInstrumentationOptions } from './types';\n\n// the providing of app name here is not great\n// should delay initialization and provide the full Faro config,\n// taking app name from it\n\nexport class TracingInstrumentation extends BaseInstrumentation {\n  name = '@grafana/faro-web-tracing';\n  version = VERSION;\n\n  static SCHEDULED_BATCH_DELAY_MS = 1000;\n\n  constructor(private options: TracingInstrumentationOptions = {}) {\n    super();\n  }\n\n  initialize(): void {\n    const options = this.options;\n    const attributes: ResourceAttributes = {};\n\n    if (this.config.app.name) {\n      attributes[ATTR_SERVICE_NAME] = this.config.app.name;\n    }\n\n    if (this.config.app.namespace) {\n      attributes[ATTR_SERVICE_NAMESPACE] = this.config.app.namespace;\n    }\n\n    if (this.config.app.version) {\n      attributes[ATTR_SERVICE_VERSION] = this.config.app.version;\n    }\n\n    if (this.config.app.environment) {\n      attributes[ATTR_DEPLOYMENT_ENVIRONMENT_NAME] = this.config.app.environment;\n      /**\n       * @deprecated will be removed in the future and has been replaced by ATTR_DEPLOYMENT_ENVIRONMENT_NAME (deployment.environment.name)\n       */\n      attributes[SEMRESATTRS_DEPLOYMENT_ENVIRONMENT] = this.config.app.environment;\n    }\n\n    Object.assign(attributes, options.resourceAttributes);\n\n    const resource = Resource.default().merge(new Resource(attributes));\n\n    const provider = new WebTracerProvider({\n      resource,\n      sampler: {\n        shouldSample: () => {\n          return {\n            decision: getSamplingDecision(this.api.getSession()),\n          };\n        },\n      },\n    });\n\n    provider.addSpanProcessor(\n      options.spanProcessor ??\n        new FaroSessionSpanProcessor(\n          new BatchSpanProcessor(new FaroTraceExporter({ api: this.api }), {\n            scheduledDelayMillis: TracingInstrumentation.SCHEDULED_BATCH_DELAY_MS,\n            maxExportBatchSize: 30,\n          }),\n          this.metas\n        )\n    );\n\n    provider.register({\n      propagator: options.propagator ?? new W3CTraceContextPropagator(),\n      contextManager: options.contextManager ?? new ZoneContextManager(),\n    });\n\n    const { propagateTraceHeaderCorsUrls, fetchInstrumentationOptions, xhrInstrumentationOptions } =\n      this.options.instrumentationOptions ?? {};\n\n    registerInstrumentations({\n      instrumentations:\n        options.instrumentations ??\n        getDefaultOTELInstrumentations({\n          ignoreUrls: this.getIgnoreUrls(),\n          propagateTraceHeaderCorsUrls,\n          fetchInstrumentationOptions,\n          xhrInstrumentationOptions,\n        }),\n    });\n\n    this.api.initOTEL(trace, context);\n  }\n\n  private getIgnoreUrls(): Array<string | RegExp> {\n    return this.transports.transports.flatMap((transport: Transport) => transport.getIgnoreUrls());\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n//----------------------------------------------------------------------------------------------------------\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates/registry/stable/attributes.ts.j2\n//----------------------------------------------------------------------------------------------------------\n\n/**\n * Rate-limiting result, shows whether the lease was acquired or contains a rejection reason\n * \n * @example acquired\n * @example request_canceled\n */\nexport const ATTR_ASPNETCORE_RATE_LIMITING_RESULT = 'aspnetcore.rate_limiting.result' as const;\n\n/**\n  * Enum value \"acquired\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ACQUIRED = \"acquired\" as const;\n\n/**\n  * Enum value \"endpoint_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_ENDPOINT_LIMITER = \"endpoint_limiter\" as const;\n\n/**\n  * Enum value \"global_limiter\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_GLOBAL_LIMITER = \"global_limiter\" as const;\n\n/**\n  * Enum value \"request_canceled\" for attribute {@link ATTR_ASPNETCORE_RATE_LIMITING_RESULT}.\n  */\nexport const ASPNETCORE_RATE_LIMITING_RESULT_VALUE_REQUEST_CANCELED = \"request_canceled\" as const;\n\n/**\n * The language of the telemetry SDK.\n */\nexport const ATTR_TELEMETRY_SDK_LANGUAGE = 'telemetry.sdk.language' as const;\n\n/**\n  * Enum value \"cpp\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_CPP = \"cpp\" as const;\n\n/**\n  * Enum value \"dotnet\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_DOTNET = \"dotnet\" as const;\n\n/**\n  * Enum value \"erlang\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_ERLANG = \"erlang\" as const;\n\n/**\n  * Enum value \"go\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_GO = \"go\" as const;\n\n/**\n  * Enum value \"java\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_JAVA = \"java\" as const;\n\n/**\n  * Enum value \"nodejs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_NODEJS = \"nodejs\" as const;\n\n/**\n  * Enum value \"php\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_PHP = \"php\" as const;\n\n/**\n  * Enum value \"python\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_PYTHON = \"python\" as const;\n\n/**\n  * Enum value \"ruby\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_RUBY = \"ruby\" as const;\n\n/**\n  * Enum value \"rust\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_RUST = \"rust\" as const;\n\n/**\n  * Enum value \"swift\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_SWIFT = \"swift\" as const;\n\n/**\n  * Enum value \"webjs\" for attribute {@link ATTR_TELEMETRY_SDK_LANGUAGE}.\n  */\nexport const TELEMETRY_SDK_LANGUAGE_VALUE_WEBJS = \"webjs\" as const;\n\n/**\n * The name of the telemetry SDK as defined above.\n * \n * @example opentelemetry\n * \n * @note The OpenTelemetry SDK **MUST** set the `telemetry.sdk.name` attribute to `opentelemetry`.\n * If another SDK, like a fork or a vendor-provided implementation, is used, this SDK **MUST** set the\n * `telemetry.sdk.name` attribute to the fully-qualified class or module name of this SDK's main entry point\n * or another suitable identifier depending on the language.\n * The identifier `opentelemetry` is reserved and **MUST NOT** be used in this case.\n * All custom identifiers **SHOULD** be stable across different versions of an implementation.\n */\nexport const ATTR_TELEMETRY_SDK_NAME = 'telemetry.sdk.name' as const;\n\n/**\n * The version string of the telemetry SDK.\n * \n * @example 1.2.3\n */\nexport const ATTR_TELEMETRY_SDK_VERSION = 'telemetry.sdk.version' as const;\n\n/**\n * Full type name of the [`IExceptionHandler`](https://learn.microsoft.com/dotnet/api/microsoft.aspnetcore.diagnostics.iexceptionhandler) implementation that handled the exception.\n * \n * @example Contoso.MyHandler\n */\nexport const ATTR_ASPNETCORE_DIAGNOSTICS_HANDLER_TYPE = 'aspnetcore.diagnostics.handler.type' as const;\n\n/**\n * ASP.NET Core exception middleware handling result\n * \n * @example handled\n * @example unhandled\n */\nexport const ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT = 'aspnetcore.diagnostics.exception.result' as const;\n\n/**\n  * Enum value \"aborted\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_ABORTED = \"aborted\" as const;\n\n/**\n  * Enum value \"handled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_HANDLED = \"handled\" as const;\n\n/**\n  * Enum value \"skipped\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_SKIPPED = \"skipped\" as const;\n\n/**\n  * Enum value \"unhandled\" for attribute {@link ATTR_ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT}.\n  */\nexport const ASPNETCORE_DIAGNOSTICS_EXCEPTION_RESULT_VALUE_UNHANDLED = \"unhandled\" as const;\n\n/**\n * Rate limiting policy name.\n * \n * @example fixed\n * @example sliding\n * @example token\n */\nexport const ATTR_ASPNETCORE_RATE_LIMITING_POLICY = 'aspnetcore.rate_limiting.policy' as const;\n\n/**\n * Flag indicating if request was handled by the application pipeline.\n * \n * @example true\n */\nexport const ATTR_ASPNETCORE_REQUEST_IS_UNHANDLED = 'aspnetcore.request.is_unhandled' as const;\n\n/**\n * A value that indicates whether the matched route is a fallback route.\n * \n * @example true\n */\nexport const ATTR_ASPNETCORE_ROUTING_IS_FALLBACK = 'aspnetcore.routing.is_fallback' as const;\n\n/**\n * Match result - success or failure\n * \n * @example success\n * @example failure\n */\nexport const ATTR_ASPNETCORE_ROUTING_MATCH_STATUS = 'aspnetcore.routing.match_status' as const;\n\n/**\n  * Enum value \"failure\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_FAILURE = \"failure\" as const;\n\n/**\n  * Enum value \"success\" for attribute {@link ATTR_ASPNETCORE_ROUTING_MATCH_STATUS}.\n  */\nexport const ASPNETCORE_ROUTING_MATCH_STATUS_VALUE_SUCCESS = \"success\" as const;\n\n/**\n * Client address - domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example client.example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the server side, and when communicating through an intermediary, `client.address` **SHOULD** represent the client address behind any intermediaries,  for example proxies, if it's available.\n */\nexport const ATTR_CLIENT_ADDRESS = 'client.address' as const;\n\n/**\n * Client port number.\n * \n * @example 65123\n * \n * @note When observed from the server side, and when communicating through an intermediary, `client.port` **SHOULD** represent the client port behind any intermediaries,  for example proxies, if it's available.\n */\nexport const ATTR_CLIENT_PORT = 'client.port' as const;\n\n/**\n * Describes a class of error the operation ended with.\n * \n * @example timeout\n * @example java.net.UnknownHostException\n * @example server_certificate_invalid\n * @example 500\n * \n * @note The `error.type` **SHOULD** be predictable, and **SHOULD** have low cardinality.\n * \n * When `error.type` is set to a type (e.g., an exception type), its\n * canonical class name identifying the type within the artifact **SHOULD** be used.\n * \n * Instrumentations **SHOULD** document the list of errors they report.\n * \n * The cardinality of `error.type` within one instrumentation library **SHOULD** be low.\n * Telemetry consumers that aggregate data from multiple instrumentation libraries and applications\n * should be prepared for `error.type` to have high cardinality at query time when no\n * additional filters are applied.\n * \n * If the operation has completed successfully, instrumentations **SHOULD NOT** set `error.type`.\n * \n * If a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\n * it's **RECOMMENDED** to:\n * \n *   - Use a domain-specific attribute\n *   - Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.\n */\nexport const ATTR_ERROR_TYPE = 'error.type' as const;\n\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_ERROR_TYPE}.\n  */\nexport const ERROR_TYPE_VALUE_OTHER = \"_OTHER\" as const;\n\n/**\n * **SHOULD** be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n * \n * @note An exception is considered to have escaped (or left) the scope of a span,\n * if that span is ended while the exception is still logically \"in flight\".\n * This may be actually \"in flight\" in some languages (e.g. if the exception\n * is passed to a Context manager's `__exit__` method in Python) but will\n * usually be caught at the point of recording the exception in most languages.\n * \n * It is usually not possible to determine at the point where an exception is thrown\n * whether it will escape the scope of a span.\n * However, it is trivial to know that an exception\n * will escape, if one checks for an active exception just before ending the span,\n * as done in the [example for recording span exceptions](https://opentelemetry.io/docs/specs/semconv/exceptions/exceptions-spans/#recording-an-exception).\n * \n * It follows that an exception may still escape the scope of the span\n * even if the `exception.escaped` attribute was not set or set to false,\n * since the event might have been recorded at a time where it was not\n * clear whether the exception will escape.\n */\nexport const ATTR_EXCEPTION_ESCAPED = 'exception.escaped' as const;\n\n/**\n * The exception message.\n * \n * @example Division by zero\n * @example Can't convert 'int' object to str implicitly\n */\nexport const ATTR_EXCEPTION_MESSAGE = 'exception.message' as const;\n\n/**\n * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n * \n * @example \"Exception in thread \"main\" java.lang.RuntimeException: Test exception\\\\n at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\\\\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\\\\n at com.example.GenerateTrace.main(GenerateTrace.java:5)\\\\n\"\n */\nexport const ATTR_EXCEPTION_STACKTRACE = 'exception.stacktrace' as const;\n\n/**\n * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n * \n * @example java.net.ConnectException\n * @example OSError\n */\nexport const ATTR_EXCEPTION_TYPE = 'exception.type' as const;\n\n/**\n * HTTP request headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n * \n * @example http.request.header.content-type=[\"application/json\"]\n * @example http.request.header.x-forwarded-for=[\"1.2.3.4\", \"1.2.3.5\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all request headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * The `User-Agent` header is already captured in the `user_agent.original` attribute. Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport const ATTR_HTTP_REQUEST_HEADER = (key: string) => `http.request.header.${key}`;\n\n/**\n * HTTP request method.\n * \n * @example GET\n * @example POST\n * @example HEAD\n * \n * @note HTTP request method value **SHOULD** be \"known\" to the instrumentation.\n * By default, this convention defines \"known\" methods as the ones listed in [RFC9110](https://www.rfc-editor.org/rfc/rfc9110.html#name-methods)\n * and the PATCH method defined in [RFC5789](https://www.rfc-editor.org/rfc/rfc5789.html).\n * \n * If the HTTP request method is not known to instrumentation, it **MUST** set the `http.request.method` attribute to `_OTHER`.\n * \n * If the HTTP instrumentation could end up converting valid HTTP request methods to `_OTHER`, then it **MUST** provide a way to override\n * the list of known HTTP methods. If this override is done via environment variable, then the environment variable **MUST** be named\n * OTEL_INSTRUMENTATION_HTTP_KNOWN_METHODS and support a comma-separated list of case-sensitive known HTTP methods\n * (this list **MUST** be a full override of the default known method, it is not a list of known methods in addition to the defaults).\n * \n * HTTP method names are case-sensitive and `http.request.method` attribute value **MUST** match a known HTTP method name exactly.\n * Instrumentations for specific web frameworks that consider HTTP methods to be case insensitive, **SHOULD** populate a canonical equivalent.\n * Tracing instrumentations that do so, **MUST** also set `http.request.method_original` to the original value.\n */\nexport const ATTR_HTTP_REQUEST_METHOD = 'http.request.method' as const;\n\n/**\n  * Enum value \"_OTHER\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_OTHER = \"_OTHER\" as const;\n\n/**\n  * Enum value \"CONNECT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_CONNECT = \"CONNECT\" as const;\n\n/**\n  * Enum value \"DELETE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_DELETE = \"DELETE\" as const;\n\n/**\n  * Enum value \"GET\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_GET = \"GET\" as const;\n\n/**\n  * Enum value \"HEAD\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_HEAD = \"HEAD\" as const;\n\n/**\n  * Enum value \"OPTIONS\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_OPTIONS = \"OPTIONS\" as const;\n\n/**\n  * Enum value \"PATCH\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_PATCH = \"PATCH\" as const;\n\n/**\n  * Enum value \"POST\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_POST = \"POST\" as const;\n\n/**\n  * Enum value \"PUT\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_PUT = \"PUT\" as const;\n\n/**\n  * Enum value \"TRACE\" for attribute {@link ATTR_HTTP_REQUEST_METHOD}.\n  */\nexport const HTTP_REQUEST_METHOD_VALUE_TRACE = \"TRACE\" as const;\n\n/**\n * Original HTTP method sent by the client in the request line.\n * \n * @example GeT\n * @example ACL\n * @example foo\n */\nexport const ATTR_HTTP_REQUEST_METHOD_ORIGINAL = 'http.request.method_original' as const;\n\n/**\n * The ordinal number of request resending attempt (for any reason, including redirects).\n * \n * @example 3\n * \n * @note The resend count **SHOULD** be updated each time an HTTP request gets resent by the client, regardless of what was the cause of the resending (e.g. redirection, authorization failure, 503 Server Unavailable, network issues, or any other).\n */\nexport const ATTR_HTTP_REQUEST_RESEND_COUNT = 'http.request.resend_count' as const;\n\n/**\n * HTTP response headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.\n * \n * @example http.response.header.content-type=[\"application/json\"]\n * @example http.response.header.my-custom-header=[\"abc\", \"def\"]\n * \n * @note Instrumentations **SHOULD** require an explicit configuration of which headers are to be captured. Including all response headers can be a security risk - explicit configuration helps avoid leaking sensitive information.\n * Users **MAY** explicitly configure instrumentations to capture them even though it is not recommended.\n * The attribute value **MUST** consist of either multiple header values as an array of strings or a single-item array containing a possibly comma-concatenated string, depending on the way the HTTP library provides access to headers.\n */\nexport const ATTR_HTTP_RESPONSE_HEADER = (key: string) => `http.response.header.${key}`;\n\n/**\n * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n * \n * @example 200\n */\nexport const ATTR_HTTP_RESPONSE_STATUS_CODE = 'http.response.status_code' as const;\n\n/**\n * The matched route, that is, the path template in the format used by the respective server framework.\n * \n * @example /users/:userID?\n * @example {controller}/{action}/{id?}\n * \n * @note **MUST NOT** be populated when this is not supported by the HTTP server framework as the route attribute should have low-cardinality and the URI path can NOT substitute it.\n * **SHOULD** include the [application root](/docs/http/http-spans.md#http-server-definitions) if there is one.\n */\nexport const ATTR_HTTP_ROUTE = 'http.route' as const;\n\n/**\n * Name of the garbage collector action.\n * \n * @example end of minor GC\n * @example end of major GC\n * \n * @note Garbage collector action is generally obtained via [GarbageCollectionNotificationInfo#getGcAction()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcAction()).\n */\nexport const ATTR_JVM_GC_ACTION = 'jvm.gc.action' as const;\n\n/**\n * Name of the garbage collector.\n * \n * @example G1 Young Generation\n * @example G1 Old Generation\n * \n * @note Garbage collector name is generally obtained via [GarbageCollectionNotificationInfo#getGcName()](https://docs.oracle.com/en/java/javase/11/docs/api/jdk.management/com/sun/management/GarbageCollectionNotificationInfo.html#getGcName()).\n */\nexport const ATTR_JVM_GC_NAME = 'jvm.gc.name' as const;\n\n/**\n * Name of the memory pool.\n * \n * @example G1 Old Gen\n * @example G1 Eden space\n * @example G1 Survivor Space\n * \n * @note Pool names are generally obtained via [MemoryPoolMXBean#getName()](https://docs.oracle.com/en/java/javase/11/docs/api/java.management/java/lang/management/MemoryPoolMXBean.html#getName()).\n */\nexport const ATTR_JVM_MEMORY_POOL_NAME = 'jvm.memory.pool.name' as const;\n\n/**\n * The type of memory.\n * \n * @example heap\n * @example non_heap\n */\nexport const ATTR_JVM_MEMORY_TYPE = 'jvm.memory.type' as const;\n\n/**\n  * Enum value \"heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport const JVM_MEMORY_TYPE_VALUE_HEAP = \"heap\" as const;\n\n/**\n  * Enum value \"non_heap\" for attribute {@link ATTR_JVM_MEMORY_TYPE}.\n  */\nexport const JVM_MEMORY_TYPE_VALUE_NON_HEAP = \"non_heap\" as const;\n\n/**\n * Whether the thread is daemon or not.\n */\nexport const ATTR_JVM_THREAD_DAEMON = 'jvm.thread.daemon' as const;\n\n/**\n * State of the thread.\n * \n * @example runnable\n * @example blocked\n */\nexport const ATTR_JVM_THREAD_STATE = 'jvm.thread.state' as const;\n\n/**\n  * Enum value \"blocked\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_BLOCKED = \"blocked\" as const;\n\n/**\n  * Enum value \"new\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_NEW = \"new\" as const;\n\n/**\n  * Enum value \"runnable\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_RUNNABLE = \"runnable\" as const;\n\n/**\n  * Enum value \"terminated\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_TERMINATED = \"terminated\" as const;\n\n/**\n  * Enum value \"timed_waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_TIMED_WAITING = \"timed_waiting\" as const;\n\n/**\n  * Enum value \"waiting\" for attribute {@link ATTR_JVM_THREAD_STATE}.\n  */\nexport const JVM_THREAD_STATE_VALUE_WAITING = \"waiting\" as const;\n\n/**\n * Local address of the network connection - IP address or Unix domain socket name.\n * \n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport const ATTR_NETWORK_LOCAL_ADDRESS = 'network.local.address' as const;\n\n/**\n * Local port number of the network connection.\n * \n * @example 65123\n */\nexport const ATTR_NETWORK_LOCAL_PORT = 'network.local.port' as const;\n\n/**\n * Peer address of the network connection - IP address or Unix domain socket name.\n * \n * @example 10.1.2.80\n * @example /tmp/my.sock\n */\nexport const ATTR_NETWORK_PEER_ADDRESS = 'network.peer.address' as const;\n\n/**\n * Peer port number of the network connection.\n * \n * @example 65123\n */\nexport const ATTR_NETWORK_PEER_PORT = 'network.peer.port' as const;\n\n/**\n * [OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.\n * \n * @example amqp\n * @example http\n * @example mqtt\n * \n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport const ATTR_NETWORK_PROTOCOL_NAME = 'network.protocol.name' as const;\n\n/**\n * The actual version of the protocol used for network communication.\n * \n * @example 1.1\n * @example 2\n * \n * @note If protocol version is subject to negotiation (for example using [ALPN](https://www.rfc-editor.org/rfc/rfc7301.html)), this attribute **SHOULD** be set to the negotiated version. If the actual protocol version is not known, this attribute **SHOULD NOT** be set.\n */\nexport const ATTR_NETWORK_PROTOCOL_VERSION = 'network.protocol.version' as const;\n\n/**\n * [OSI transport layer](https://osi-model.com/transport-layer/) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).\n * \n * @example tcp\n * @example udp\n * \n * @note The value **SHOULD** be normalized to lowercase.\n * \n * Consider always setting the transport when setting a port number, since\n * a port number is ambiguous without knowing the transport. For example\n * different processes could be listening on TCP port 12345 and UDP port 12345.\n */\nexport const ATTR_NETWORK_TRANSPORT = 'network.transport' as const;\n\n/**\n  * Enum value \"pipe\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_PIPE = \"pipe\" as const;\n\n/**\n  * Enum value \"quic\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_QUIC = \"quic\" as const;\n\n/**\n  * Enum value \"tcp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_TCP = \"tcp\" as const;\n\n/**\n  * Enum value \"udp\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_UDP = \"udp\" as const;\n\n/**\n  * Enum value \"unix\" for attribute {@link ATTR_NETWORK_TRANSPORT}.\n  */\nexport const NETWORK_TRANSPORT_VALUE_UNIX = \"unix\" as const;\n\n/**\n * [OSI network layer](https://osi-model.com/network-layer/) or non-OSI equivalent.\n * \n * @example ipv4\n * @example ipv6\n * \n * @note The value **SHOULD** be normalized to lowercase.\n */\nexport const ATTR_NETWORK_TYPE = 'network.type' as const;\n\n/**\n  * Enum value \"ipv4\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport const NETWORK_TYPE_VALUE_IPV4 = \"ipv4\" as const;\n\n/**\n  * Enum value \"ipv6\" for attribute {@link ATTR_NETWORK_TYPE}.\n  */\nexport const NETWORK_TYPE_VALUE_IPV6 = \"ipv6\" as const;\n\n/**\n * The name of the instrumentation scope - (`InstrumentationScope.Name` in OTLP).\n * \n * @example io.opentelemetry.contrib.mongodb\n */\nexport const ATTR_OTEL_SCOPE_NAME = 'otel.scope.name' as const;\n\n/**\n * The version of the instrumentation scope - (`InstrumentationScope.Version` in OTLP).\n * \n * @example 1.0.0\n */\nexport const ATTR_OTEL_SCOPE_VERSION = 'otel.scope.version' as const;\n\n/**\n * Name of the code, either \"OK\" or \"ERROR\". **MUST NOT** be set if the status code is UNSET.\n */\nexport const ATTR_OTEL_STATUS_CODE = 'otel.status_code' as const;\n\n/**\n  * Enum value \"ERROR\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport const OTEL_STATUS_CODE_VALUE_ERROR = \"ERROR\" as const;\n\n/**\n  * Enum value \"OK\" for attribute {@link ATTR_OTEL_STATUS_CODE}.\n  */\nexport const OTEL_STATUS_CODE_VALUE_OK = \"OK\" as const;\n\n/**\n * Description of the Status if it has a value, otherwise not set.\n * \n * @example resource not found\n */\nexport const ATTR_OTEL_STATUS_DESCRIPTION = 'otel.status_description' as const;\n\n/**\n * Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.\n * \n * @example example.com\n * @example 10.1.2.80\n * @example /tmp/my.sock\n * \n * @note When observed from the client side, and when communicating through an intermediary, `server.address` **SHOULD** represent the server address behind any intermediaries, for example proxies, if it's available.\n */\nexport const ATTR_SERVER_ADDRESS = 'server.address' as const;\n\n/**\n * Server port number.\n * \n * @example 80\n * @example 8080\n * @example 443\n * \n * @note When observed from the client side, and when communicating through an intermediary, `server.port` **SHOULD** represent the server port behind any intermediaries, for example proxies, if it's available.\n */\nexport const ATTR_SERVER_PORT = 'server.port' as const;\n\n/**\n * Logical name of the service.\n * \n * @example shoppingcart\n * \n * @note **MUST** be the same for all instances of horizontally scaled services. If the value was not specified, SDKs **MUST** fallback to `unknown_service:` concatenated with [`process.executable.name`](process.md), e.g. `unknown_service:bash`. If `process.executable.name` is not available, the value **MUST** be set to `unknown_service`.\n */\nexport const ATTR_SERVICE_NAME = 'service.name' as const;\n\n/**\n * The version string of the service API or implementation. The format is not defined by these conventions.\n * \n * @example 2.0.0\n * @example a01dbef8a\n */\nexport const ATTR_SERVICE_VERSION = 'service.version' as const;\n\n/**\n * SignalR HTTP connection closure status.\n * \n * @example app_shutdown\n * @example timeout\n */\nexport const ATTR_SIGNALR_CONNECTION_STATUS = 'signalr.connection.status' as const;\n\n/**\n  * Enum value \"app_shutdown\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_APP_SHUTDOWN = \"app_shutdown\" as const;\n\n/**\n  * Enum value \"normal_closure\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_NORMAL_CLOSURE = \"normal_closure\" as const;\n\n/**\n  * Enum value \"timeout\" for attribute {@link ATTR_SIGNALR_CONNECTION_STATUS}.\n  */\nexport const SIGNALR_CONNECTION_STATUS_VALUE_TIMEOUT = \"timeout\" as const;\n\n/**\n * [SignalR transport type](https://github.com/dotnet/aspnetcore/blob/main/src/SignalR/docs/specs/TransportProtocols.md)\n * \n * @example web_sockets\n * @example long_polling\n */\nexport const ATTR_SIGNALR_TRANSPORT = 'signalr.transport' as const;\n\n/**\n  * Enum value \"long_polling\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_LONG_POLLING = \"long_polling\" as const;\n\n/**\n  * Enum value \"server_sent_events\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_SERVER_SENT_EVENTS = \"server_sent_events\" as const;\n\n/**\n  * Enum value \"web_sockets\" for attribute {@link ATTR_SIGNALR_TRANSPORT}.\n  */\nexport const SIGNALR_TRANSPORT_VALUE_WEB_SOCKETS = \"web_sockets\" as const;\n\n/**\n * The [URI fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5) component\n * \n * @example SemConv\n */\nexport const ATTR_URL_FRAGMENT = 'url.fragment' as const;\n\n/**\n * Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986)\n * \n * @example https://www.foo.bar/search?q=OpenTelemetry#SemConv\n * @example //localhost\n * \n * @note For network calls, URL usually has `scheme://host[:port][path][?query][#fragment]` format, where the fragment is not transmitted over HTTP, but if it is known, it **SHOULD** be included nevertheless.\n * `url.full` **MUST NOT** contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case username and password **SHOULD** be redacted and attribute's value **SHOULD** be `https://REDACTED:REDACTED@www.example.com/`.\n * `url.full` **SHOULD** capture the absolute URL when it is available (or can be reconstructed). Sensitive content provided in `url.full` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_FULL = 'url.full' as const;\n\n/**\n * The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component\n * \n * @example /search\n * \n * @note Sensitive content provided in `url.path` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_PATH = 'url.path' as const;\n\n/**\n * The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component\n * \n * @example q=OpenTelemetry\n * \n * @note Sensitive content provided in `url.query` **SHOULD** be scrubbed when instrumentations can identify it.\n */\nexport const ATTR_URL_QUERY = 'url.query' as const;\n\n/**\n * The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component identifying the used protocol.\n * \n * @example https\n * @example ftp\n * @example telnet\n */\nexport const ATTR_URL_SCHEME = 'url.scheme' as const;\n\n/**\n * Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.\n * \n * @example CERN-LineMode/2.15 libwww/2.17b3\n * @example Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1\n * @example YourApp/1.0.0 grpc-java-okhttp/1.27.2\n */\nexport const ATTR_USER_AGENT_ORIGINAL = 'user_agent.original' as const;\n\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trace, metrics } from '@opentelemetry/api';\nimport { logs } from '@opentelemetry/api-logs';\nimport {\n  disableInstrumentations,\n  enableInstrumentations,\n} from './autoLoaderUtils';\nimport { AutoLoaderOptions } from './types_internal';\n\n/**\n * It will register instrumentations and plugins\n * @param options\n * @return returns function to unload instrumentation and plugins that were\n *   registered\n */\nexport function registerInstrumentations(\n  options: AutoLoaderOptions\n): () => void {\n  const tracerProvider = options.tracerProvider || trace.getTracerProvider();\n  const meterProvider = options.meterProvider || metrics.getMeterProvider();\n  const loggerProvider = options.loggerProvider || logs.getLoggerProvider();\n  const instrumentations = options.instrumentations?.flat() ?? [];\n\n  enableInstrumentations(\n    instrumentations,\n    tracerProvider,\n    meterProvider,\n    loggerProvider\n  );\n\n  return () => {\n    disableInstrumentations(instrumentations);\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TracerProvider, MeterProvider } from '@opentelemetry/api';\nimport { Instrumentation } from './types';\nimport { LoggerProvider } from '@opentelemetry/api-logs';\n\n/**\n * Enable instrumentations\n * @param instrumentations\n * @param tracerProvider\n * @param meterProvider\n */\nexport function enableInstrumentations(\n  instrumentations: Instrumentation[],\n  tracerProvider?: TracerProvider,\n  meterProvider?: MeterProvider,\n  loggerProvider?: LoggerProvider\n): void {\n  for (let i = 0, j = instrumentations.length; i < j; i++) {\n    const instrumentation = instrumentations[i];\n    if (tracerProvider) {\n      instrumentation.setTracerProvider(tracerProvider);\n    }\n    if (meterProvider) {\n      instrumentation.setMeterProvider(meterProvider);\n    }\n    if (loggerProvider && instrumentation.setLoggerProvider) {\n      instrumentation.setLoggerProvider(loggerProvider);\n    }\n    // instrumentations have been already enabled during creation\n    // so enable only if user prevented that by setting enabled to false\n    // this is to prevent double enabling but when calling register all\n    // instrumentations should be now enabled\n    if (!instrumentation.getConfig().enabled) {\n      instrumentation.enable();\n    }\n  }\n}\n\n/**\n * Disable instrumentations\n * @param instrumentations\n */\nexport function disableInstrumentations(\n  instrumentations: Instrumentation[]\n): void {\n  instrumentations.forEach(instrumentation => instrumentation.disable());\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","import platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","function _OverloadYield(e, d) {\n  this.v = e, this.k = d;\n}\nexport { _OverloadYield as default };","import OverloadYield from \"./OverloadYield.js\";\nfunction _wrapAsyncGenerator(e) {\n  return function () {\n    return new AsyncGenerator(e.apply(this, arguments));\n  };\n}\nfunction AsyncGenerator(e) {\n  var r, t;\n  function resume(r, t) {\n    try {\n      var n = e[r](t),\n        o = n.value,\n        u = o instanceof OverloadYield;\n      Promise.resolve(u ? o.v : o).then(function (t) {\n        if (u) {\n          var i = \"return\" === r ? \"return\" : \"next\";\n          if (!o.k || t.done) return resume(i, t);\n          t = e[i](t).value;\n        }\n        settle(n.done ? \"return\" : \"normal\", t);\n      }, function (e) {\n        resume(\"throw\", e);\n      });\n    } catch (e) {\n      settle(\"throw\", e);\n    }\n  }\n  function settle(e, n) {\n    switch (e) {\n      case \"return\":\n        r.resolve({\n          value: n,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        r.reject(n);\n        break;\n      default:\n        r.resolve({\n          value: n,\n          done: !1\n        });\n    }\n    (r = r.next) ? resume(r.key, r.arg) : t = null;\n  }\n  this._invoke = function (e, n) {\n    return new Promise(function (o, u) {\n      var i = {\n        key: e,\n        arg: n,\n        resolve: o,\n        reject: u,\n        next: null\n      };\n      t ? t = t.next = i : (r = t = i, resume(e, n));\n    });\n  }, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (e) {\n  return this._invoke(\"next\", e);\n}, AsyncGenerator.prototype[\"throw\"] = function (e) {\n  return this._invoke(\"throw\", e);\n}, AsyncGenerator.prototype[\"return\"] = function (e) {\n  return this._invoke(\"return\", e);\n};\nexport { _wrapAsyncGenerator as default };","import OverloadYield from \"./OverloadYield.js\";\nfunction _awaitAsyncGenerator(e) {\n  return new OverloadYield(e, 0);\n}\nexport { _awaitAsyncGenerator as default };","import OverloadYield from \"./OverloadYield.js\";\nfunction _asyncGeneratorDelegate(t) {\n  var e = {},\n    n = !1;\n  function pump(e, r) {\n    return n = !0, r = new Promise(function (n) {\n      n(t[e](r));\n    }), {\n      done: !1,\n      value: new OverloadYield(r, 1)\n    };\n  }\n  return e[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, e.next = function (t) {\n    return n ? (n = !1, t) : pump(\"next\", t);\n  }, \"function\" == typeof t[\"throw\"] && (e[\"throw\"] = function (t) {\n    if (n) throw n = !1, t;\n    return pump(\"throw\", t);\n  }), \"function\" == typeof t[\"return\"] && (e[\"return\"] = function (t) {\n    return n ? (n = !1, t) : pump(\"return\", t);\n  }), e;\n}\nexport { _asyncGeneratorDelegate as default };","function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}\nexport { _asyncIterator as default };","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.9\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","import React, { useState } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport axios, { AxiosError } from 'axios';\n\nfunction App() {\n  const [pythonMessage, setPythonMessage] = useState('');\n  const [javaMessage, setJavaMessage] = useState('');\n  const [pythonToJavaMessage, setPythonToJavaMessage] = useState('');\n  const [javaToPythonMessage, setJavaToPythonMessage] = useState('');\n\n  const callPythonService = async () => {\n    try {\n      const response = await axios.get('/api/python/hello');\n      setPythonMessage(response.data);\n    } catch (error) {\n      console.error('Error calling Python service:', error);\n      const axiosError = error as AxiosError<{ message: string }>;\n      setPythonMessage(axiosError.response?.data?.message || 'Error calling Python service');\n    }\n  };\n\n  const callJavaService = async () => {\n    try {\n      const response = await axios.get('/api/java/hello');\n      setJavaMessage(response.data);\n    } catch (error) {\n      console.error('Error calling Java service:', error);\n      const axiosError = error as AxiosError<{ message: string }>;\n      setJavaMessage(axiosError.response?.data?.message || 'Error calling Java service');\n    }\n  };\n\n  const callJavaFromPython = async () => {\n    try {\n      const response = await axios.get('/api/python/call-java');\n      setPythonToJavaMessage(response.data);\n    } catch (error) {\n      console.error('Error calling Java from Python:', error);\n      const axiosError = error as AxiosError<{ message: string }>;\n      setPythonToJavaMessage(axiosError.response?.data?.message || 'Error calling Java from Python');\n    }\n  };\n\n  const callPythonFromJava = async () => {\n    try {\n      const response = await axios.get('/api/java/call-python');\n      setJavaToPythonMessage(response.data);\n    } catch (error) {\n      console.error('Error calling Python from Java:', error);\n      const axiosError = error as AxiosError<{ message: string }>;\n      setJavaToPythonMessage(axiosError.response?.data?.message || 'Error calling Python from Java');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/python-error\">Python Error Generator</Link>\n          </li>\n          <li>\n            <Link to=\"/java-error\">Java Error Generator</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <main>\n        <h1>Microservices Demo</h1>\n        <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\n          <div style={{ marginBottom: '20px' }}>\n            <h2>Python Service</h2>\n            <button onClick={callPythonService} style={{ marginRight: '10px' }}>Call Python Service</button>\n            <button onClick={callJavaFromPython}>Call Java from Python</button>\n            <p>{pythonMessage}</p>\n            <p>{pythonToJavaMessage}</p>\n          </div>\n\n          <div style={{ marginBottom: '20px' }}>\n            <h2>Java Service</h2>\n            <button onClick={callJavaService} style={{ marginRight: '10px' }}>Call Java Service</button>\n            <button onClick={callPythonFromJava}>Call Python from Java</button>\n            <p>{javaMessage}</p>\n            <p>{javaToPythonMessage}</p>\n          </div>\n        </div>\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { initializeFaro as coreInit } from '@grafana/faro-core';\nimport type { Faro } from '@grafana/faro-core';\n\nimport { makeCoreConfig } from './config';\nimport type { BrowserConfig } from './config';\n\nexport function initializeFaro(config: BrowserConfig): Faro {\n  const coreConfig = makeCoreConfig(config);\n\n  if (!coreConfig) {\n    return undefined!;\n  }\n\n  return coreInit(coreConfig);\n}\n","import {\n  createInternalLogger,\n  defaultBatchingConfig,\n  defaultGlobalObjectKey,\n  defaultInternalLoggerLevel,\n  defaultLogArgsSerializer,\n  defaultUnpatchedConsole,\n  isObject,\n} from '@grafana/faro-core';\nimport type { Config, MetaItem, Transport } from '@grafana/faro-core';\n\nimport { defaultEventDomain } from '../consts';\nimport { parseStacktrace } from '../instrumentations';\nimport { defaultSessionTrackingConfig } from '../instrumentations/session';\nimport { defaultMetas } from '../metas';\nimport { k6Meta } from '../metas/k6';\nimport { FetchTransport } from '../transports';\n\nimport { getWebInstrumentations } from './getWebInstrumentations';\nimport type { BrowserConfig } from './types';\n\nexport function makeCoreConfig(browserConfig: BrowserConfig): Config | undefined {\n  const transports: Transport[] = [];\n\n  const internalLogger = createInternalLogger(browserConfig.unpatchedConsole, browserConfig.internalLoggerLevel);\n\n  if (browserConfig.transports) {\n    if (browserConfig.url || browserConfig.apiKey) {\n      internalLogger.error('if \"transports\" is defined, \"url\" and \"apiKey\" should not be defined');\n    }\n\n    transports.push(...browserConfig.transports);\n  } else if (browserConfig.url) {\n    transports.push(\n      new FetchTransport({\n        url: browserConfig.url,\n        apiKey: browserConfig.apiKey,\n      })\n    );\n  } else {\n    internalLogger.error('either \"url\" or \"transports\" must be defined');\n  }\n\n  function createMetas(): MetaItem[] {\n    const initialMetas = defaultMetas;\n\n    if (browserConfig.metas) {\n      initialMetas.push(...browserConfig.metas);\n    }\n\n    const isK6BrowserSession = isObject((window as any).k6);\n\n    if (isK6BrowserSession) {\n      return [...initialMetas, k6Meta];\n    }\n\n    return initialMetas;\n  }\n\n  const config: Config = {\n    app: browserConfig.app,\n    batching: {\n      ...defaultBatchingConfig,\n      ...browserConfig.batching,\n    },\n    dedupe: browserConfig.dedupe ?? true,\n    globalObjectKey: browserConfig.globalObjectKey || defaultGlobalObjectKey,\n    instrumentations: browserConfig.instrumentations ?? getWebInstrumentations(),\n    internalLoggerLevel: browserConfig.internalLoggerLevel ?? defaultInternalLoggerLevel,\n    isolate: browserConfig.isolate ?? false,\n    logArgsSerializer: browserConfig.logArgsSerializer ?? defaultLogArgsSerializer,\n    metas: createMetas(),\n    parseStacktrace,\n    paused: browserConfig.paused ?? false,\n    preventGlobalExposure: browserConfig.preventGlobalExposure ?? false,\n    transports,\n    unpatchedConsole: browserConfig.unpatchedConsole ?? defaultUnpatchedConsole,\n\n    beforeSend: browserConfig.beforeSend,\n    eventDomain: browserConfig.eventDomain ?? defaultEventDomain,\n    ignoreErrors: browserConfig.ignoreErrors,\n    // ignore cloud collector urls by default. These are URLs ending with /collect or /collect/ followed by alphanumeric characters.\n    ignoreUrls: (browserConfig.ignoreUrls ?? []).concat([/\\/collect(?:\\/[\\w]*)?$/]),\n\n    sessionTracking: {\n      ...defaultSessionTrackingConfig,\n      ...browserConfig.sessionTracking,\n    },\n\n    user: browserConfig.user,\n    view: browserConfig.view,\n    trackResources: browserConfig.trackResources,\n    trackWebVitalsAttribution: browserConfig.trackWebVitalsAttribution,\n    consoleInstrumentation: browserConfig.consoleInstrumentation,\n  };\n\n  return config;\n}\n","export const defaultEventDomain = 'browser';\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { initializeFaro, ReactIntegration, getWebInstrumentations, withFaroRouterInstrumentation } from '@grafana/faro-react';\nimport { TracingInstrumentation } from '@grafana/faro-web-tracing';\nimport App from './App';\n\n// Initialize Faro before the app renders\ninitializeFaro({\n  url: 'https://faro-collector-prod-us-central-0.grafana.net/collect/9ed1d991dedd20c087870f40c61956b7',\n  app: {\n    name: 'Microservices',\n    version: '1.0.0',\n    environment: 'production'\n  },\n  instrumentations: [\n    ...getWebInstrumentations(),\n    new TracingInstrumentation(),\n    new ReactIntegration(),\n  ],\n});\n\n// Error generation functions\nconst generatePythonError = async () => {\n    try {\n        await fetch('/api/python/generate-error');\n    } catch (error) {\n        console.error(\"Python Error occurred:\", error);\n    }\n};\n\nconst generateJavaError = async () => {\n    try {\n        await fetch('/api/java/generate-error');\n    } catch (error) {\n        console.error(\"Java Error occurred:\", error);\n    }\n};\n\n// Define your routes\nconst routes = [\n  {\n    path: \"/\",\n    element: <App />,\n    children: [\n      {\n        path: \"python-error\",\n        element: <div>\n          <h2>Python Error Generator</h2>\n          <button onClick={generatePythonError}>Generate Python Error</button>\n        </div>\n      },\n      {\n        path: \"java-error\",\n        element: <div>\n          <h2>Java Error Generator</h2>\n          <button onClick={generateJavaError}>Generate Java Error</button>\n        </div>\n      }\n    ]\n  }\n];\n\n// Create and instrument the router\nconst router = createBrowserRouter(routes);\nconst instrumentedRouter = withFaroRouterInstrumentation(router);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <RouterProvider router={instrumentedRouter} />\n  </React.StrictMode>\n);\n","import { BaseInstrumentation, VERSION } from '@grafana/faro-web-sdk';\n\nimport { setDependencies } from './dependencies';\nimport { initializeReactRouterInstrumentation } from './router';\nimport type { ReactIntegrationConfig } from './types';\n\nexport class ReactIntegration extends BaseInstrumentation {\n  name = '@grafana/faro-react';\n  version = VERSION;\n\n  constructor(private options: ReactIntegrationConfig = {}) {\n    super();\n  }\n\n  initialize(): void {\n    setDependencies(this.internalLogger, this.api);\n    initializeReactRouterInstrumentation(this.options);\n  }\n}\n","import { internalLogger } from '../dependencies';\nimport type { ReactIntegrationConfig } from '../types';\n\nimport { ReactRouterVersion } from './types';\nimport { initializeReactRouterV4V5Instrumentation } from './v4v5';\nimport { initializeReactRouterV6DataRouterInstrumentation, initializeReactRouterV6Instrumentation } from './v6';\n\nexport function initializeReactRouterInstrumentation(options: ReactIntegrationConfig): void {\n  const initMessage = 'Initializing React Router';\n\n  switch (options.router?.version) {\n    case ReactRouterVersion.V6:\n      internalLogger.debug(`${initMessage} V6 instrumentation`);\n      initializeReactRouterV6Instrumentation(options.router.dependencies);\n      break;\n\n    case ReactRouterVersion.V6_data_router:\n      internalLogger.debug(`${initMessage} V6 data router instrumentation`);\n      initializeReactRouterV6DataRouterInstrumentation(options.router.dependencies);\n      break;\n\n    case ReactRouterVersion.V5:\n    case ReactRouterVersion.V4:\n      internalLogger.debug(`${initMessage} ${options.router.version} instrumentation`);\n      initializeReactRouterV4V5Instrumentation(options.router.dependencies);\n      break;\n\n    default:\n      internalLogger.debug('Skipping initialization of React Router instrumentation');\n  }\n}\n","import { EVENT_ROUTE_CHANGE, globalObject } from '@grafana/faro-web-sdk';\n\nimport { api } from '../../dependencies';\nimport { NavigationType, ReactRouterLocation } from '../types';\n\nimport { isInitialized } from './routerDependencies';\nimport type { EventRouteTransitionAttributes, RouteObjectV6DataRouter } from './types';\nimport { getRouteFromLocation } from './utils';\n\ninterface RouterState {\n  historyAction: NavigationType | any;\n  location: ReactRouterLocation;\n}\n\ninterface Router {\n  state: RouterState;\n  routes: RouteObjectV6DataRouter[];\n  subscribe(fn: (state: RouterState) => void): () => void;\n}\n\n/**\n * To use with React Router 6.4 data APIs.\n */\nexport function withFaroRouterInstrumentation<R extends Router = Router>(router: R) {\n  let lastRoute: EventRouteTransitionAttributes = {};\n\n  router.subscribe((state) => {\n    const navigationType: NavigationType = state.historyAction;\n    const location = state.location;\n    const routes = router.routes;\n\n    if (isInitialized && (navigationType === NavigationType.Push || navigationType === NavigationType.Pop)) {\n      const route = getRouteFromLocation(routes, location);\n      const url = globalObject.location?.href;\n\n      api.pushEvent(EVENT_ROUTE_CHANGE, {\n        toRoute: route,\n        toUrl: globalObject.location?.href,\n        ...lastRoute,\n      });\n\n      lastRoute = {\n        fromRoute: route,\n        fromUrl: url,\n      };\n    }\n  });\n\n  return router;\n}\n"],"names":["reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","callee","arguments","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","concat","targetStatics","sourceStatics","i","key","descriptor","e","b","Symbol","for","c","d","f","g","h","k","l","m","n","p","q","r","t","v","w","x","y","z","a","u","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","hasOwnProperty","ka","la","ma","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","set","Reflect","construct","includes","Pa","tag","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","J","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","PureComponent","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","isFunction","funktion","logger","obj","propertyIsEnumerable","writable","shimmer","wrap","nodule","wrapper","original","wrapped","unwrap","__unwrap","massWrap","nodules","names","massUnwrap","undefined","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","SUFFIX_BROWSER","enumerize","arr","enums","str1","str2","lowerize","str","len","rgxMapper","arrays","j","matches","regex","exec","strMapper","windowsVersionMap","regexes","browser","cpu","device","engine","EDGE","os","UAParser","extensions","getResult","_navigator","_ua","userAgent","_uach","userAgentData","_rgxmap","mergedRegexes","_isSelfNav","getBrowser","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","mobile","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","platform","getUA","setUA","CPU","DEVICE","ENGINE","OS","define","$","jQuery","Zepto","parser","result","prop","_objectSpread","global","globalThis","__symbol__","initZone","mark","performanceMeasure","label","ZoneImpl","assertZonePatched","patches","root","zone","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","checkDuplicate","perfName","_api","_parent","_name","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","getZoneWith","fork","_callback","intercept","runGuarded","run","applyThis","applyArgs","invoke","handleError","runTask","task","NO_ZONE","zoneTask","isPeriodic","isRefreshable","notScheduled","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","previousTask","cancelFn","invokeTask","unknown","zoneDelegates","_zoneDelegates","_updateTaskCount","scheduleTask","newZone","_zone","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","runCount","DELEGATE_ZS","onHasTask","delegate","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","returnTask","scheduleFn","isEmpty","counts","prev","change","_state","self","useG","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","handleId","toJSON","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","nativeScheduleMicroTask","func","nativeThen","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","ObjectGetPrototypeOf","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","Zone","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","enableBeforeunloadSymbol","wrapFn","eventNameSymbol","errorEvent","filename","lineno","colno","patchProperty","desc","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","onProperties","originalInstanceKey","className","OriginalClass","patchFn","proto","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","patched","isDetectedIEOrEdge","ieOrEdge","isIE","isNumber","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","api","apis","patchOptions","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","originalDelegate","once","globalCallback","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","customSchedulePrepend","isExisting","symbolEventNames","symbolEventName","existingTasks","removeAbortListener","allRemoved","diff","typeOfDelegate","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","newOptions","signal","copyEventListenerOptions","buildEventListenerOptions","aborted","constructorName","targetSource","onAbort","existingTask","findEventTasks","symbolCaptureEventName","captureTasks","removeTasks","evtName","results","foundTasks","captureFalseTasks","captureTrueTasks","Event","patchQueueMicrotask","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","handleOrId","handle","refresh","clearTask","originalRefresh","_task","eventTargetPatch","eventNames","EVENT_TARGET","ignoreProperties","tip","filter","ip","targetIgnoreProperties","op","patchFilteredProperties","getOnEventNames","startsWith","propertyDescriptorPatch","patchTargets","ignoreErrorProperties","patchPromise","_uncaughtPromiseErrors","isDisableWrappingUncaughtPromiseRejection","rejection","uncaughtPromiseError","throwOriginal","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","UNRESOLVED","RESOLVED","REJECTED","makeResolver","promise","resolvePromise","wasCalled","wrappedFunction","TYPE_ERROR","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","TypeError","clearRejectedNoCatch","trace","scheduleResolveOrReject","readableObjectToString","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","AggregateError","withResolvers","res","rej","any","values","promises","finished","race","onResolve","onReject","all","allWithCallback","allSettled","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","executor","toStringTag","species","_this$constructor","finally","onFinally","_this$constructor2","NativePromise","symbolThenPatched","Ctor","originalThen","zoneify","resultPromise","ctor","targetName","method","callbacks","nativeDelegate","opts","_unused","Zone$1","_global$_Zone","loadZone","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","nativePromise","nativeError","originalObjectToString","patchToString","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","patchUtil","patchCommon","legacyPatch","clear","blockingMethods","s","patchEvent","XMLHttpRequestEventTarget","customElements","patchCustomElements","XMLHttpRequest","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","READY_STATE_CHANGE","SCHEDULED","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","patchXHR","geolocation","fnNames","patchPrototype","findPromiseRejectionHandler","PromiseRejectionEvent","evt","patchBrowser","toPropertyKey","__esModule","ownKeys","o","getOwnPropertyDescriptors","defineProperties","_typeof","toPrimitive","Number","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","getter","leafPrototypes","getProto","ns","def","definition","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","immutableRouteKeys","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","decoded","decodePath","matchRouteBranch","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","paramName","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponseImpl","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","TRANSITIONS_STORAGE_KEY","createRouter","init","routerWindow","isServer","detectErrorBoundary","inFlightDataRoutes","initialized","router","dataRoutes","dataStrategyImpl","dataStrategy","defaultDataStrategy","patchRoutesOnNavigationImpl","patchRoutesOnNavigation","future","v7_fetcherPersist","v7_normalizeFormMethod","v7_partialHydration","v7_prependBasename","v7_skipActionErrorRevalidation","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","active","loader","loaderData","findIndex","shouldLoadRouteOnHydration","fogOfWar","pendingNavigationController","unblockBlockerHistoryUpdate","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","actionData","fetchers","blockers","pendingAction","pendingPreventScrollReset","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","updateState","newState","completedFetchers","deletedFetchersKeys","fetcher","subscriber","viewTransitionOpts","deleteFetcher","completeNavigation","_temp","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","mergeLoaderData","priorPaths","currentLocation","nextLocation","toPaths","getSavedScrollPosition","async","startNavigation","abort","startUninterruptedRevalidation","getScrollKey","saveScrollPosition","enableViewTransition","routesToUse","loadingNavigation","overrideNavigation","notFoundMatches","handleNavigational404","isHashChangeOnly","submission","AbortController","pendingActionResult","request","createClientSideRequest","pendingError","findNearestBoundary","actionResult","isFogOfWar","interruptActiveLoads","getSubmittingNavigation","discoverResult","discoverRoutes","shortCircuited","boundaryId","partialMatches","actionMatch","getTargetMatch","callDataStrategy","routeId","isRedirectResult","normalizeRedirectLocation","response","headers","startRedirectNavigation","isDeferredResult","isErrorResult","boundaryMatch","handleAction","getLoadingNavigation","updatedMatches","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","getActionDataForCommit","updates","revalidatingFetcher","getLoadingFetcher","getUpdatedRevalidatingFetchers","abortFetcher","controller","abortPendingFetchRevalidations","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect","findRedirect","processLoaderData","deferredData","subscribe","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","handleLoaders","isNavigation","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","fetcherKey","dataResults","callDataStrategyImpl","entries","isRedirectDataStrategyResultResult","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","currentMatches","loaderResultsPromise","fetcherResultsPromise","acc","resolveNavigationDeferredResults","resolveFetcherDeferredResults","updateFetcherState","setFetcherError","getFetcher","markFetchersDone","doneFetcher","getDoneFetcher","doneKeys","landedId","yeetedKeys","deleteBlocker","updateBlocker","newBlocker","blocker","shouldBlockNavigation","_ref2","blockerKey","blockerFunction","predicate","cancelledRouteIds","dfd","cancel","convertRouteMatchToUiMatch","isNonHMR","localManifest","patch","patchRoutesImpl","newMatches","newPartialMatches","initialize","nextHistoryUpdatePromise","_window","sessionPositions","sessionStorage","getItem","parse","restoreAppliedTransitions","_saveAppliedTransitions","setItem","persistAppliedTransitions","enableScrollRestoration","positions","getPosition","getKey","navigate","normalizedPath","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","userReplace","viewTransition","fetch","requestMatches","detectAndHandle405Error","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResults","revalidationRequest","loadId","loadFetcher","staleKey","handleFetcherAction","resolveDeferredData","handleFetcherLoader","revalidate","dispose","getBlocker","patchRoutes","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","URLSearchParams","indexValues","getAll","append","qs","normalizeFormMethod","isFetcher","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","stripHashFromPath","FormData","_ref3","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","includeBoundary","skipActionErrorRevalidation","currentUrl","nextUrl","boundaryMatches","actionStatus","statusCode","shouldSkipRevalidation","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","hasData","hasError","currentPath","loaderMatch","arg","routeChoice","_childrenToPatch","childrenToPatch","newRoute","existingRoute","isSameRoute","aChild","_existingRoute$childr","bChild","_ref4","shouldLoad","requestContext","loadRouteDefinitionsPromises","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","loadLazyRouteModule","dsMatches","loadRoutePromise","handlerOverride","staticContext","runHandler","abortPromise","actualHandler","ctx","handlerPromise","handlerError","callLoaderOrAction","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","_result$init2","_result$init","_result$init3","_result$init4","_result$init5","_result$init6","deferred","resolveData","isDeferredData","Headers","trimmedMatches","normalizedLocation","protocol","isSameBasename","Request","processRouteLoaderData","skipLoaderErrorBubbling","foundError","loaderHeaders","newLoaderData","mergedLoaderData","eligibleMatches","reverse","find","_temp5","errorMessage","isRevalidatingLoader","unwrappedData","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","useNavigateUnstable","OutletContext","useResolvedPath","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","errorInfo","routeContext","RenderedRoute","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","errorIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","needsToRunLoader","reduceRight","shouldRenderHydrateFallback","alreadyWarned$1","getChildren","hookName","useRouteContext","thisRoute","alreadyWarned","logDeprecation","flag","msg","logV6DeprecationWarnings","renderFuture","routerFuture","v7_startTransition","Outlet","useOutlet","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","__reactRouterVersion","parseHydrationData","__staticRouterHydrationData","deserializeErrors","serialized","val","__type","UNSAFE_ErrorResponseImpl","__subType","ErrorConstructor","ViewTransitionContext","isTransitioning","FetchersContext","startTransitionImpl","flushSyncImpl","ReactDOM","flushSyncSafe","Deferred","RouterProvider","fallbackElement","setStateImpl","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","setTransition","interruption","setInterruption","fetcherData","optInStartTransition","startTransitionSafe","isViewTransitionUnavailable","startViewTransition","skipTransition","renderPromise","UNSAFE_logV6DeprecationWarnings","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","MemoizedDataRoutes","DataRoutes","UNSAFE_useRoutesImpl","Link","_ref7","absoluteHref","reloadDocument","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","isTypeof","isToString","isInstanceOf","reference","isNull","isString","isObject","isEventDefined","isErrorDefined","isError","internalLogger","reactVersion","reactVersionMajor","major","parseInt","getMajorReactVersion","isReactVersionAtLeast","InternalLoggerLevel","defaultInternalLogger","debug","info","prefix","defaultInternalLoggerLevel","ERROR","defaultUnpatchedConsole","BaseExtension","unpatchedConsole","config","metas","logDebug","_len","_key","logInfo","_len2","_key2","logWarn","_len3","_key3","logError","_len4","_key4","BaseInstrumentation","transports","ReactRouterVersion","NavigationType","EVENT_SESSION_START","EVENT_SESSION_RESUME","EVENT_ROUTE_CHANGE","activeEvent","createNewActiveEvent","Route","isInitialized","FaroRoute","_a","computedMatch","isExact","_jsx","globalObject","initializeReactRouterV4V5Instrumentation","componentDisplayName","setReactRouterV4V5Dependencies","_b","_d","_c","_location","pushEvent","skipDedupe","createRoutesFromChildren","Routes","useNavigationType","getNumberOfUrlSegments","currentSegment","getRouteFromLocation","matchedRoutes","pathBuilder","FaroRoutes","lastRouteRef","toRoute","toUrl","fromRoute","fromUrl","ActualRoutes","routesComponent","initializeReactRouterV6Instrumentation","newDependencies","initializeReactRouterV6DataRouterInstrumentation","valueTypeRegex","webkitLineRegex","webkitEvalRegex","webkitAddressAtString","firefoxLineRegex","firefoxEvalRegex","safariExtensionString","safariWebExtensionString","reactMinifiedRegex","buildStackFrame","stackFrame","function","getDataFromSafariExtensions","isSafariExtension","isSafariWebExtension","getStackFramesFromError","lines","stacktrace","_line","stackFrames","line","parts","submatch","columnNumber","getErrorDetails","isDomErrorRes","isEventRes","isErrorEvent","isDomError","isDomException","isEvent","defaultExceptionType","registerOnerror","oldOnerror","onerror","eventIsString","initialStackFrame","groups","getValueAndTypeFromMessage","pushError","registerOnunhandledrejection","isPrimitive","ErrorsInstrumentation","persisted","getEntriesByType","responseStart","activationStart","prerendering","wasDiscarded","rating","PerformanceObserver","supportedEntryTypes","getEntries","observe","buffered","requestAnimationFrame","visibilityState","firstHiddenTime","disconnect","max","reportAllChanges","interactionId","interactionCount","durationThreshold","entryType","duration","latency","requestIdleCallback","processingStart","WebVitalsBasic","pushMeasurement","mapping","indicator","metric","cls","hadRecentInput","takeRecords","fcp","onFCP","fid","inp","PerformanceEventTiming","lcp","ttfb","domInteractive","domContentLoadedEventStart","domComplete","classList","nt","processingEnd","abs","renderTime","tt","et","it","at","ct","ut","st","dt","lt","mt","gt","pt","vt","ht","yt","Tt","eventTarget","eventType","eventEntry","loadState","attribution","unknownString","internalGlobalObjectKey","faro","registerFaro","instrumentations","pause","unpause","isolate","setInternalFaroOnGlobalObject","preventGlobalExposure","globalObjectKey","setFaroOnGlobalObject","webStorageType","isWebStorageAvailable","storage","testItem","removeItem","webStorageMechanism","isWebStorageTypeAvailable","isLocalStorageAvailable","isSessionStorageAvailable","NAVIGATION_ID_STORAGE_KEY","loadStateKey","timeToFirstByteKey","WebVitalsWithAttribution","corePushMeasurement","measureCLS","measureFCP","measureFID","measureINP","measureLCP","measureTTFB","sources","largestShiftTarget","largestShiftTime","largestShiftValue","largestShiftSource","largestShiftEntry","onCLS","buildInitialValues","addIfPresent","buildInitialContext","timeToFirstByte","firstByteToFCP","navigationEntry","fcpEntry","onFID","interactionTarget","interactionTargetElement","interactionType","interactionTime","nextPaintTime","processedEventEntries","longAnimationFrameEntries","inputDelay","processingDuration","presentationDelay","onINP","resourceLoadDelay","resourceLoadDuration","elementRenderDelay","requestStart","responseEnd","lcpEntry","lcpResourceEntry","onLCP","waitingDuration","cacheDuration","dnsDuration","connectionDuration","requestDuration","workerStart","fetchStart","domainLookupStart","connectStart","connectEnd","onTTFB","navigationEntryId","navigation_type","navigation_entry_id","WebVitalsInstrumentation","intializeWebVitalsInstrumentation","trackWebVitalsAttribution","dateNow","getCurrentTimestamp","toISOString","timestampToIsoString","alphabet","genShortID","isSampled","sessionTracking","samplingRate","sampler","throttle","lastPending","timeoutBehavior","stringifyExternalJson","valueSeen","getCircularDependencyReplacer","STORAGE_KEY","SESSION_INACTIVITY_TIME","defaultSessionTrackingConfig","enabled","persistent","maxSessionPersistenceTime","createUserSessionObject","sessionId","started","lastActivity","generateSessionId","isUserSessionValid","session","getUserSessionUpdater","fetchUserSession","storeUserSession","forceSessionExtend","sessionTrackingConfig","isPersistentSessions","sessionFromStorage","newSession","addSessionMetadataToNextSession","setSession","sessionMeta","onSessionChange","previousSession","attributes","PersistentSessionsManager","updateSession","updateUserSession","removeUserSession","storageTypeLocal","storedSession","addListener","sessionFromLocalStorage","userSession","VolatileSessionsManager","storageTypeSession","sessionFromSessionStorage","getSessionManagerByConfig","SessionInstrumentation","sendSessionStartEvent","notifiedSession","createInitialSession","SessionManager","sessionsConfig","lifecycleType","initialSession","createSession","_e","registerBeforeSendHook","addBeforeSendHooks","item","newItem","newAttributes","initialSessionMeta","ViewInstrumentation","sendViewChangedEvent","notifiedView","fromView","toView","w3cTraceparentFormat","getSpanContextFromServerTiming","serverTimings","serverEntry","description","traceId","spanId","entryUrlIsIgnored","entryName","includePerformanceEntry","performanceEntryJSON","allowProps","allowPropKey","allowPropValue","perfEntryPropVal","createFaroResourceTiming","resourceEntryRaw","decodedBodySize","domainLookupEnd","encodedBodySize","initiatorType","nextHopProtocol","redirectEnd","redirectStart","renderBlockingStatus","rbs","responseStatus","secureConnectionStart","transferSize","toFaroPerformanceTimingString","tcpHandshakeTime","dnsLookupTime","tlsNegotiationTime","redirectTime","requestTime","responseTime","fetchTime","serviceWorkerTime","cacheHitStatus","cacheType","getCacheType","createFaroNavigationTiming","navigationEntryRaw","domContentLoadedEventEnd","loadEventEnd","loadEventStart","parserStart","timing","domLoading","timeOrigin","getDocumentParsingTime","pageLoadTime","documentParsingTime","domProcessingTime","domContentLoadHandlerTime","onLoadTime","round","DEFAULT_TRACK_RESOURCES","LogLevel","PerformanceInstrumentation","handleReady","readyStateCompleteHandler","onDocumentReady","__awaiter","ignoredUrls","getIgnoreUrls","faroNavigationId","faroNavigationEntryResolve","faroNavigationEntryPromise","observer","observedEntries","navEntryJson","spanContext","serverTiming","faroPreviousNavigationId","faroNavigationEntry","timestampOverwriteMs","getNavigationTimings","trackResources","resourceEntryJson","faroResourceEntry","faroResourceId","observeResourceTimings","flatMap","transport","defaultLogLevel","LOG","allLogLevels","TRACE","DEBUG","INFO","WARN","defaultLogArgsSerializer","ConsoleInstrumentation","_this","consoleInstrumentation","level","disabledLevels","defaultDisabledLevels","consoleErrorAsLog","pushLog","getWebInstrumentations","enablePerformanceInstrumentation","captureConsole","captureConsoleDisabledLevels","TransportItemType","transportItemTypeToBodyKey","EXCEPTION","MEASUREMENT","EVENT","deepEqual","aIsArray","bIsArray","aIsObject","bIsObject","aKeys","bKeys","aKey","stacktraceParser","parseCause","cause","initializeAPI","tracesApi","_unpatchedConsole","_config","otel","getOTEL","getTraceContext","getSpanContext","trace_id","span_id","initOTEL","isOTELInitialized","pushTraces","execute","initializeTracesAPI","lastPayload","parseStacktrace","changeStacktraceParser","newStacktraceParser","getStacktraceParser","timestamp","frames","testingPayload","stackTrace","dedupe","initializeExceptionsAPI","metaSession","metaUser","metaView","setUser","user","remove","resetUser","resetSession","getSession","setView","previousView","getView","initializeMetaAPI","logArgsSerializer","initializeLogsAPI","initializeMeasurementsAPI","domain","eventDomain","initializeEventsAPI","createInternalLogger","internalLoggerLevel","OFF","VERBOSE","BatchExecutor","sendFn","signalBuffer","itemLimit","sendTimeout","paused","flushInterval","flush","addItem","setInterval","clearInterval","groupItems","items","itemMap","currentItems","createBeforeSendHookFromIgnorePatterns","patterns","shouldIgnoreEvent","initializeTransports","beforeSendHooks","applyBeforeSendHooks","filteredItems","hook","modified","batchedSend","isBatched","send","batchExecutor","batching","newTransports","newTransport","existingTransport","newBeforeSendHooks","beforeSendHook","addIgnoreErrorsPatterns","ignoreErrorsPatterns","ignoreErrorsPattern","getBeforeSendHooks","filteredItem","instantSend","isPaused","transportsToRemove","transportToRemove","existingTransportIndex","removeBeforeSendHooks","_len5","beforeSendHooksToRemove","_key5","initializeUnpatchedConsole","initializeFaro","initializeInternalLogger","notifyListeners","newItems","itemsToRemove","currentItem","removeListener","currentListener","initializeMetas","newInstrumentations","newInstrumentation","existingInstrumentation","instrumentationsToRemove","instrumentationToRemove","existingInstrumentationIndex","initializeInstrumentations","initial","sdk","app","bundleId","appName","registerInitialMetas","beforeSend","ignoreErrors","registerInitialTransports","registerInitialInstrumentations","defaultBatchingConfig","defaultMetas","browserMeta","osName","osVersion","language","brands","getBrands","viewportWidth","innerWidth","viewportHeight","innerHeight","pageMeta","page","k6Meta","k6Properties","k6","isK6Browser","testRunId","BaseTransport","mergeResourceSpans","traces","resourceSpans","currentResource","currentSpans","scopeSpans","newSpans","FetchTransport","disabledUntil","rateLimitBackoffMs","defaultRateLimitBackoffMs","getNow","promiseBuffer","concurrency","buffer","inProgress","work","producer","promiseProducer","createPromiseBuffer","bufferSize","signals","getTransportBody","requestOptions","apiKey","restOfRequestOptions","__rest","keepalive","extendFaroSession","getRetryAfterDate","ignoreUrls","retryAfterHeader","SessionExpiredString","_globalThis","isCompatible","ownVersion","acceptedVersions","rejectedVersions","myVersionMatch","ownVersionParsed","globalVersion","_reject","_accept","globalVersionMatch","globalVersionParsed","_makeCompatibilityCheck","GLOBAL_OPENTELEMETRY_API_KEY","registerGlobal","diag","allowOverride","getGlobal","unregisterGlobal","createContextKey","DiagLogLevel","ROOT_CONTEXT","BaseContext","parentContext","_currentContext","deleteValue","NoopContextManager","with","thisArg","_i","__spreadArray","__read","enable","disable","DiagComponentLogger","_namespace","namespace","logProxy","verbose","TraceFlags","DiagAPI","_logProxy","setLogger","optionsOrLogLevel","logLevel","oldLogger","newLogger","maxLevel","_filterFunc","theLevel","theFunc","NONE","ALL","createLogLevelDiagLogger","suppressOverrideMessage","createComponentLogger","_instance","API_NAME","NOOP_CONTEXT_MANAGER","ContextAPI","getInstance","setGlobalContextManager","contextManager","_getContextManager","INVALID_SPANID","INVALID_TRACEID","INVALID_SPAN_CONTEXT","traceFlags","NonRecordingSpan","_spanContext","_value","setAttributes","_attributes","addEvent","addLink","_link","addLinks","_links","setStatus","updateName","_endTime","isRecording","recordException","_exception","_time","SPAN_KEY","getSpan","getActiveSpan","setSpan","span","deleteSpan","setSpanContext","VALID_TRACEID_REGEX","VALID_SPANID_REGEX","isValidTraceId","isSpanContextValid","wrapSpanContext","contextApi","NoopTracer","startSpan","parentFromContext","startActiveSpan","arg2","arg3","arg4","contextWithSpanSet","NOOP_TRACER","ProxyTracer","_provider","_getTracer","_options","_fn","tracer","_delegate","getDelegateTracer","NOOP_TRACER_PROVIDER","NoopTracerProvider","getTracer","_version","ProxyTracerProvider","getDelegate","setDelegate","TraceAPI","_proxyTracerProvider","setGlobalTracerProvider","provider","success","getTracerProvider","ZONE_CONTEXT_KEY","ZoneContextManager","_enabled","_zoneCounter","_activeContextFromZone","activeZone","_bindFunction","manager","contextWrapper","_bindListener","__ot_listeners","_patchAddEventListener","_patchRemoveEventListener","_createZoneName","_createZone","zoneName","_getActiveZone","patchedListener","events","SUPPRESS_TRACING_KEY","isTracingSuppressed","VALID_KEY_CHAR_RANGE","VALID_KEY_REGEX","VALID_VALUE_BASE_REGEX","INVALID_VALUE_COMMA_EQUAL_REGEX","TraceState","rawTraceState","_internalState","_parse","traceState","_clone","unset","serialize","_keys","agg","part","listMember","validateKey","validateValue","TRACE_PARENT_HEADER","TRACE_STATE_HEADER","TRACE_PARENT_REGEX","W3CTraceContextPropagator","carrier","setter","traceParent","extract","traceParentHeader","parseTraceParent","isRemote","traceStateHeader","fields","NoopMeter","createGauge","NOOP_GAUGE_METRIC","createHistogram","NOOP_HISTOGRAM_METRIC","createCounter","NOOP_COUNTER_METRIC","createUpDownCounter","NOOP_UP_DOWN_COUNTER_METRIC","createObservableGauge","NOOP_OBSERVABLE_GAUGE_METRIC","createObservableCounter","NOOP_OBSERVABLE_COUNTER_METRIC","createObservableUpDownCounter","NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC","addBatchObservableCallback","_observables","removeBatchObservableCallback","NoopMetric","NoopCounterMetric","_super","__extends","NoopUpDownCounterMetric","NoopGaugeMetric","record","NoopHistogramMetric","NoopObservableMetric","addCallback","removeCallback","NoopObservableCounterMetric","NoopObservableGaugeMetric","NoopObservableUpDownCounterMetric","NOOP_METER","NOOP_METER_PROVIDER","NoopMeterProvider","getMeter","metrics","MetricsAPI","setGlobalMeterProvider","getMeterProvider","GLOBAL_LOGS_API_KEY","NoopLogger","emit","_logRecord","NOOP_LOGGER_PROVIDER","NoopLoggerProvider","getLogger","LogsAPI","setGlobalLoggerProvider","getLoggerProvider","requiredVersion","logs","TMP_DEPLOYMENT_ENVIRONMENT","TMP_PROCESS_RUNTIME_NAME","TMP_SERVICE_NAME","TMP_TELEMETRY_SDK_NAME","TMP_TELEMETRY_SDK_LANGUAGE","TMP_TELEMETRY_SDK_VERSION","SEMRESATTRS_DEPLOYMENT_ENVIRONMENT","SEMRESATTRS_PROCESS_RUNTIME_NAME","SEMRESATTRS_SERVICE_NAME","SEMRESATTRS_TELEMETRY_SDK_NAME","SEMRESATTRS_TELEMETRY_SDK_LANGUAGE","SEMRESATTRS_TELEMETRY_SDK_VERSION","TMP_TELEMETRYSDKLANGUAGEVALUES_WEBJS","TELEMETRYSDKLANGUAGEVALUES_WEBJS","SDK_INFO","Resource","asyncAttributesPromise","asyncAttributesPending","_syncAttributes","_asyncAttributesPromise","asyncAttributes","empty","EMPTY","waitForAsyncAttributes","sent","merge","other","mergedSyncAttributes","__assign","mergedAttributesPromise","thisAsyncAttributes","otherAsyncAttributes","NoopTextMapPropagator","_carrier","defaultTextMapGetter","defaultTextMapSetter","BAGGAGE_KEY","getBaggage","getActiveBaggage","setBaggage","baggage","deleteBaggage","BaggageImpl","_entries","getEntry","entry","getAllEntries","setEntry","newBaggage","removeEntry","removeEntries","keys_1","__values","keys_1_1","baggageEntryMetadataSymbol","createBaggage","transform","NOOP_TEXT_MAP_PROPAGATOR","propagation","PropagationAPI","setGlobalPropagator","propagator","_getGlobalPropagator","nullTag","undefinedTag","funcToString","objectCtorString","getPrototype","objectProto","symToStringTag","nativeObjectToString","isPlainObject","isObjectLike","isOwn","unmasked","getRawTag","objectToString","baseGetTag","TracesSamplerValues","takeValue","mergeTwoObjects","one","two","objects","shouldMerge","twoValue","obj1","obj2","wasObjectReferenced","arr1","arr2","ENVIRONMENT_BOOLEAN_KEYS","isEnvVarABoolean","ENVIRONMENT_NUMBERS_KEYS","isEnvVarANumber","ENVIRONMENT_LISTS_KEYS","isEnvVarAList","DEFAULT_ATTRIBUTE_VALUE_LENGTH_LIMIT","DEFAULT_ATTRIBUTE_COUNT_LIMIT","DEFAULT_ENVIRONMENT","OTEL_SDK_DISABLED","CONTAINER_NAME","ECS_CONTAINER_METADATA_URI_V4","ECS_CONTAINER_METADATA_URI","HOSTNAME","KUBERNETES_SERVICE_HOST","NAMESPACE","OTEL_BSP_EXPORT_TIMEOUT","OTEL_BSP_MAX_EXPORT_BATCH_SIZE","OTEL_BSP_MAX_QUEUE_SIZE","OTEL_BSP_SCHEDULE_DELAY","OTEL_BLRP_EXPORT_TIMEOUT","OTEL_BLRP_MAX_EXPORT_BATCH_SIZE","OTEL_BLRP_MAX_QUEUE_SIZE","OTEL_BLRP_SCHEDULE_DELAY","OTEL_EXPORTER_JAEGER_AGENT_HOST","OTEL_EXPORTER_JAEGER_AGENT_PORT","OTEL_EXPORTER_JAEGER_ENDPOINT","OTEL_EXPORTER_JAEGER_PASSWORD","OTEL_EXPORTER_JAEGER_USER","OTEL_EXPORTER_OTLP_ENDPOINT","OTEL_EXPORTER_OTLP_TRACES_ENDPOINT","OTEL_EXPORTER_OTLP_METRICS_ENDPOINT","OTEL_EXPORTER_OTLP_LOGS_ENDPOINT","OTEL_EXPORTER_OTLP_HEADERS","OTEL_EXPORTER_OTLP_TRACES_HEADERS","OTEL_EXPORTER_OTLP_METRICS_HEADERS","OTEL_EXPORTER_OTLP_LOGS_HEADERS","OTEL_EXPORTER_OTLP_TIMEOUT","OTEL_EXPORTER_OTLP_TRACES_TIMEOUT","OTEL_EXPORTER_OTLP_METRICS_TIMEOUT","OTEL_EXPORTER_OTLP_LOGS_TIMEOUT","OTEL_EXPORTER_ZIPKIN_ENDPOINT","OTEL_LOG_LEVEL","OTEL_NO_PATCH_MODULES","OTEL_PROPAGATORS","OTEL_RESOURCE_ATTRIBUTES","OTEL_SERVICE_NAME","OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT","OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT","OTEL_SPAN_EVENT_COUNT_LIMIT","OTEL_SPAN_LINK_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT","OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT","OTEL_TRACES_EXPORTER","OTEL_TRACES_SAMPLER","ParentBasedAlwaysOn","OTEL_TRACES_SAMPLER_ARG","OTEL_LOGS_EXPORTER","OTEL_EXPORTER_OTLP_INSECURE","OTEL_EXPORTER_OTLP_TRACES_INSECURE","OTEL_EXPORTER_OTLP_METRICS_INSECURE","OTEL_EXPORTER_OTLP_LOGS_INSECURE","OTEL_EXPORTER_OTLP_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE","OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE","OTEL_EXPORTER_OTLP_COMPRESSION","OTEL_EXPORTER_OTLP_TRACES_COMPRESSION","OTEL_EXPORTER_OTLP_METRICS_COMPRESSION","OTEL_EXPORTER_OTLP_LOGS_COMPRESSION","OTEL_EXPORTER_OTLP_CLIENT_KEY","OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY","OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY","OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY","OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE","OTEL_EXPORTER_OTLP_PROTOCOL","OTEL_EXPORTER_OTLP_TRACES_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_PROTOCOL","OTEL_EXPORTER_OTLP_LOGS_PROTOCOL","OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE","OTEL_SEMCONV_STABILITY_OPT_IN","parseBoolean","environment","parseNumber","parseStringList","output","separator","givenValue","logLevelMap","setLogLevelFromEnv","parseEnvironment","env","getEnv","globalEnv","CompositePropagator","_propagators","propagators","_fields","BAGGAGE_HEADER","parsePairKeyValue","valueProps","keyPairPart","separatorIndex","metadata","__TYPE__","SpanKind","SamplingDecision","W3CBaggagePropagator","keyPairs","getKeyPairs","pair","headerValue","hValue","serializeKeyPairs","baggageString","keyPair","baggageEntry","SpanStatusCode","sanitizeAttributes","out","isAttributeKey","isAttributeValue","arr_1","arr_1_1","isValidPrimitiveAttributeValue","isHomogeneousAttributeValueArray","otperformance","MILLISECONDS_TO_NANOSECONDS","pow","SECOND_TO_NANOSECONDS","millisToHrTime","epochMillis","epochSeconds","trunc","getTimeOrigin","perf","hrTime","performanceNow","addHrTimes","isTimeInputHrTime","isTimeInput","time1","time2","TMP_EXCEPTION_TYPE","TMP_EXCEPTION_MESSAGE","TMP_EXCEPTION_STACKTRACE","SEMATTRS_EXCEPTION_TYPE","SEMATTRS_EXCEPTION_MESSAGE","SEMATTRS_EXCEPTION_STACKTRACE","Span","parentTracer","spanName","kind","parentSpanId","links","_deprecatedClock","_droppedAttributesCount","_droppedEventsCount","_droppedLinksCount","UNSET","endTime","_ended","_duration","_performanceStartTime","_performanceOffset","_startTimeProvided","_getTime","resource","instrumentationLibrary","_spanLimits","getSpanLimits","_attributeValueLengthLimit","attributeValueLengthLimit","_spanProcessor","getActiveSpanProcessor","onStart","_isSpanEnded","attributeCountLimit","_truncateToSize","attributesOrStartTime","eventCountLimit","droppedAttributesCount","seconds","nanos","hrTimeDuration","onEnd","getTime","msDuration","exception","_truncateToLimitUtil","limit","AlwaysOffSampler","shouldSample","decision","NOT_RECORD","AlwaysOnSampler","RECORD_AND_SAMPLED","delegateHandler","ex","flattenException","stringifyException","globalErrorHandler","ParentBasedSampler","_root","_remoteParentSampled","remoteParentSampled","_remoteParentNotSampled","remoteParentNotSampled","_localParentSampled","localParentSampled","_localParentNotSampled","localParentNotSampled","spanKind","SAMPLED","TraceIdRatioBasedSampler","_ratio","_normalize","_upperBound","_accumulate","ratio","accumulation","pos","FALLBACK_OTEL_TRACES_SAMPLER","AlwaysOn","loadDefaultConfig","buildSamplerFromEnv","forceFlushTimeoutMillis","generalLimits","spanLimits","linkCountLimit","attributePerEventCountLimit","attributePerLinkCountLimit","mergeResourceWithDefaults","AlwaysOff","ParentBasedAlwaysOff","TraceIdRatio","getSamplerProbabilityFromEnv","ParentBasedTraceIdRatio","probability","reconfigureLimits","userConfig","parsedEnvConfig","_f","_m","_l","_k","_h","_g","_j","RandomIdGenerator","generateTraceId","getIdGenerator","generateSpanId","SHARED_CHAR_CODES_ARRAY","bytes","ExportResultCode","Tracer","_tracerProvider","localConfig","perInstanceDefaults","DEFAULT_CONFIG","mergeConfig","_sampler","_generalLimits","_idGenerator","idGenerator","parentSpan","parentSpanContext","INTERNAL","samplingResult","initAttributes","getGeneralLimits","MultiSpanProcessor","_spanProcessors","forceFlush","spanProcessor","shutdown","NoopSpanProcessor","_span","_promise","_resolve","BindOnceFuture","_that","_isCalled","_deferred","ForceFlushState","BatchSpanProcessorBase","_exporter","_isExporting","_finishedSpans","_droppedSpansCount","_maxExportBatchSize","maxExportBatchSize","_maxQueueSize","maxQueueSize","_scheduledDelayMillis","scheduledDelayMillis","_exportTimeoutMillis","exportTimeoutMillis","_shutdownOnce","_shutdown","isCalled","_flushAll","_parentContext","_addToBuffer","onShutdown","_maybeStartTimer","_flushOneBatch","_clearTimer","timer","spans","doExport","export","SUCCESS","pendingResources","_timer","BatchSpanProcessor","onInit","disableAutoFlushOnDocumentHide","_visibilityChangeListener","_pageHideListener","BasicTracerProvider","_registeredSpanProcessors","_tracers","mergedConfig","spanProcessors","activeSpanProcessor","defaultExporter","_buildExporterFromEnv","batchProcessor","schemaUrl","addSpanProcessor","register","_buildPropagatorFromEnv","timeout","timeoutInterval","resolved","_getPropagator","_registeredPropagators","_getSpanExporter","_registeredExporters","uniquePropagatorNames","validPropagators","list","exporterName","exporter","StackContextManager","previousContext","WebTracerProvider","toAttributes","toKeyValue","toAnyValue","stringValue","isInteger","intValue","doubleValue","boolValue","Uint8Array","bytesValue","arrayValue","kvlistValue","sdkSpanToOtlpSpan","encoder","encodeSpanContext","encodeOptionalSpanContext","startTimeUnixNano","encodeHrTime","endTimeUnixNano","timedEvent","timeUnixNano","toOtlpSpanEvent","droppedEventsCount","toOtlpLink","droppedLinksCount","hexToBinary","hexStr","buf","charCodeAt","lo","hrTimeToNanos","NANOSECONDS","BigInt","encodeAsLongBits","low","asUintN","high","encodeTimestamp","identity","optionalHexToBinary","DEFAULT_ENCODER","createResource","ESpanKind","createExportTraceServiceRequest","useLongBits","useHex","getOtlpEncoder","spanRecordsToResourceSpans","readableSpans","scope","resourceMap","readableSpans_1","readableSpans_1_1","ilmMap","instrumentationLibraryKey","records","createResourceMap","entryIterator","scopeResourceSpans","ilmIterator","ilmEntry","readableSpan","transformedSpans","FaroTraceExporter","resultCallback","traceEvent","resourceSpan","scopeSpan","SPAN_KIND_CLIENT","faroEventAttributes","attribute","sendFaroEvents","safeExecuteInTheMiddle","onFinish","preventThrowingError","isWrapped","__original","__wrapped","InstrumentationAbstract","instrumentationName","instrumentationVersion","_wrap","_unwrap","_massWrap","_massUnwrap","setConfig","_diag","_tracer","_meter","_logger","_updateMetricInstruments","setMeterProvider","meterProvider","setLoggerProvider","loggerProvider","getModuleDefinitions","initResult","getConfig","setTracerProvider","tracerProvider","_runSpanCustomizationHook","hookHandler","triggerName","InstrumentationBase","urlMatches","urlToMatch","PerformanceTimingNames","timeInputToHrTime","hrTimeToNanoseconds","urlNormalizingAnchor","AttributeNames","TMP_HTTP_METHOD","TMP_HTTP_URL","TMP_HTTP_HOST","TMP_HTTP_SCHEME","TMP_HTTP_STATUS_CODE","TMP_HTTP_USER_AGENT","TMP_HTTP_RESPONSE_CONTENT_LENGTH","TMP_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED","SEMATTRS_HTTP_METHOD","SEMATTRS_HTTP_URL","SEMATTRS_HTTP_HOST","SEMATTRS_HTTP_SCHEME","SEMATTRS_HTTP_STATUS_CODE","SEMATTRS_HTTP_USER_AGENT","SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH","SEMATTRS_HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED","hasKey","addSpanNetworkEvent","performanceName","refPerfName","perfTime","refTime","refName","PTN","FETCH_START","addSpanNetworkEvents","DOMAIN_LOOKUP_START","DOMAIN_LOOKUP_END","CONNECT_START","SECURE_CONNECTION_START","CONNECT_END","REQUEST_START","RESPONSE_START","RESPONSE_END","encodedLength","ENCODED_BODY_SIZE","decodedLength","DECODED_BODY_SIZE","getOrigin","getResource","spanUrl","startTimeHR","endTimeHR","resources","ignoredResources","parsedSpanUrl","parseUrl","filteredResources","resourceStartTime","resourceEndTime","filterResourcesForSpan","mainRequest","sorted","valueA","valueB","sortResources","corsPreFlightRequest","corsPreFlightRequestEndTime","spanEndTimeHR","bestGap","spanEndTime","minTime","currentGap","findMainRequest","baseURI","release","FetchInstrumentation","moduleName","_usedResources","_tasksCount","_addChildSpan","childSpan","web","ignoreNetworkEvents","_addFinalSpanAttributes","parsedUrl","HTTP_STATUS_TEXT","host","_addHeaders","propagateTraceHeaderCorsUrls","propagateTraceHeaderUrls","propagateTraceHeaderUrl","_clearResources","clearTimingResources","clearResourceTimings","_createSpan","ignoredUrls_1","ignoredUrls_1_1","core","CLIENT","COMPONENT","_findResourceAndAddNetworkEvents","resourcesObserver","_markResourceAsUsed","_endSpan","spanData","performanceEndTime","_patchConstructor","plugin","createdSpan","_prepareSpanData","endSpanOnError","_applyAttributesAfterFetch","endSpanOnSuccess","onSuccess","resClone","clone","resClone4Hook_1","reader_1","getReader","read_1","read","applyCustomAttributesOnSpan","entryTypes","EventNames","XMLHttpRequestInstrumentation","_xhrMem","xhr","shouldPropagateTraceHeaders","headers_1","setRequestHeader","xhrMem","_applyAttributesAfterXHR","_addResourceObserver","PerformanceResourceTiming","createdResources","_cleanPreviousSpanInformation","callbackToRemoveEvents","isUrlIgnored","currentSpan","METHOD_OPEN","_patchOpen","_patchSend","endSpan","sendStartTime","endSpanTimeout","EVENT_ERROR","EVENT_ABORT","onTimeout","EVENT_TIMEOUT","onLoad","EVENT_LOAD","METHOD_SEND","unregister","open","FaroXhrInstrumentation","parentCreateSpan","setSpanStatus","httpStatusCode","fetchCustomAttributeFunctionWithDefaults","_request","setSpanStatusOnFetchError","xhrCustomAttributeFunctionWithDefaults","setSpanStatusOnXMLHttpRequestError","getDefaultOTELInstrumentations","fetchInstrumentationOptions","xhrInstrumentationOptions","sharedOptions","fetchOpts","createFetchInstrumentationOptions","xhrOpts","createXhrInstrumentationOptions","getSamplingDecision","FaroSessionSpanProcessor","processor","TracingInstrumentation","resourceAttributes","SCHEDULED_BATCH_DELAY_MS","instrumentationOptions","flat","instrumentation","enableInstrumentations","registerInstrumentations","kindOf","thing","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isHeaders","allOwnKeys","findKey","isContextDefined","isTypedArray","TypedArray","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","reducedDescriptors","ret","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","token","asap","nextTick","isBuffer","isFormData","isArrayBufferView","ArrayBuffer","isView","isBoolean","isStream","pipe","caseless","assignValue","targetKey","stripBOM","content","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","forEachEntry","matchAll","regExp","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","toFiniteNumber","isFinite","generateString","isSpecCompliantForm","toJSONObject","visit","reducedValue","AxiosError","captureStackTrace","utils","fileName","lineNumber","customProps","axiosError","isVisitable","removeBrackets","renderKey","dots","predicates","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","Buffer","isFlatArray","exposedHelpers","build","encode","charMap","AxiosURLSearchParams","_pairs","toFormData","_encode","buildURL","serializeFn","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","_defineProperty","_objectSpread2","classes","protocols","hasBrowserEnv","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","importScripts","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","toURLEncodedForm","formSerializer","_FormData","rawValue","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","parseHeaders","tokens","tokensRE","parseTokens","deleted","deleteHeader","normalize","format","normalized","formatHeader","targets","asStrings","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","buildAccessors","mapped","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","ERR_BAD_REQUEST","samplesCount","timestamps","firstSampleTS","head","chunkLength","startedAt","bytesCount","passed","freq","lastArgs","threshold","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","progressEventDecorator","throttled","asyncDecorator","isMSIE","port","write","expires","secure","cookie","toGMTString","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","unescape","isURLSameOrigin","xsrfValue","cookies","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","onloadend","responseHeaders","getAllResponseHeaders","responseText","onreadystatechange","responseURL","onabort","ECONNABORTED","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","upload","parseProtocol","composeSignals","_OverloadYield","_wrapAsyncGenerator","AsyncGenerator","resume","_invoke","_awaitAsyncGenerator","_asyncGeneratorDelegate","pump","_asyncIterator","asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","streamChunk","chunk","chunkSize","byteLength","readBytes","iterable","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","readStream","_x","_x2","stream","reader","_x3","trackStream","onProgress","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","highWaterMark","isFetchSupported","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","duplex","supportsResponseStream","resolvers","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","getBodyLength","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","knownAdapters","http","xhrAdapter","fetchAdapter","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","throwIfCancellationRequested","throwIfRequested","dispatchRequest","validators","deprecatedWarnings","validator","formatMessage","opt","ERR_DEPRECATED","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","responseInterceptorChain","chain","getUri","generateHTTPMethod","isForm","CancelToken","_listeners","onfulfilled","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","spread","isAxiosError","formToJSON","getAdapter","pythonMessage","setPythonMessage","javaMessage","setJavaMessage","pythonToJavaMessage","setPythonToJavaMessage","javaToPythonMessage","setJavaToPythonMessage","_jsxs","maxWidth","margin","marginBottom","_axiosError$response","_axiosError$response$","marginRight","_axiosError$response4","_axiosError$response5","_axiosError$response2","_axiosError$response3","_axiosError$response6","_axiosError$response7","coreConfig","browserConfig","initialMetas","createMetas","makeCoreConfig","coreInit","newInternalLogger","newApi","initMessage","V6","V6_data_router","V5","V4","initializeReactRouterInstrumentation","UNSAFE_mapRouteProperties","createBrowserRouter","App","instrumentedRouter","lastRoute","withFaroRouterInstrumentation","getElementById"],"sourceRoot":""}